<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>给 Hexo 主题 Next 侧边栏加上网易音乐</title>
    <url>//2023/11/15/%E7%BB%99-Hexo-%E4%B8%BB%E9%A2%98-Next-%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%8A%A0%E4%B8%8A%E7%BD%91%E6%98%93%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>Next 官方提供的<a href="https://theme-next.js.org/docs/advanced-settings/custom-files#Custom-File-Support">文档</a>，据文档描述，可以直接添加 <code>source/_data/sidebar.njk</code> 文件并直接编写代码，并且取消配置文件中的相关注释, 或者使用 <a href="https://theme-next.js.org/docs/advanced-settings/injects">Inject</a> 风格.</p>
<h1 id="编写"><a href="#编写" class="headerlink" title="编写"></a>编写</h1><h2 id="基础方式"><a href="#基础方式" class="headerlink" title="基础方式"></a>基础方式</h2><p>直接保存网易提供的外链代码为  <code>/source/_data/sidebar.njk</code> 文件, 并取消配置文件相关注释:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> </span><br><span class="line">width=<span class="number">330</span> </span><br><span class="line">height=<span class="number">86</span> </span><br><span class="line">src=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=1407540299&amp;auto=1&amp;height=66&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>效果
<img data-src="https://img-gh.siweipancc.com/20231116/image.1jzkp2sfsb5s.z4sbsddp5jk.png" alt="image"></p>
<h2 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h2><p>上边的代码有个问题是每次更换歌曲需要动源文件，对上边的代码进行 Inject 风格化 并重命名为 <code>music_netEase.njk</code>, 改动如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">&quot;no&quot;</span> border=<span class="string">&quot;0&quot;</span> marginwidth=<span class="string">&quot;0&quot;</span> marginheight=<span class="string">&quot;0&quot;</span> </span><br><span class="line">width=&#123;&#123;_width+<span class="number">20</span>&#125;&#125; </span><br><span class="line">height=&#123;&#123;_height+<span class="number">20</span>&#125;&#125; </span><br><span class="line">src=<span class="string">&quot;//music.163.com/outchain/player?type=2&amp;id=&#123;&#123;_id&#125;&#125;&amp;auto=0&amp;height=&#123;&#123;_height&#125;&#125;&quot;</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>
<p>以下划线开始的字符为动态渲染的变量，并增加以下 <code>/script/inject.js</code> <a href="https://hexo.io/docs/plugins.html#Script">script 脚本</a>:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;theme_inject&#x27;</span>, <span class="keyword">function</span> (<span class="params">injects</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> config = hexo.<span class="property">config</span>.<span class="property">theme_config</span>[<span class="string">&#x27;net_eas&#x27;</span>] || &#123;<span class="attr">enable</span>: <span class="literal">false</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span> (hexo.<span class="property">config</span>.<span class="property">theme</span> === <span class="string">&#x27;next&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (config.<span class="property">enable</span>) &#123;</span><br><span class="line">            <span class="title function_">register_netEas</span>(injects, config);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">register_netEas</span>(<span class="params">injects, config</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> sidebar = hexo.<span class="property">config</span>.<span class="property">theme_config</span>.<span class="property">sidebar</span>;</span><br><span class="line">    <span class="keyword">let</span> id = config.<span class="property">id</span>;</span><br><span class="line">    <span class="keyword">let</span> width = config.<span class="property">width</span> ? config.<span class="property">width</span> : <span class="number">260</span>;</span><br><span class="line">    <span class="keyword">let</span> height;</span><br><span class="line">    <span class="keyword">let</span> style = config.<span class="property">style</span> ? config.<span class="property">style</span> : <span class="string">&#x27;compact&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id === <span class="literal">undefined</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        id = <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(id + <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        width = <span class="title class_">Number</span>.<span class="built_in">parseInt</span>(width + <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        hexo.<span class="property">log</span>.<span class="title function_">error</span>(e)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// adjust width</span></span><br><span class="line">    <span class="keyword">const</span> accept_iframe_width_max = sidebar.<span class="property">width</span> - <span class="number">2</span> * sidebar.<span class="property">padding</span> - <span class="number">2</span> * <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (width &gt; accept_iframe_width_max) &#123;</span><br><span class="line">        width = accept_iframe_width_max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// adjust height</span></span><br><span class="line">    <span class="keyword">if</span> (style === <span class="string">&#x27;compact&#x27;</span>) &#123;</span><br><span class="line">        height = <span class="number">66</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (style === <span class="string">&#x27;mini&#x27;</span>) &#123;</span><br><span class="line">        height = <span class="number">32</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    injects.<span class="property">sidebar</span>.<span class="title function_">file</span>(<span class="string">&#x27;music_netEase&#x27;</span>, <span class="string">&#x27;source/_data/music_netEase.njk&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">_id</span>: id,</span><br><span class="line">        <span class="attr">_width</span>: width,</span><br><span class="line">        <span class="attr">_height</span>: height,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>并增加对应的配置项(_config.next.yml)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 网易云音乐</span></span><br><span class="line"><span class="attr">net_eas:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">1925759962</span></span><br><span class="line">  <span class="comment"># compact | mini</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">compact</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>至此，我们增加了三个自适应动态选项：</p>
<ul>
<li>enable: 开启或者关闭该组件;</li>
<li>id: 歌曲 ID;</li>
<li>style: compact 显示大图标 | mini 不显示大图标;</li>
</ul>
<h1 id="注"><a href="#注" class="headerlink" title="注"></a>注</h1><p>网易提供的外链官方限制？最小宽度 260, 实际可以更小, 在 Next 主题的 <strong>Gemini</strong> Schemes 下 , 其内容宽度此时会变成 <code>300 - 2 * 18 - 2 * 10 = 244</code> ， iframe 宽度是 264, 均略小于网易提供的设置, 但实测不影响使用, 一种改进是修改主题配置的 sidebar 设置的 <strong>width</strong> 跟 <strong>padding</strong> .</p>
<p>附，mini 效果图:</p>
<p><img data-src="https://img-gh.siweipancc.com/20231116/image.2fz7k112nxa8.y5qeuy66amo.png" alt="image"></p>
<p><a href="https://gist.github.com/siweipancc/a5354342e2b2758210ce14ad4eb44df8">music_netEase.njk</a></p>
<p><a href="https://gist.github.com/siweipancc/82094c3b70c58fc9565f3e44bfbd4d48">inject.js</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>插件</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Hexo 插件</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 自动化部署</title>
    <url>//2023/11/16/Hexo-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="GitHub-Action"><a href="#GitHub-Action" class="headerlink" title="GitHub Action"></a>GitHub Action</h1><p>首先是 Hexo 提供的官方 GitHub Pages <a href="https://hexo.io/docs/github-pages">配置</a> </p>
<h2 id="pages-yml"><a href="#pages-yml" class="headerlink" title="pages.yml"></a>pages.yml</h2><p>该配置文件需做如下调整</p>
<span id="more"></span>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v2</span> <span class="comment"># 需要调整到 v3 版本</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span>  <span class="comment"># 需要调整到 v3 版本</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Upload</span> <span class="string">Pages</span> <span class="string">artifact</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/upload-pages-artifact@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">./public</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">needs:</span> <span class="string">build</span></span><br><span class="line">    <span class="attr">permissions:</span></span><br><span class="line">      <span class="attr">pages:</span> <span class="string">write</span></span><br><span class="line">      <span class="attr">id-token:</span> <span class="string">write</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">github-pages</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">$&#123;&#123;</span> <span class="string">steps.deployment.outputs.page_url</span> <span class="string">&#125;&#125;</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">deployment</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/deploy-pages@v2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>以上把代码与发布 target 限定在同一个仓库, 即完全暴露了配置与代码.</p>
<h1 id="分离源代码仓库与页面文件仓库"><a href="#分离源代码仓库与页面文件仓库" class="headerlink" title="分离源代码仓库与页面文件仓库"></a>分离源代码仓库与页面文件仓库</h1><h2 id="非官方插件"><a href="#非官方插件" class="headerlink" title="非官方插件"></a>非官方插件</h2><p>第一种方式是使用非官方插件 <a href="https://github.com/cpina/github-action-push-to-another-repository">github-action-push-to-another-repository</a>.</p>
<h3 id="pages-yml-1"><a href="#pages-yml-1" class="headerlink" title="pages.yml"></a>pages.yml</h3><p>做如下调整:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"><span class="comment">#      - name: Upload Pages artifact</span></span><br><span class="line"><span class="comment">#        uses: actions/upload-pages-artifact@v2</span></span><br><span class="line"><span class="comment">#        with:</span></span><br><span class="line"><span class="comment">#          path: ./public</span></span><br><span class="line"><span class="comment">#  deploy:</span></span><br><span class="line"><span class="comment">#    needs: build</span></span><br><span class="line"><span class="comment">#    permissions:</span></span><br><span class="line"><span class="comment">#      pages: write</span></span><br><span class="line"><span class="comment">#      id-token: write</span></span><br><span class="line"><span class="comment">#    environment:</span></span><br><span class="line"><span class="comment">#      name: github-pages</span></span><br><span class="line"><span class="comment">#      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span></span><br><span class="line"><span class="comment">#    runs-on: ubuntu-latest</span></span><br><span class="line"><span class="comment">#    steps:</span></span><br><span class="line"><span class="comment">#      - name: Deploy to GitHub Pages</span></span><br><span class="line"><span class="comment">#        id: deployment</span></span><br><span class="line"><span class="comment">#        uses: actions/deploy-pages@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Pushes</span> <span class="string">to</span> <span class="string">public</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">cpina/github-action-push-to-another-repository@main</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">API_TOKEN_GITHUB:</span> &lt;%<span class="language-ruby"> 能访问目标仓库授权 token </span>%&gt;</span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">source-directory:</span> <span class="string">&#x27;public&#x27;</span></span><br><span class="line">          <span class="attr">destination-github-username:</span> &lt;%<span class="language-ruby"> 目标仓库用户 </span>%&gt;</span><br><span class="line">          <span class="attr">destination-repository-name:</span> &lt;%<span class="language-ruby"> 目标仓库 </span>%&gt;</span><br><span class="line">          <span class="attr">user-email:</span> &lt;%<span class="language-ruby"> 提交的用户邮件 </span>%&gt;</span><br><span class="line">          <span class="attr">target-branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p>别忘了手动设置 GitHub Pages 到源代码模式:
<img data-src="https://img-gh.siweipancc.com//20231116/image.7gimdytyghs0.png" alt="image"></p>
<h2 id="官方插件"><a href="#官方插件" class="headerlink" title="官方插件"></a>官方插件</h2><p>第二种方式是使用官方插件 <a href="https://hexo.io/docs/one-command-deployment">one-command-deployment</a>.</p>
<h3 id="pages-yml-2"><a href="#pages-yml-2" class="headerlink" title="pages.yml"></a>pages.yml</h3><p>做如下调整:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="string">recursive</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">16.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;16&#x27;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.OS</span> <span class="string">&#125;&#125;-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line"><span class="comment">#      - name: Upload Pages artifact</span></span><br><span class="line"><span class="comment">#        uses: actions/upload-pages-artifact@v2</span></span><br><span class="line"><span class="comment">#        with:</span></span><br><span class="line"><span class="comment">#          path: ./public</span></span><br><span class="line"><span class="comment">#  deploy:</span></span><br><span class="line"><span class="comment">#    needs: build</span></span><br><span class="line"><span class="comment">#    permissions:</span></span><br><span class="line"><span class="comment">#      pages: write</span></span><br><span class="line"><span class="comment">#      id-token: write</span></span><br><span class="line"><span class="comment">#    environment:</span></span><br><span class="line"><span class="comment">#      name: github-pages</span></span><br><span class="line"><span class="comment">#      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;</span></span><br><span class="line"><span class="comment">#    runs-on: ubuntu-latest</span></span><br><span class="line"><span class="comment">#    steps:</span></span><br><span class="line"><span class="comment">#      - name: Deploy to GitHub Pages</span></span><br><span class="line"><span class="comment">#        id: deployment</span></span><br><span class="line"><span class="comment">#        uses: actions/deploy-pages@v2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      - name: Pushes to public repository</span></span><br><span class="line"><span class="comment">#        uses: cpina/github-action-push-to-another-repository@main</span></span><br><span class="line"><span class="comment">#        env:</span></span><br><span class="line"><span class="comment">#          API_TOKEN_GITHUB: &#x27;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&#x27;</span></span><br><span class="line"><span class="comment">#        with:</span></span><br><span class="line"><span class="comment">#          source-directory: &#x27;public&#x27;</span></span><br><span class="line"><span class="comment">#          destination-github-username: &#x27;siweipancc&#x27;</span></span><br><span class="line"><span class="comment">#          destination-repository-name: &#x27;blog-hexo-public&#x27;</span></span><br><span class="line"><span class="comment">#          user-email: siweipancc@hotmail.com</span></span><br><span class="line"><span class="comment">#          target-branch: master</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Pushes</span> <span class="string">to</span> <span class="string">public</span> <span class="string">repository</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">exec</span> <span class="string">hexo</span> <span class="string">deploy</span></span><br></pre></td></tr></table></figure>

<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>补充如下信息:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"> <span class="attr">repo:</span> <span class="string">https://oauth2:&lt;%</span> <span class="string">能访问目标仓库授权</span> <span class="string">token</span> <span class="string">%&gt;@github.com/&lt;%</span> <span class="string">目标仓库用户</span> <span class="string">%&gt;/&lt;%</span> <span class="string">目标仓库</span> <span class="string">%&gt;.git</span></span><br><span class="line"> <span class="attr">message:</span> <span class="string">&#x27;auto update&#x27;</span></span><br><span class="line"> <span class="attr">name:</span> <span class="string">&#x27;&lt;% 提交的用户 %&gt;&#x27;</span></span><br><span class="line"> <span class="attr">email:</span> <span class="string">&#x27;&lt;% 提交的用户邮件 %&gt;&#x27;</span></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<p><strong>注</strong>: </p>
<ul>
<li>repo 使用 oauth2 协议, <a href="https://github.com/hexojs/hexo/issues/4757#issuecomment-901613964">相关讨论</a>;</li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>自动化部署</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub Action</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 文件链接</title>
    <url>//2023/11/16/Windows-%E6%96%87%E4%BB%B6%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="前叙"><a href="#前叙" class="headerlink" title="前叙"></a>前叙</h1><p>本文也可作为在 Unix 系统下软硬链接的一部分指导资料. </p>
<p>Windows Vista 以上, NTFS 文件系统支持三种类型的文件链接: 硬链接、交汇点(目录链接) 和 符号链接. </p>
<ol>
<li>符号链接<ol>
<li>符号链接是指向<strong>另一个</strong>文件系统对象的文件系统对象</li>
<li>链接目标为普通文件或目录</li>
<li>可以跨卷</li>
<li>与 <strong>UNIX</strong> 操作系统兼容</li>
</ol>
</li>
<li>硬链接<ol>
<li>多个路径引用<strong>同一卷</strong>中的单个<strong>文件</strong></li>
<li>对硬链接文件所做的任何更改具有立即的传播性</li>
</ol>
</li>
<li>交汇点<ol>
<li>与硬链接相同, 引用的存储对象是单独的<strong>目录</strong></li>
<li>可以跨卷</li>
</ol>
</li>
</ol>
<span id="more"></span>

<hr>
<h1 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h1><p>这里主要关注 CMD 文档  与 fileIo 文档. </p>
<h2 id="链接窗口"><a href="#链接窗口" class="headerlink" title="链接窗口"></a>链接窗口</h2><p>以下是 Windows 下一个经典的 <strong>mklink</strong> 提示:</p>
<p><img data-src="https://img-gh.siweipancc.com/20231116/image.25zbnuv7jy00.png" alt="image"></p>
<h2 id="文档与工具"><a href="#文档与工具" class="headerlink" title="文档与工具"></a>文档与工具</h2><p>与之对应的的 API 文档列表:</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/mklink#related-links">mklink</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows/win32/fileio/symbolic-links">symbolic-links</a></li>
<li><a href="https://learn.microsoft.com/en-us//windows/win32/fileio/reparse-points">Reparse Points</a><ul>
<li><a href="https://learn.microsoft.com/en-us/windows/win32/fileio/reparse-point-tags">Reparse Point Tags</a></li>
<li><a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/e57148b1-300b-4d1e-8f67-091de2de815e">Reparse Point Data Structures</a><ul>
<li><a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/c8e77b37-3909-4fe6-a4ea-2b9d423b1ee4">Reparse Tags</a></li>
</ul>
</li>
<li><a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/ca069dad-ed16-42aa-b057-b6b207f447cc">Mount Point Reparse Data Buffer</a></li>
</ul>
</li>
<li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil">fsutil</a><ul>
<li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-reparsepoint">fsutil-reparsepoint</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-hardlink">fsutil-hardlink</a></li>
</ul>
</li>
<li><a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/46021e52-29b1-475c-b6d3-fe5497d23277">FileHardLinkInformation</a></li>
</ul>
<p>安装相应的辅助工具:</p>
<ul>
<li><a href="https://www.voidtools.com/forum/viewtopic.php?f=12&t=9787">Everything 1.5 Alpha</a></li>
<li><a href="https://schinagl.priv.at/nt/hardlinkshellext/linkshellextension.html">link-shell-extension</a></li>
</ul>
<p>link-shell-extension 需要开启默认图标;
Everything 需要在 工具-选项-索引-属性 添加 <code>Reparse Tag</code> 与 <code>Reparse Target</code> 并添加到显示列中(右键表头勾选).
软链接 与 fsutil 需要权限提升</p>
<hr>
<h1 id="符号链接"><a href="#符号链接" class="headerlink" title="符号链接"></a>符号链接</h1><p>首先我们准备最大深度为 4 的文件树(各 txt 内容为文件名)</p>
<p><img data-src="https://img-gh.siweipancc.com/20231117/image.19dtvmqib8f4.png" alt="image"></p>
<hr>
<h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="创建链接"><a href="#创建链接" class="headerlink" title="创建链接"></a>创建链接</h3><p>在深度 0 的 wip 文件夹中</p>
<ul>
<li>以<strong>相对路径</strong>创建一个符号链接 LF10.txt, 链接文件夹 DL00 中的文件 F10.txt (深度1): <code>mklink LF10.txt DL00\FL10.txt</code></li>
<li>以<strong>绝对路径</strong>创建一个符号链接 ALF10.txt, 链接文件夹 DL00 中的文件 F10.txt (深度1): <code>mklink ALF10.txt D:\wip\DL00\FL10.txt</code></li>
</ul>
<p><img data-src="https://img-gh.siweipancc.com/20231117/Windows-%E6%96%87%E4%BB%B6%E9%93%BE%E6%8E%A5-%E8%BD%AF0.1wy71sb8j41s.png" alt="Windows-文件链接-软0"></p>
<h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><p>将链接 LF10.txt 称为 <b class="r1">A</b>,链接 ALF10.txt 称为 <b class="r2">B</b>, 目标 F10.txt 称为 <b class="r0">T</b></p>
<p>存在以下规则:</p>
<ol>
<li><b class="r1">A</b> 与 <b class="r0">T</b> 的内容是一致的 </li>
<li><b class="r2">B</b> 与 <b class="r0">T</b> 的内容是一致的</li>
<li>修改其中一个内容, 它们之间的内容也会同步</li>
<li>重命名 <b class="r1">A</b>, 规则 1,3 仍然成立</li>
<li>重命名 <b class="r2">B</b>, 规则 2,3 仍然成立</li>
<li>规则 1|3|4 的表现类似为 <b class="r1">A</b> 是对 <b class="r0">T</b> 的快捷方式</li>
<li>规则 2|3|5 的表现类似为 <b class="r2">B</b> 是对 <b class="r0">T</b> 的快捷方式</li>
<li>当 <b class="r0">T</b> 为可读写, 对 <b class="r1">A</b> 设置只读模式并不生效, 且该属性不同步到 <b class="r2">B</b> 或者 <b class="r0">T</b>, 对 <b class="r0">T</b> 的修改遵循规则 3 </li>
<li>当 <b class="r0">T</b> 为可读写, 对 <b class="r2">B</b> 设置只读模式并不生效, 且该属性不同步到 <b class="r1">A</b> 或者 <b class="r0">T</b>, 对 <b class="r0">T</b> 的修改遵循规则 3</li>
</ol>
<p>同时存在以下规则:</p>
<ol>
<li>重命名 <b class="r0">T</b>, <b class="r1">A</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开快捷属性, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>重命名 <b class="r0">T</b>, <b class="r2">B</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开快捷属性, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>移动了 <b class="r0">T</b>, <b class="r1">A</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开快捷属性, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>移动了 <b class="r0">T</b>, <b class="r2">B</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开快捷属性, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>规则 1|2|3|4 中在程序开发中都称为对 T 的 <strong>移动</strong> 操作</li>
<li>在快捷方式创建之后, 当我们移动目标之后时, 快捷方式的文件目标属性会<strong>同步</strong>修改. 这与规则 1|2|3|4 的表现不同</li>
<li>移动了 <b class="r1">A</b>, <b class="r1">A</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开快捷属性, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>移动了 <b class="r2">B</b>, <b class="r2">B</b> 仍<b class="pass">可以</b>定位到 <b class="r0">T</b> 的内容</li>
<li>当 <b class="r0">T</b> 为只读,  对 <b class="r1">A</b> 设置可写模式并不生效, 且该属性不同步到 <b class="r2">B</b> 或者 <b class="r0">T</b></li>
<li>当 <b class="r0">T</b> 为只读,  对 <b class="r2">B</b> 设置可写模式并不生效, 且该属性不同步到 <b class="r1">A</b> 或者 <b class="r0">T</b></li>
</ol>
<h4 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h4><p>在 <strong>Everything</strong> 中 搜索 <code>parent:D:\wip regex:^(A)&#123;0,1&#125;LF10.txt$</code>, 可以较明显的看到元素据 Reparse Tag 与 Reparse Target.</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>路径</th>
<th>大小</th>
<th>Reparse Tag</th>
<th>Reparse Target</th>
</tr>
</thead>
<tbody><tr>
<td>LF10.txt</td>
<td>D:\wip\</td>
<td>0</td>
<td><span class="warn">0xA000000C</span></td>
<td>DL00\FL10.txt</td>
</tr>
<tr>
<td>ALF10.txt</td>
<td>D:\wip\</td>
<td>0</td>
<td><span class="warn">0xA000000C</span></td>
<td>D:\wip\DL00\FL10.txt</td>
</tr>
</tbody></table>
<p>或者使用 <strong>fsutil</strong> <code>fsutil reparsePoint query .\LF10.txt</code> 与 <code> fsutil reparsePoint query .\ALF10.txt</code>
<img data-src="https://img-gh.siweipancc.com/20231117/image.35mepah9dz20.png" alt="image"></p>
<p>根据 MSN 文档的结构定义(<a href="https://learn.microsoft.com/en-us/windows/win32/fileio/reparse-point-tags">Reparse Point Tags</a>,
<a href="https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/e57148b1-300b-4d1e-8f67-091de2de815e">Reparse Point Data Structures</a>), 可以分解出下边的结构示意图:</p>
<p><img data-src="https://img-gh.siweipancc.com/20231117/image.3g4lwsvvbmg0.png" alt="image"></p>
<p><img data-src="https://img-gh.siweipancc.com/20231117/image.4rlcpgamewm0.png" alt="image"></p>
<hr>
<h2 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h2><p>该节与上一节内容一致, 因此只记录实操命令.</p>
<h3 id="创建链接-1"><a href="#创建链接-1" class="headerlink" title="创建链接"></a>创建链接</h3><p>以<strong>相对路径</strong>创建一个符号链接 LDL10, 链接文件夹 DL00 中的文件夹 DL10 (深度1): <code>mklink /d LDL10 DL00\DL10</code>.</p>
<p>以<strong>绝对路径</strong>创建一个符号链接 ALDL10, 链接文件夹 DL00 中的文件夹 DL10 (深度1): <code>mklink /d ALDL10 D:\wip\DL00\DL10</code>.</p>
<h4 id="规则-1"><a href="#规则-1" class="headerlink" title="规则"></a>规则</h4><p>略</p>
<h4 id="元数据-1"><a href="#元数据-1" class="headerlink" title="元数据"></a>元数据</h4><p>在 <strong>Everything</strong> 中 搜索 <code>parent:D:\wip dir: regex:^(A)&#123;0,1&#125;LDL10$ </code>, 可以较明显的看到元素据 Reparse Tag 与 Reparse Target.</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>路径</th>
<th>大小</th>
<th>Reparse Tag</th>
<th>Reparse Target</th>
</tr>
</thead>
<tbody><tr>
<td>LDL10</td>
<td>D:\wip\</td>
<td>0</td>
<td><span class="warn">0xA000000C</span></td>
<td>DL00\DL10</td>
</tr>
<tr>
<td>ALDL10</td>
<td>D:\wip\</td>
<td>0</td>
<td><span class="warn">0xA000000C</span></td>
<td>D:\wip\DL00\DL10</td>
</tr>
</tbody></table>
<p>或者使用 <strong>fsutil</strong> <code>fsutil reparsePoint query LDL10</code> 与 <code> fsutil reparsePoint query ALDL10</code>
<img data-src="https://img-gh.siweipancc.com/20231118/image.51n7ht88bxk0.png" alt="image"></p>
<hr>
<h1 id="目录链接"><a href="#目录链接" class="headerlink" title="目录链接"></a>目录链接</h1><ol>
<li>目录链接<strong>仅能</strong>在<b class="warn">目录</b>上创建</li>
<li>可以使用相对路径创建, 但创建成功之后表示为<strong>绝对</strong>路径</li>
<li><b class="pass">可以</b>跨分区创建</li>
</ol>
<h2 id="创建链接-2"><a href="#创建链接-2" class="headerlink" title="创建链接"></a>创建链接</h2><p>键入 <code>cd /d D:\wip\DL00</code> 切换工作目录</p>
<ul>
<li>以<strong>相对路径</strong>创建一个目录链接 MDL20,  链接文件夹 DL00 中的目录 DL20 (深度2): <code>mklink /j MDL20 DL10\DL20</code></li>
<li>以<strong>绝对路径</strong>创建一个目录链接 AMDL20, 链接文件夹 DL00 中的目录 DL20 (深度2): <code>mklink /j AMDL20 D:\wip\DL00\DL10\DL20</code></li>
</ul>
<p><img data-src="https://img-gh.siweipancc.com/20231118/image.24n2r9zlf03k.png" alt="image"></p>
<h2 id="规则-2"><a href="#规则-2" class="headerlink" title="规则"></a>规则</h2><p>将链接 MDL20 称为 <b class="r1">A</b>,链接 AMDL20 称为 <b class="r2">B</b>, 目标 DL20 称为 <b class="r0">T</b></p>
<p>存在以下规则:</p>
<ol>
<li><b class="r1">A</b> 与 <b class="r0">T</b> 的内容是一致的</li>
<li><b class="r2">B</b> 与 <b class="r0">T</b> 的内容是一致的</li>
<li>修改其中一个内容, 它们之间的内容也会同步</li>
<li>移动了 <b class="r1">A</b>, <b class="r1">A</b> 将<b class="pass">可以</b>定位到 <b class="r0">T</b> 的内容</li>
<li>移动了 <b class="r2">B</b>, <b class="r2">B</b> 仍<b class="pass">可以</b>定位到 <b class="r0">T</b> 的内容</li>
</ol>
<p>同时存在以下规则:</p>
<ol>
<li>重命名 <b class="r0">T</b>, <b class="r1">A</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开目录, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>重命名 <b class="r0">T</b>, <b class="r2">B</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开目录, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>移动了 <b class="r0">T</b>, <b class="r1">A</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开目录, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>移动了 <b class="r0">T</b>, <b class="r2">B</b> 将<b class="warn">无法</b>定位到 <b class="r0">T</b> 的内容, 尝试打开目录, 资源管理器将抛出一个<span class="warn">错误</span></li>
<li>规则 1|2|3|4 中在程序开发中都称为对 T 的 <strong>移动</strong> 操作</li>
</ol>
<h2 id="元数据-2"><a href="#元数据-2" class="headerlink" title="元数据"></a>元数据</h2><p>在 <strong>Everything</strong> 中 搜索 <code>parent:D:\wip\DL00 regex:^(A)&#123;0,1&#125;MDL20$</code>, 可以较明显的看到元素据 Reparse Tag 与 Reparse Target.</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>路径</th>
<th>大小</th>
<th>Reparse Tag</th>
<th>Reparse Target</th>
</tr>
</thead>
<tbody><tr>
<td>MDL20</td>
<td>D:\wip\DL00\</td>
<td>0</td>
<td><span class="warn">0xA0000003</span></td>
<td>D:\wip\DL00\DL10\DL20</td>
</tr>
<tr>
<td>AMDL20</td>
<td>D:\wip\DL00\</td>
<td>0</td>
<td><span class="warn">0xA0000003</span></td>
<td>D:\wip\DL00\DL10\DL20</td>
</tr>
</tbody></table>
<p>或者使用 <strong>fsutil</strong> <code>fsutil reparsePoint query MDL20</code> 与 <code>fsutil reparsePoint query AMDL20</code></p>
<p><img data-src="https://img-gh.siweipancc.com/20231118/image.4z3caaegvyk0.png" alt="image"></p>
<hr>
<h1 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h1><ol>
<li>硬链接<strong>仅能</strong>在<b class="warn">文件</b>上创建</li>
<li>可以使用相对路径创建, 但创建成功之后表示为(相当于当前存储分区的根)<strong>绝对</strong>路径</li>
<li><b class="warn">不能</b>跨分区创建</li>
</ol>
<h2 id="创建链接-3"><a href="#创建链接-3" class="headerlink" title="创建链接"></a>创建链接</h2><p>键入 <code>cd /d D:\wip\DL00</code> 切换工作目录</p>
<ul>
<li>以<strong>相对路径</strong>创建一个硬链接 HDL20.txt, 链接文件夹 DL00 中的文件 DL20.txt (深度2): <code>mklink /h HDL20.txt DL10\DL20.txt</code></li>
<li>以<strong>绝对路径</strong>创建一个硬链接 AHDL20.txt, 链接文件夹 DL00 中的文件 DL20.txt (深度2): <code>mklink /h AHDL20.txt D:\wip\DL00\DL10\DL20.txt</code></li>
</ul>
<p>注: </p>
<ul>
<li>硬链接<b class="warn">没有</b>快捷属性页</li>
<li>硬链接的所每个连接属性页的 <strong>引用基数</strong> 跟 <strong>引用位置列表</strong> 都是<b class="pass">一致</b>的</li>
</ul>
<h2 id="规则-3"><a href="#规则-3" class="headerlink" title="规则"></a>规则</h2><p>将链接 HDL20.txt 称为 <b class="r1">A</b>,链接 AHDL20.txt 称为 <b class="r2">B</b>, 目标 DL20.txt 称为 <b class="r3">C</b></p>
<p>存在以下规则:</p>
<ol>
<li><b class="r1">A</b>, <b class="r2">B</b>, <b class="r3">C</b> 指向文件系统中的同一个文件对象, 表现为<strong>指针</strong></li>
<li><b class="r1">A</b>, <b class="r2">B</b>, <b class="r3">C</b> 的值修改都会立即同步(到引用位置列表的每一目标)</li>
<li><b class="r1">A</b>, <b class="r2">B</b>, <b class="r3">C</b> 的属性修改都会立即同步(到引用位置列表的每一目标)</li>
<li><b class="r1">A</b>, <b class="r2">B</b>, <b class="r3">C</b> 仅占用一份存储空间, 当所有链接被删除(引用为0)时, 存储才真正释放</li>
<li><b class="r1">A</b>, <b class="r2">B</b>, <b class="r3">C</b> 移动后仍然能正常工作</li>
</ol>
<h2 id="元数据-3"><a href="#元数据-3" class="headerlink" title="元数据"></a>元数据</h2><p>在 <strong>Everything</strong> 中 搜索 <code>D:\wip\DL00 DL20.txt file: </code>, 可以较明显的看到元素据 Reparse Tag 与 Reparse Target.</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>路径</th>
<th>大小</th>
<th>Hard Link Count</th>
<th>Hard Link Filenames</th>
</tr>
</thead>
<tbody><tr>
<td>DL20.txt</td>
<td>D:\wip\DL00\DL10\</td>
<td>1 KB</td>
<td>3</td>
<td>\wip\DL00\AHDL20.txt;\wip\DL00\HDL20.txt;\wip\DL00\DL10\DL20.txt</td>
</tr>
<tr>
<td>HDL20.txt</td>
<td>D:\wip\DL00</td>
<td>1 KB</td>
<td>3</td>
<td>\wip\DL00\AHDL20.txt;\wip\DL00\HDL20.txt;\wip\DL00\DL10\DL20.txt</td>
</tr>
<tr>
<td>AHDL20.txt</td>
<td>D:\wip\DL00</td>
<td>1 KB</td>
<td>3</td>
<td>\wip\DL00\AHDL20.txt;\wip\DL00\HDL20.txt;\wip\DL00\DL10\DL20.txt</td>
</tr>
</tbody></table>
<p>或者使用 <strong>fsutil</strong> <code>fsutil.exe  hardlink list .\HDL20.txt</code>
<img data-src="https://img-gh.siweipancc.com/20231118/image.6f66zwtj4qw0.png" alt="image"></p>
<hr>
<h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p>Reparse Tag:</p>
<ol>
<li>IO_REPARSE_TAG_MOUNT_POINT: 0xA0000003</li>
<li>IO_REPARSE_TAG_SYMLINK: 0xA000000C</li>
</ol>
<p>注:</p>
<ol>
<li>在遵循创建规则的情况下, 各种链接可嵌套</li>
<li>尽量使用绝对路径创建目录(符号)链接</li>
<li>遵循不移动符号链接目标的原则</li>
<li>符号链接在 SMB 共享时不生效(文件对象路径由客服端计算)</li>
</ol>
<p>提问:</p>
<ol>
<li>在一个符号链接上创建符号链接的结果</li>
<li>目录链接产生循环节点的后果</li>
</ol>
<style type="text/css" >
.warn{
color:#e74c3c
}
.pass{
color:#3498db
}
.r0{
color:#f39c12
}
.r1{
color:#34495e
}
.r2{
color:#95a5a6
}
.r3{
color:#008272
}
</style>
]]></content>
      <categories>
        <category>Windows</category>
        <category>路径</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Windows 文件链接</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows 系统中的文件路径格式</title>
    <url>//2023/11/15/Windows-%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p><a href="https://learn.microsoft.com/en-us/dotnet/standard/io/file-path-formats">官方链接</a></p>
<p>标准的 DOS 路径可由以下三部分组成：</p>
<ul>
<li>卷号或驱动器号，后跟卷分隔符 (:)。</li>
<li>目录名称。 目录分隔符用来分隔嵌套目录层次结构中的子目录。</li>
<li>可选的文件名。 目录分隔符用来分隔文件路径和文件名。</li>
</ul>
<p>如果以上三项都存在，则为<strong>绝对路径</strong>。 如未指定卷号或驱动器号，且目录名称的开头是目录分隔符，则路径属于当前驱动器根路径上的相对路径。 否则路径相对于当前目录。</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>路径</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>C:\Projects\apilibrary\apilibrary.sln</td>
<td>C: 驱动器的根目录中的<strong>绝对</strong>文件路径。</td>
</tr>
<tr>
<td>\Program Files\Custom Utilities\StringFinder.exe</td>
<td>当前驱动器根路径上的<strong>相对</strong>路径。</td>
</tr>
<tr>
<td>2018\January.xlsx</td>
<td>指向当前目录的子目录中的文件的<strong>相对</strong>路径。</td>
</tr>
<tr>
<td>..\Publications\TravelBrochure.pdf</td>
<td>指向从当前目录开始的目录中的文件的<strong>相对</strong>路径。</td>
</tr>
<tr>
<td>C:\Projects\apilibrary\apilibrary.sln</td>
<td>C: 驱动器的根目录中的文件的<strong>绝对</strong>路径。</td>
</tr>
<tr>
<td>C:Projects\apilibrary\apilibrary.sln</td>
<td>C: 驱动器的当前目录中的<strong>相对</strong>路径。</td>
</tr>
</tbody></table>
<h1 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h1><p>对于以下目录:
<img data-src="https://img-gh.siweipancc.com/20231116/image.1sexxhe81xpc.png" alt="image"></p>
<p>如果我们想导航到上级目录, 可以键入 <code>cd ..\</code>|<code>cd /d ..\</code>
<img data-src="https://img-gh.siweipancc.com/20231116/image.muhil93clm8.png" alt="image"></p>
<p>如果我们想导航到 Space 目录, 可以键入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> Space</span><br><span class="line"><span class="built_in">cd</span> /d Space</span><br><span class="line"><span class="built_in">cd</span> .\Space</span><br><span class="line"><span class="built_in">cd</span> /d .\Space</span><br><span class="line"><span class="built_in">cd</span> D:Space</span><br><span class="line"><span class="built_in">cd</span> /d D:Space</span><br><span class="line"><span class="built_in">cd</span> D:\JetBrains\Toolbox\apps\Toolbox</span><br><span class="line"><span class="built_in">cd</span> /d D:\JetBrains\Toolbox\apps\Toolbox</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-gh.siweipancc.com/20231116/image.4jxumho143o0.png" alt="image"></p>
<p>在资源管理器中, 则可以省略 <strong>cd &#x2F;d</strong></p>
]]></content>
      <categories>
        <category>Windows</category>
        <category>路径</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Windows 路径</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 LinkShellExtension 简化 Windows 文件链接</title>
    <url>//2023/11/18/%E4%BD%BF%E7%94%A8-LinkShellExtension-%E7%AE%80%E5%8C%96-Windows-%E6%96%87%E4%BB%B6%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<h1 id="简化-Windows-文件链接"><a href="#简化-Windows-文件链接" class="headerlink" title="简化 Windows 文件链接"></a>简化 Windows 文件链接</h1><p>使用命令行方式对文件链接进行操作繁琐又危险, 且极难进行大量的文件对象操作, 当涉及<strong>复制</strong>与<strong>移动</strong>时候更为地狱.</p>
<h1 id="ln-可选"><a href="#ln-可选" class="headerlink" title="ln(可选)"></a>ln(可选)</h1><p>ln 作为 LinkShellExtension 的命令行扩展, 提供额外的数据分析.
<a href="https://schinagl.priv.at/nt/ln/ln.html">官方网站</a>.<br>下边提供 ln 的 ui 操作替代代码</p>
<h1 id="LinkShellExtension"><a href="#LinkShellExtension" class="headerlink" title="LinkShellExtension"></a>LinkShellExtension</h1><p>在 <strong>Windows-文件链接</strong> 中仅使用到了该工具的标记功能, 在此对这个工具的基本功能做简要记述以及对官方一些蛋疼的描述做优化并记录.
<a href="https://schinagl.priv.at/nt/hardlinkshellext/linkshellextension.html">官方网站</a>.<br>为美观下文将工作称为 LSE.</p>
<h2 id="语义对照表"><a href="#语义对照表" class="headerlink" title="语义对照表"></a>语义对照表</h2><span id="more"></span>

<p>LSE 在文档以及本地化上存在较为模糊的情况, 因此在这里给出个人理解的版本:</p>
<table>
<thead>
<tr>
<th align="left">本地化</th>
<th align="left">英文</th>
<th align="left">实际语义</th>
<th align="center">支持文件</th>
<th align="center">支持目录</th>
<th align="left">归属类别</th>
</tr>
</thead>
<tbody><tr>
<td align="left">硬连接</td>
<td align="left">Hardlink</td>
<td align="left">硬链接</td>
<td align="center">✅</td>
<td align="center">❌</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">符号连接</td>
<td align="left">Symbolic Link</td>
<td align="left">符号链接</td>
<td align="center">✅</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">目录连接点</td>
<td align="left">Junction</td>
<td align="left">目录链接</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">智能副本</td>
<td align="left">Smart Copy</td>
<td align="left">智能复制</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">智能镜像</td>
<td align="left">Smart Mirror</td>
<td align="left">智能镜像</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">硬连接副本</td>
<td align="left">Hardlink Clone</td>
<td align="left">硬链接克隆</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">符号连接副本</td>
<td align="left">Symbolic Clone</td>
<td align="left">符号链接克隆</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">多版本智能副本</td>
<td align="left">DeLorean Copy</td>
<td align="left">多版智能复制</td>
<td align="center">❌</td>
<td align="center">✅</td>
<td align="left">菜单项</td>
</tr>
<tr>
<td align="left">行动键</td>
<td align="left">Action Button</td>
<td align="left">鼠标次要按钮</td>
<td align="center">?</td>
<td align="center">?</td>
<td align="left">鼠标动作</td>
</tr>
<tr>
<td align="left">截断连接</td>
<td align="left">Crop</td>
<td align="left">跳过链接创建</td>
<td align="center">?</td>
<td align="center">?</td>
<td align="left">配置</td>
</tr>
<tr>
<td align="left">创建副本</td>
<td align="left">Unroll</td>
<td align="left">展开并复制文件对象</td>
<td align="center">?</td>
<td align="center">?</td>
<td align="left">配置</td>
</tr>
<tr>
<td align="left">连接原文件</td>
<td align="left">Splice</td>
<td align="left">链接原文件</td>
<td align="center">?</td>
<td align="center">?</td>
<td align="left">配置</td>
</tr>
</tbody></table>
<hr>
<h2 id="LSE-的基本使用要素"><a href="#LSE-的基本使用要素" class="headerlink" title="LSE 的基本使用要素"></a>LSE 的基本使用要素</h2><h3 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h3><p>LSE 的使用方式为:</p>
<ol>
<li>右键 文件或者目录 作为 <strong>Target</strong>, 并选中 <strong>选择源连接点( Pick Link Source )</strong></li>
<li>在资源管理器的 空白处 或者 父目录 右键 <strong>创建为..(Drop AS…)</strong> </li>
<li>根据类别选择二级菜单选项</li>
</ol>
<h3 id="与命令行的映射"><a href="#与命令行的映射" class="headerlink" title="与命令行的映射"></a>与命令行的映射</h3><p>命令行的链接方式与 LSE 存在以下对应:</p>
<table>
<thead>
<tr>
<th>类别</th>
<th>命令行</th>
<th>LSE</th>
<th>LSE(en)</th>
</tr>
</thead>
<tbody><tr>
<td>符号链接</td>
<td>mklink (&#x2F;d){0,1} &lt;Link&gt; &lt;Target&gt;</td>
<td>符号连接</td>
<td>Symbolic Links</td>
</tr>
<tr>
<td>目录链接</td>
<td>mklink &#x2F;j &lt;Link&gt; &lt;Target&gt;</td>
<td>目录连接点</td>
<td>Junction</td>
</tr>
<tr>
<td>硬链接</td>
<td>mklink &#x2F;h &lt;Link&gt; &lt;Target&gt;</td>
<td>硬连接</td>
<td>HardLink</td>
</tr>
</tbody></table>
<h3 id="相对与绝对路径"><a href="#相对与绝对路径" class="headerlink" title="相对与绝对路径"></a>相对与绝对路径</h3><p>创建的路径格式在 <strong>LSEConfig.exe</strong> 的 <span class="p-underline r2">常规配置 - 创建符号链接的方式 - 绝对路径|相对路径</span> 更改.
这项配置仅作为<span class="p-warn">优先配置</span>, 在某些情况下 LSE 会选择使用<strong>绝对路径</strong>形式, 比如跨盘符链接.</p>
<hr>
<h2 id="LSE-进阶使用"><a href="#LSE-进阶使用" class="headerlink" title="LSE 进阶使用"></a>LSE 进阶使用</h2><p>当涉及大量文件&#x2F;目录操作时候, LSE 可以提供极大便利. 但官网对这些进阶功能描述并不尽人意, 因此我在此用”人话”与”正常人思路”抽象做记录.</p>
<h3 id="智能复制-Smart-Copy"><a href="#智能复制-Smart-Copy" class="headerlink" title="智能复制(Smart Copy)"></a>智能复制(Smart Copy)</h3><blockquote>
<p>Smart Copy creates a <strong>copy</strong> of the directory <strong>structure</strong> from the source location to the <strong>destination</strong>, but it <strong>preserves</strong> the inner hardlink structure and inner junction&#x2F;symbolic link relations of the source, 
and <strong>recreates</strong> this <strong>inner</strong> hardlink structure and <strong>inner</strong> junction&#x2F;symbolic link relation at the destination location.</p>
</blockquote>
<p>这段话有如下提要:</p>
<ol>
<li>该功能在 Target 为 文件夹 时候适用</li>
<li>LSE 提供对 Windows 的复制做了扩展</li>
<li>LSE 尽量复刻源文件夹内的 符号链接&#x2F;目录链接&#x2F;硬链接 的结构</li>
<li>结构的复刻是通过再现 创建动作 实现的</li>
</ol>
<p>当源文件夹内的链接与源文件夹外存在链接, 就有了以下的处理工作.</p>
<h4 id="硬链接的额外处理"><a href="#硬链接的额外处理" class="headerlink" title="硬链接的额外处理"></a>硬链接的额外处理</h4><ol>
<li>复制出来的新硬链接表是源链接表的克隆, 是新对象</li>
<li>新硬链接表重建的过程中, 遇到不存在的对象则丢弃, 表现为计数减 1 , 当计数为 0 降级为普通文件</li>
</ol>
<p>使用以下内容创建树结构:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chcp 65001</span><br><span class="line">md HARD</span><br><span class="line">md HARD\0</span><br><span class="line">md HARD\0\1</span><br><span class="line"></span><br><span class="line">echo T0 &gt; HARD\T0.txt</span><br><span class="line">mklink /h HARD\0\T0的第一份硬链接.txt HARD\T0.txt</span><br><span class="line">mklink /h HARD\0\1\T0的第二份硬链接.txt HARD\T0.txt</span><br><span class="line"></span><br><span class="line">echo T1 &gt; HARD\T1.txt</span><br><span class="line">mklink /h HARD\0\T1的第一份硬链接.txt HARD\T1.txt</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

<p><img data-src="https://img-gh.siweipancc.com/20231119/%E7%A1%AC%E9%93%BE%E6%8E%A5%E7%9A%84%E9%A2%9D%E5%A4%96%E5%A4%84%E7%90%86-1.4ypnklaay100.png" alt="硬链接的额外处理-1"></p>
<p>对文件夹 0 在 HARD-out 中 创建智能副本(智能复制)</p>
<details>
<summary>
或者使用下边的 ln 代码
</summary>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -c HARD\0 HARD-out\0</span><br><span class="line"></span><br><span class="line">:end</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

</details>



<p>结果:
<img data-src="https://img-gh.siweipancc.com/20231119/%E7%A1%AC%E9%93%BE%E6%8E%A5%E7%9A%84%E9%A2%9D%E5%A4%96%E5%A4%84%E7%90%86-2.44g8yqyr7ys0.png" alt="硬链接的额外处理-2"></p>
<h4 id="符号-目录-链接的额外处理"><a href="#符号-目录-链接的额外处理" class="headerlink" title="符号(目录)链接的额外处理"></a>符号(目录)链接的额外处理</h4><p>当存在符号&#x2F;目录链接时, 存在三种策略:</p>
<ol>
<li>丢弃: 该符号链接在复制中被略去, 结果为未有新符号链接的创建</li>
<li>展开: 复制原有的 Target 指向的文件对象, 成为一个普通文件. <b class="p-warn">同时遵守 硬链接的额外处理</b></li>
<li>粘接: <strong>新的</strong>符号链接<strong>指向</strong>原有的 Target 指向的文件对象  ( Target 值此时可能会重新计算, 或从相对路径变为绝对路径)</li>
</ol>
<p>使用以下内容创建树结构:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:soft_tree_step1_create.bat</span><br><span class="line">@echo off</span><br><span class="line">@chcp 65001</span><br><span class="line">net.exe session 1&gt;NUL 2&gt;NUL || (Echo This script requires elevated rights. &amp; goto end)</span><br><span class="line">cd /d %~dp0</span><br><span class="line">md SYMBOL</span><br><span class="line">md SYMBOL\0</span><br><span class="line">md SYMBOL\0\1</span><br><span class="line"></span><br><span class="line">echo T0 &gt; SYMBOL\T0.txt</span><br><span class="line">mklink SYMBOL\0\T0的相对链接.txt ..\T0.txt</span><br><span class="line"></span><br><span class="line">echo T1 &gt; SYMBOL\0\T1.txt</span><br><span class="line">mklink SYMBOL\0\1\T1的相对链接.txt ..\T1.txt</span><br><span class="line"></span><br><span class="line">:end</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-gh.siweipancc.com/20231119/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5%E7%9A%84%E9%A2%9D%E5%A4%96%E5%A4%84%E7%90%86-1-1.644lhczb71k0.png" alt="符号链接的额外处理-1-1"></p>
<p>对文件夹 SYMBOL\0 在 SYMBOL-out 中 以不同设置创建智能副本(智能复制), 或者</p>
<details>
<summary>
或者使用下边的 ln 代码
</summary>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:soft_tree_step2_copy.bat</span><br><span class="line">@echo off</span><br><span class="line">@chcp 65001</span><br><span class="line">net.exe session 1&gt;NUL 2&gt;NUL || (Echo This script requires elevated rights. &amp; goto end)</span><br><span class="line">cd /d %~dp0</span><br><span class="line"></span><br><span class="line">:: 丢弃</span><br><span class="line">ln --crop -c SYMBOL\0\ SYMBOL-out\crop\0</span><br><span class="line"></span><br><span class="line">:: 展开</span><br><span class="line">ln --unroll -c SYMBOL\0 SYMBOL-out\unroll\0</span><br><span class="line"></span><br><span class="line">:: 粘接</span><br><span class="line">ln --splice -c SYMBOL\0 SYMBOL-out\splice\0</span><br><span class="line"></span><br><span class="line">:end</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>

</details>

<p>结果:
<img data-src="https://img-gh.siweipancc.com/20231119/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5%E7%9A%84%E9%A2%9D%E5%A4%96%E5%A4%84%E7%90%86-2-1.7bwt3tr54hk0.png" alt="符号链接的额外处理-2-1">
<img data-src="https://img-gh.siweipancc.com/20231119/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5%E7%9A%84%E9%A2%9D%E5%A4%96%E5%A4%84%E7%90%86-2-2.2d4t2b51vbms.png" alt="符号链接的额外处理-2-2"></p>
<h3 id="智能镜像-Smart-Mirror"><a href="#智能镜像-Smart-Mirror" class="headerlink" title="智能镜像(Smart Mirror)"></a>智能镜像(Smart Mirror)</h3><blockquote>
<p>Smart Mirror is very similar to Smart Copy and not only copies but synchronises the folder Source to Destination:</p>
</blockquote>
<blockquote>
<p>Smart Mirror copies if the timestamp of items in the Destination is different from the Source.</p>
</blockquote>
<blockquote>
<p>Delete files not anymore available in Source from Destination.</p>
</blockquote>
<blockquote>
<p>Smart Mirror takes care of Hardlink Relations, Restores Inner Junctions or Inner Symbolic links or when issued unrolls or splices Outer Junctions or Outer Symbolic Links.</p>
</blockquote>
<p>这段话有如下提要:</p>
<ol>
<li>提供与 智能复制 一样的功能</li>
<li>提供额外的同步操作(手动触发)</li>
<li>可以重复在目标上调用以实现同步</li>
<li>文件的时间戳不一致, 以源文件覆盖目标文件</li>
<li>不存在于源的文件将会被<b class="p-warn">删除</b></li>
</ol>
<p>注: 实际应用仅为实现备份源文件夹, 并提供手动同步状态到触发时源文件夹的状态而不用手动执行修改目标文件夹. </p>
<h3 id="智能移动-Smart-Move"><a href="#智能移动-Smart-Move" class="headerlink" title="智能移动(Smart Move)"></a>智能移动(Smart Move)</h3><blockquote>
<p>Smart Move enables folders with junctions and symbolic links beneath to be renamed. The junctions and symbolic links’ targets are updated below that folder. Without Smart Move renaming of such folders would end in dead junctions and symbolic links.</p>
</blockquote>
<ol>
<li>智能移动并不提供菜单项, 而是通过拦截<strong>资源管理器</strong>的文件夹<strong>移动</strong>操作实现</li>
<li>由文件链接规则可知: 该功能不应用到硬链接上</li>
<li>智能移动不维护 <strong>外部符号链接</strong> 与 <strong>外部目录</strong> 链接, 这与 智能复制 表现不一致</li>
</ol>
<p>注: 在编程中, <strong>重命名等于移动</strong>操作</p>
<p>使用以下内容创建树结构:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:smart_move_create.bat</span><br><span class="line">chcp 65001</span><br><span class="line">net.exe session 1&gt;NUL 2&gt;NUL || (Echo This script requires elevated rights. &amp; goto end)</span><br><span class="line">cd /d %~dp0</span><br><span class="line">md mov</span><br><span class="line">md mov\0</span><br><span class="line">md mov\0\1</span><br><span class="line">md mov\0\1\2</span><br><span class="line">echo T0 &gt; mov\T0.txt</span><br><span class="line">mklink mov\0\T0的链接.txt  ..\T0.txt</span><br><span class="line">echo T1 &gt; mov\0\1\2\T1.txt</span><br><span class="line">mklink mov\0\1\T1的链接.txt  .\2\T1.txt</span><br><span class="line"></span><br><span class="line">:end</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p><img data-src="https://img-gh.siweipancc.com/20231120/%E6%99%BA%E8%83%BD%E7%A7%BB%E5%8A%A8-1.48y4gipqjrm0.png" alt="智能移动-1"></p>
<p>对 0 文件夹重命名 为 00, 可以预期 4 个文档都可以<span class="p-pass">正常工作</span>:
<img data-src="https://img-gh.siweipancc.com/20231120/%E6%99%BA%E8%83%BD%E7%A7%BB%E5%8A%A8-2.47yvgdf3sfu0.png" alt="智能移动-2"></p>
<p>将 00 文件夹移动到 mov 的同级目录 mov-out 下, 可以预期 <strong>T0的链接.txt</strong> 此时<span class="p-warn">无法工作</span>(规则3):
<img data-src="https://img-gh.siweipancc.com/20231120/%E6%99%BA%E8%83%BD%E7%A7%BB%E5%8A%A8-3.5rxqqhnlpok0.png" alt="智能移动-3"></p>
<h3 id="硬链接克隆-Hardlink-Clone"><a href="#硬链接克隆-Hardlink-Clone" class="headerlink" title="硬链接克隆(Hardlink Clone)"></a>硬链接克隆(Hardlink Clone)</h3><blockquote>
<p>Clones are copies of a folder tree from a source location recreated at the destination location, however the files within the new folder tree are Hardlinks or Symbolic Links to the respective files in the source folder tree.</p>
</blockquote>
<p>官方把两个菜单选项统一归类到了 Clone 一节, 实际使用中仍旧需要区分. <br>以下的链接包括 符号链接 与目录链接.</p>
<p>硬链接克隆的流程:</p>
<ol>
<li>过滤外部链接</li>
<li>过滤内部链接</li>
<li>将过滤之后的文件列表结构以硬链接的形式复制结构到目标文件夹中, 产生的各个文件是硬链接形式</li>
<li>处理被过滤内部链接, 在目标文件夹中重新构建源文件夹的内链接关系</li>
<li>处理被外部链接, 根据配置使用以下规则:<ol>
<li>使用截断连接(Crop): 放弃处理</li>
<li>使用创建副本(Unroll): 使用<strong>原链接</strong>的 <strong>Target</strong> 在目标文件中创建对应的链接</li>
<li>使用粘接(Splice): 使用 <strong>原链接</strong>的 <strong>Target</strong> 在目标文件中创建对应的链接</li>
</ol>
</li>
</ol>
<p>以下是原始数据
<img data-src="https://img-gh.siweipancc.com/20231120/%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%85%8B%E9%9A%86-1.42wf48yrywy0.png" alt="硬链接克隆-1"></p>
<p>与三种不同方式克隆目录 Clone\0 之后的结果:
<img data-src="https://img-gh.siweipancc.com/20231120/%E7%A1%AC%E9%93%BE%E6%8E%A5%E5%85%8B%E9%9A%86-2.55bqhu2lxdk.png" alt="硬链接克隆-2"></p>
<h3 id="符号链接克隆-Symbolic-Clone"><a href="#符号链接克隆-Symbolic-Clone" class="headerlink" title="符号链接克隆(Symbolic Clone)"></a>符号链接克隆(Symbolic Clone)</h3><p>以下的链接包括 符号链接 与目录链接.  \</p>
<p>符号链接克隆的流程:</p>
<ol>
<li>过滤外部链接</li>
<li>过滤内部链接</li>
<li>将过滤之后的文件列表结构以链接的形式复制结构到目标文件夹中, 产生的各个文件是链接形式</li>
<li>处理被过滤内部链接, 在目标文件夹中重新构建源文件夹的内链接关系</li>
<li>处理被外部链接, 根据配置使用以下规则:<ol>
<li>使用截断连接(Crop): 放弃处理</li>
<li>使用创建副本(Unroll): 使用<strong>原链接</strong>作为 <strong>Target</strong> 在目标文件中创建对应的链接</li>
<li>使用粘接(Splice): 使用 <b class="p-p-pass">原链接 的 Target</b> 作为 <strong>Target</strong> 在目标文件中创建对应的链接</li>
</ol>
</li>
</ol>
<p>以种不同方式克隆目录 Clone\0 之后的结果: </p>
<p><img data-src="https://img-gh.siweipancc.com/20231120/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5%E5%85%8B%E9%9A%86-1.4x1zhbre04y0.png" alt="符号链接克隆-1"></p>
]]></content>
      <categories>
        <category>Windows</category>
        <category>路径</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>Windows 路径</tag>
        <tag>LinkShellExtension</tag>
      </tags>
  </entry>
  <entry>
    <title>一些有用的网站(持续更新中)</title>
    <url>//2023/11/20/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99(%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E4%B8%AD)/</url>
    <content><![CDATA[<h1 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h1><hr>
<h2 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h2><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ol>
<li><a href="https://www.injdk.cn/">in_jdk</a>: JDK 资源集合</li>
<li><a href="https://sdkman.io/install">sdkman</a>: 使用 V 风格管理 Java SDK</li>
</ol>
<h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ol>
<li><a href="https://whichjdk.com/">which_jdk</a>: 知晓开发中应该使用个 JDK 发行版</li>
<li><a href="https://openjdk.org/projects/jdk/">openjdk</a>: JDK 各类工程</li>
<li><a href="https://docs.oracle.com/javase/specs/index.html">The Java® Language Specification</a>: JDK 语言规范</li>
</ol>
<span id="more"></span>
<hr>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="文档-1"><a href="#文档-1" class="headerlink" title="文档"></a>文档</h3><ol>
<li><a href="https://developer.mozilla.org/zh-CN/">MDN Web Docs</a>: Web 开发相关标准查询</li>
</ol>
<hr>
<h2 id="Windows-开发"><a href="#Windows-开发" class="headerlink" title="Windows 开发"></a>Windows 开发</h2><h3 id="资源-1"><a href="#资源-1" class="headerlink" title="资源"></a>资源</h3><ol>
<li><a href="https://msdn.itellyou.cn/">MSDN</a>: Windows 相关的镜像与工具包</li>
</ol>
<h3 id="文档-2"><a href="#文档-2" class="headerlink" title="文档"></a>文档</h3><ol>
<li><a href="https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/windows-commands">windows-commands</a>: CMD 指令<ol>
<li><a href="https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-xp/bb490982(v=technet.10)">Using command redirection operators</a>: 使用重定向操作符</li>
</ol>
</li>
<li><a href="https://www.tutorialspoint.com/batch_script/index.htm">Batch Script Tutorial</a>: 学习 CMD 指令</li>
</ol>
<h1 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h1><hr>
<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="资源-2"><a href="#资源-2" class="headerlink" title="资源"></a>资源</h3><ol>
<li><a href="https://www.voidtools.com/zh-cn/">Everything</a>: 高效的搜索工具</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ol>
<li><a href="https://www.type.fun/">type-fun</a>: 打字教程</li>
<li><a href="https://www.mojidict.com/">MOJi辞書</a>: 在线日语词典</li>
</ol>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>网站</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 时区与时间类型</title>
    <url>//2023/12/05/MySQL-%E6%97%B6%E5%8C%BA%E4%B8%8E%E6%97%B6%E9%97%B4%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<h1 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h1><p>获取时区信息 <code>SELECT @@global.time_zone, @@session.time_zone;</code></p>
<h2 id="设置服务器时区"><a href="#设置服务器时区" class="headerlink" title="设置服务器时区:"></a>设置服务器时区:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">default-time-zone=&#x27;+08:00&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="设置连接时区信息"><a href="#设置连接时区信息" class="headerlink" title="设置连接时区信息"></a>设置连接时区信息</h2><p><code>set session time_zone=&#39;+08:00&#39;</code></p>
<p><code>jdbc:mysql://localhost:3306?serverTimezone=GMT%2B8</code></p>
<h1 id="DATE、DATETIME-和-TIMESTAMP"><a href="#DATE、DATETIME-和-TIMESTAMP" class="headerlink" title="DATE、DATETIME 和 TIMESTAMP"></a>DATE、DATETIME 和 TIMESTAMP</h1><span id="more"></span>

<table>
<thead>
<tr>
<th>类型</th>
<th>下限</th>
<th>上限</th>
<th align="center">建议使用</th>
</tr>
</thead>
<tbody><tr>
<td>DATE</td>
<td>1000-01-01</td>
<td>9999-12-31</td>
<td align="center">√</td>
</tr>
<tr>
<td>DATETIME</td>
<td>1000-01-01 00:00:00</td>
<td>9999-12-31 23:59:59</td>
<td align="center">√</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>1970-01-01 00:00:01</td>
<td>2038-01-19 03:14:07</td>
<td align="center">×</td>
</tr>
</tbody></table>
<h1 id="TIMESTAMP"><a href="#TIMESTAMP" class="headerlink" title="TIMESTAMP"></a>TIMESTAMP</h1><p>TIMESTAMP 值从当前时区转换到 UTC 以进行存储，并在检索时从 UTC 转换回当前时区。</p>
]]></content>
      <categories>
        <category>MySQL</category>
        <category>MySQL 时区与时间类型</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA 的 Service 模式</title>
    <url>//2023/12/10/JAVA-%E7%9A%84-Service-%E6%A8%A1%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h1><p>经典的运行时服务加载, 常见于图像处理, 数据编码中.</p>
<h1 id="经典使用"><a href="#经典使用" class="headerlink" title="经典使用"></a>经典使用</h1><p>Service 的使用一般分为:</p>
<ul>
<li>声明一个接口</li>
<li>实现一个接口</li>
<li>配置元文件</li>
<li>调用接口</li>
</ul>
<h2 id="声明-Service"><a href="#声明-Service" class="headerlink" title="声明 Service"></a>声明 Service</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BackupService</span> &#123;</span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">backup</span><span class="params">(Object[] data)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="实现一个接口"><a href="#实现一个接口" class="headerlink" title="实现一个接口"></a>实现一个接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BackupServiceLogImpl</span> <span class="keyword">implements</span> <span class="title class_">BackupService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">backup</span><span class="params">(Object[] data)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;backup data: &#123;&#125;&quot;</span>, Arrays.toString(data));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="配置元文件"><a href="#配置元文件" class="headerlink" title="配置元文件"></a>配置元文件</h2><p>在 classpath 下新增一个文件: <code>META-INF/services/com.pancc.up.simple.spi.BackupService</code> ,
内容为 <code>com.pancc.up.simple.spi.BackupServiceLogImpl</code></p>
<h2 id="调用接口"><a href="#调用接口" class="headerlink" title="调用接口"></a>调用接口</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ServiceLoader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BackupPiPes</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        ServiceLoader&lt;BackupService&gt; services = ServiceLoader.load(BackupService.class);</span><br><span class="line">        <span class="type">BackupService</span> <span class="variable">backupService</span> <span class="operator">=</span> services.findFirst().orElseThrow(IllegalStateException::<span class="keyword">new</span>);</span><br><span class="line">        backupService.backup(<span class="keyword">new</span> <span class="title class_">Object</span>[]&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>JAVA</category>
        <category>Service</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>记录数据修改前后的变化</title>
    <url>//2023/12/10/%E8%AE%B0%E5%BD%95%E6%95%B0%E6%8D%AE%E4%BF%AE%E6%94%B9%E5%89%8D%E5%90%8E%E7%9A%84%E5%8F%98%E5%8C%96/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>追踪数据变化在各种审查场景中是一个常见的需求. 在这里我记录一个常见的错误实现, 并提供一个从基础到完整可用的框架实现. 在这里我选用 Hibernate 6.4.Final 作为框架依赖.</p>
<h1 id="常见的错误实现"><a href="#常见的错误实现" class="headerlink" title="常见的错误实现"></a>常见的错误实现</h1><p>以下摘自 <a href="https://www.cnblogs.com/cuijinlong/p/17239805.html">Java实现记录对象修改前后的变化</a> , 可见该方法明显存在以下问题:</p>
<ul>
<li>依赖暴力反射</li>
<li>字段存在性能问题</li>
<li>在现代 ORM 框架下会遇到大量常见的运行时错误</li>
</ul>
<span id="more"></span>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 自定义注解</span></span><br><span class="line"><span class="meta">@Target(ElementType.FIELD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> ForUpdate &#123;</span><br><span class="line">    String <span class="title function_">fieldName</span><span class="params">()</span> <span class="keyword">default</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取变更内容.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> newBean 更改前的Bean</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oldBean 更改后的Bean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">     <span class="keyword">static</span> &lt;T&gt; String <span class="title function_">getChangedFields</span><span class="params">(T newBean, T oldBean)</span>&#123;</span><br><span class="line">        Field[] fields = newBean.getClass().getDeclaredFields();</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span>(Field field : fields) &#123;</span><br><span class="line">            field.setAccessible(<span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (field.isAnnotationPresent(ForUpdate.class)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">newValue</span> <span class="operator">=</span> field.get(newBean);</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">oldValue</span> <span class="operator">=</span> field.get(oldBean);</span><br><span class="line">                    <span class="keyword">if</span>(!Objects.equals(newValue, oldValue)) &#123;</span><br><span class="line">                        builder.append(field.getAnnotation(ForUpdate.class).fieldName()); <span class="comment">//获取字段名称</span></span><br><span class="line">                        builder.append(<span class="string">&quot;: 【更改前：&quot;</span>);</span><br><span class="line">                        builder.append(newValue);</span><br><span class="line">                        builder.append(<span class="string">&quot;, 更改后：&quot;</span>);</span><br><span class="line">                        builder.append(oldValue);</span><br><span class="line">                        builder.append(<span class="string">&quot;】\n&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    System.out.println(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> builder.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="雏形-JPA"><a href="#雏形-JPA" class="headerlink" title="雏形 - JPA"></a>雏形 - JPA</h1><p>根据 JPA规范, ORM 必须支持实体生命回调及动态值刷新.</p>
<blockquote>
<p>An update to the state of an entity includes both the assignment of a new value to a persistent property or field of the 
entity as well as the modification of a mutable value of a persistent property or field[26].</p>
</blockquote>
<p>以下是根据规则1作的一个简易的模型:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Log4j2</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Room</span> &#123;</span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;id&quot;, nullable = false)</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">cups</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    Long version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PreUpdate</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">preUpdate</span><span class="params">()</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;update, what properties?&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="改进1-规则-2-的遵守"><a href="#改进1-规则-2-的遵守" class="headerlink" title="改进1 - 规则 2 的遵守"></a>改进1 - 规则 2 的遵守</h1><p>以上代码虽 HOOK 了更新生命回调, 但无法确定变动的字段以及旧值. 因此需要依赖 <strong>Hibernate</strong> 等现代 ORM 的脏值检测与更加深入的生命回调.
为 Hibernate 编写并声明如下 Service:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.Metadata;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.spi.BootstrapContext;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.engine.spi.SessionFactoryImplementor;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.service.spi.EventListenerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.EventType;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEvent;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEventListener;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.integrator.spi.Integrator;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.metamodel.mapping.AttributeMapping;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.persister.entity.EntityPersister;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.service.spi.SessionFactoryServiceRegistry;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MonitorIntegrator</span> <span class="keyword">implements</span> <span class="title class_">Integrator</span>, PostUpdateEventListener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">integrate</span><span class="params">(Metadata metadata, BootstrapContext bootstrapContext, SessionFactoryImplementor serviceRegistry)</span> &#123;</span><br><span class="line">        <span class="type">EventListenerRegistry</span> <span class="variable">eventListenerRegistry</span> <span class="operator">=</span> serviceRegistry.getServiceRegistry().getService(EventListenerRegistry.class);</span><br><span class="line">        <span class="keyword">assert</span> eventListenerRegistry != <span class="literal">null</span>;</span><br><span class="line">        eventListenerRegistry.appendListeners(EventType.POST_COMMIT_UPDATE, <span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">disintegrate</span><span class="params">(SessionFactoryImplementor sessionFactory, SessionFactoryServiceRegistry serviceRegistry)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPostUpdate</span><span class="params">(PostUpdateEvent event)</span> &#123;</span><br><span class="line">        <span class="type">EntityPersister</span> <span class="variable">persister</span> <span class="operator">=</span> event.getPersister();</span><br><span class="line">        Class&lt;?&gt; mappedClass = persister.getMappedClass();</span><br><span class="line">        log.info(<span class="string">&quot;entity update: &#123;&#125; &quot;</span>, mappedClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> idx : event.getDirtyProperties()) &#123;</span><br><span class="line">            <span class="type">AttributeMapping</span> <span class="variable">attributeMapping</span> <span class="operator">=</span> persister.getAttributeMapping(idx);</span><br><span class="line">            <span class="type">String</span> <span class="variable">attributeName</span> <span class="operator">=</span> attributeMapping.getAttributeName();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">oldValue</span> <span class="operator">=</span> event.getOldState()[idx];</span><br><span class="line">            <span class="type">Object</span> <span class="variable">newValue</span> <span class="operator">=</span> event.getState()[idx];</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125; changed from: [&#123;&#125;] to [&#123;&#125;]&quot;</span>, attributeName, oldValue, newValue);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">requiresPostCommitHandling</span><span class="params">(EntityPersister persister)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>以上代码完成了以下任务:</p>
<ul>
<li>实现了 Hibernate 的插件接口 <code>Integrator</code> 与 实体事件更新后接口 <code>PostUpdateEventListener</code> </li>
<li>根据脏值获取到字段名与前后值</li>
</ul>
<h1 id="改进2-自定义信息"><a href="#改进2-自定义信息" class="headerlink" title="改进2 - 自定义信息"></a>改进2 - 自定义信息</h1><h2 id="自定义注解"><a href="#自定义注解" class="headerlink" title="自定义注解"></a>自定义注解</h2><p>参考错误实现提供自定义信息, 根据 JPA 的字段访问规则 <a href="https://jakarta.ee/specifications/persistence/3.1/jakarta-persistence-spec-3.1#default-access-type">Access Type</a>,
我们的注解需要支持两个位置:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.FIELD, ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> LogProperty &#123;</span><br><span class="line"></span><br><span class="line">    String <span class="title function_">value</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="改造实体类"><a href="#改造实体类" class="headerlink" title="改造实体类"></a>改造实体类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.pancc.up.simple.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pancc.up.simple.annotation.LogProperty;</span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.*;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"><span class="keyword">import</span> lombok.Setter;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.log4j.Log4j2;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@Log4j2</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Room</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span></span><br><span class="line">    <span class="meta">@Column(name = &quot;id&quot;, nullable = false)</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@LogProperty(&quot;名字&quot;)</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Access(AccessType.PROPERTY)</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> org.hibernate.property.access.spi.Getter#getMember()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@LogProperty(&quot;大小&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSize</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@LogProperty(&quot;配套&quot;)</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="type">Integer</span> <span class="variable">cups</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    Long version;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="改造-Service"><a href="#改造-Service" class="headerlink" title="改造 Service"></a>改造 Service</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pancc.up.simple.annotation.LogProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.Metadata;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.boot.spi.BootstrapContext;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.engine.spi.SessionFactoryImplementor;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.service.spi.EventListenerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.EventType;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEvent;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEventListener;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.integrator.spi.Integrator;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.metamodel.mapping.AttributeMapping;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.persister.entity.EntityPersister;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.service.spi.SessionFactoryServiceRegistry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.AnnotatedElement;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Member;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MonitorIntegrator</span> <span class="keyword">implements</span> <span class="title class_">Integrator</span>, PostUpdateEventListener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">integrate</span><span class="params">(Metadata metadata, BootstrapContext bootstrapContext, SessionFactoryImplementor serviceRegistry)</span> &#123;</span><br><span class="line">        <span class="type">EventListenerRegistry</span> <span class="variable">eventListenerRegistry</span> <span class="operator">=</span> serviceRegistry.getServiceRegistry().getService(EventListenerRegistry.class);</span><br><span class="line">        <span class="keyword">assert</span> eventListenerRegistry != <span class="literal">null</span>;</span><br><span class="line">        eventListenerRegistry.appendListeners(EventType.POST_COMMIT_UPDATE, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">disintegrate</span><span class="params">(SessionFactoryImplementor sessionFactory, SessionFactoryServiceRegistry serviceRegistry)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPostUpdate</span><span class="params">(PostUpdateEvent event)</span> &#123;</span><br><span class="line">        <span class="type">EntityPersister</span> <span class="variable">persister</span> <span class="operator">=</span> event.getPersister();</span><br><span class="line">        Class&lt;?&gt; mappedClass = persister.getMappedClass();</span><br><span class="line">        log.info(<span class="string">&quot;entity update: &#123;&#125; &quot;</span>, mappedClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> idx : event.getDirtyProperties()) &#123;</span><br><span class="line">            <span class="type">AttributeMapping</span> <span class="variable">attributeMapping</span> <span class="operator">=</span> persister.getAttributeMapping(idx);</span><br><span class="line">            <span class="type">String</span> <span class="variable">attributeName</span> <span class="operator">=</span> attributeMapping.getAttributeName();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">oldValue</span> <span class="operator">=</span> event.getOldState()[idx];</span><br><span class="line">            <span class="type">Object</span> <span class="variable">newValue</span> <span class="operator">=</span> event.getState()[idx];</span><br><span class="line">            <span class="type">Member</span> <span class="variable">member</span> <span class="operator">=</span> attributeMapping.getPropertyAccess().getGetter().getMember();</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> Optional.ofNullable(member).filter(AnnotatedElement.class::isInstance).map(AnnotatedElement.class::cast)</span><br><span class="line">                    .map(x -&gt; x.getAnnotation(LogProperty.class)).map(LogProperty::value).orElse(attributeName);</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;(&#123;&#125;) changed from: [&#123;&#125;] to [&#123;&#125;]&quot;</span>, attributeName, msg, oldValue, newValue);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">requiresPostCommitHandling</span><span class="params">(EntityPersister persister)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>至此, 我们可以根据注解在字段或者方法上动态地获得自定义信息.</p>
<h1 id="改进3-融合-IOC-框架"><a href="#改进3-融合-IOC-框架" class="headerlink" title="改进3 - 融合 IOC 框架"></a>改进3 - 融合 IOC 框架</h1><p>对于 IOC 环境, 为了更好的融合与使用自动依赖注入特性, 例如 Spring , 我们将 Service 声明文件删除, 删除 Integrator 接口声明, 因此以上的 Service 代码可变为如下:</p>
<h2 id="改造-Service-1"><a href="#改造-Service-1" class="headerlink" title="改造 Service"></a>改造 Service</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pancc.up.simple.annotation.LogProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEvent;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.PostUpdateEventListener;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.metamodel.mapping.AttributeMapping;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.persister.entity.EntityPersister;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.AnnotatedElement;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Member;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MonitorIntegrator</span> <span class="keyword">implements</span> <span class="title class_">PostUpdateEventListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onPostUpdate</span><span class="params">(PostUpdateEvent event)</span> &#123;</span><br><span class="line">        <span class="type">EntityPersister</span> <span class="variable">persister</span> <span class="operator">=</span> event.getPersister();</span><br><span class="line">        Class&lt;?&gt; mappedClass = persister.getMappedClass();</span><br><span class="line">        log.info(<span class="string">&quot;entity update: &#123;&#125; &quot;</span>, mappedClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> idx : event.getDirtyProperties()) &#123;</span><br><span class="line">            <span class="type">AttributeMapping</span> <span class="variable">attributeMapping</span> <span class="operator">=</span> persister.getAttributeMapping(idx);</span><br><span class="line">            <span class="type">String</span> <span class="variable">attributeName</span> <span class="operator">=</span> attributeMapping.getAttributeName();</span><br><span class="line">            <span class="type">Object</span> <span class="variable">oldValue</span> <span class="operator">=</span> event.getOldState()[idx];</span><br><span class="line">            <span class="type">Object</span> <span class="variable">newValue</span> <span class="operator">=</span> event.getState()[idx];</span><br><span class="line">            <span class="type">Member</span> <span class="variable">member</span> <span class="operator">=</span> attributeMapping.getPropertyAccess().getGetter().getMember();</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> Optional.ofNullable(member).filter(AnnotatedElement.class::isInstance).map(AnnotatedElement.class::cast)</span><br><span class="line">                    .map(x -&gt; x.getAnnotation(LogProperty.class)).map(LogProperty::value).orElse(attributeName);</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;(&#123;&#125;) changed from: [&#123;&#125;] to [&#123;&#125;]&quot;</span>, attributeName, msg, oldValue, newValue);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">requiresPostCommitHandling</span><span class="params">(EntityPersister persister)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="增加配置类"><a href="#增加配置类" class="headerlink" title="增加配置类"></a>增加配置类</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.simple.spi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.EntityManagerFactory;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.engine.spi.SessionFactoryImplementor;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.service.spi.EventListenerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.event.spi.EventType;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">config</span> &#123;</span><br><span class="line">        <span class="meta">@Bean</span></span><br><span class="line">        <span class="keyword">public</span> MonitorIntegrator <span class="title function_">monitorIntegrator</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MonitorIntegrator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">monitorIntegrator</span><span class="params">(MonitorIntegrator monitorIntegrator, EntityManagerFactory entityManagerFactory)</span> &#123;</span><br><span class="line">        <span class="type">SessionFactoryImplementor</span> <span class="variable">sessionFactory</span> <span class="operator">=</span> entityManagerFactory.unwrap(SessionFactoryImplementor.class);</span><br><span class="line">        <span class="type">EventListenerRegistry</span> <span class="variable">eventListenerRegistry</span> <span class="operator">=</span> sessionFactory.getServiceRegistry().getService(EventListenerRegistry.class);</span><br><span class="line">        <span class="keyword">assert</span> eventListenerRegistry != <span class="literal">null</span>;</span><br><span class="line">        eventListenerRegistry.appendListeners(EventType.POST_COMMIT_UPDATE, monitorIntegrator);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="改造效果"><a href="#改造效果" class="headerlink" title="改造效果"></a>改造效果</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2023-12-10T23:48:38.719+08:00  INFO 21480 --- [nio-8080-exec-4] c.pancc.up.simple.spi.MonitorIntegrator  : entity update: class com.pancc.up.simple.entity.Room </span><br><span class="line">2023-12-10T23:48:38.719+08:00  INFO 21480 --- [nio-8080-exec-4] c.pancc.up.simple.spi.MonitorIntegrator  : cups(配套) changed from: [3] to [5]</span><br><span class="line">2023-12-10T23:48:38.719+08:00  INFO 21480 --- [nio-8080-exec-4] c.pancc.up.simple.spi.MonitorIntegrator  : size(大小) changed from: [2] to [4]</span><br><span class="line">2023-12-10T23:48:38.719+08:00  INFO 21480 --- [nio-8080-exec-4] c.pancc.up.simple.spi.MonitorIntegrator  : version(version) changed from: [20] to [21]</span><br></pre></td></tr></table></figure>

<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>追踪值时, 应注意值的类型, 序列化值的尽量为 Basic 类型, 日志也按照单表思想记录</p>
<h1 id="额外资料"><a href="#额外资料" class="headerlink" title="额外资料"></a>额外资料</h1><p><a href="https://docs.jboss.org/hibernate/orm/6.4/integrationguide/html_single/Hibernate_Integration_Guide.html">Hibernate_Integration</a></p>
<p><a href="https://jakarta.ee/specifications/persistence/3.1/">JPA3.1</a></p>
]]></content>
      <categories>
        <category>JAVA</category>
        <category>JPA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>Hibernate</tag>
        <tag>JPA</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA15 文本块</title>
    <url>//2023/12/15/JAVA15-%E6%96%87%E6%9C%AC%E5%9D%97/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>文本块是一种<strong>多行字符串</strong>字面形式，可避免使用大多数<strong>转义</strong>序列，以可预测的方式自动格式化字符串，并在需要时让开发人员控制格式。</p>
<h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ol>
<li>JEP 355 第一次预览(JDK 13) 提出</li>
<li>JEP 368 第二次预览(JDK 14), 两个新的转义序列</li>
<li><a href="https://openjdk.org/jeps/378">JEP 378</a> 正式发布(JDK 15)<span id="more"></span></li>
</ol>
<h2 id="不足"><a href="#不足" class="headerlink" title="不足"></a>不足</h2><ol>
<li>不直接支持字符串插值( <strong>interpolation</strong> ), 见 String::formatted</li>
<li>不支持原始字符串</li>
</ol>
<h1 id="详细"><a href="#详细" class="headerlink" title="详细"></a>详细</h1><h2 id="结构定义"><a href="#结构定义" class="headerlink" title="结构定义"></a>结构定义</h2><p><a href="https://docs.oracle.com/javase/specs/jls/se21/html/jls-3.html#jls-3.10.6">来源</a></p>
<figure class="highlight bnf"><table><tr><td class="code"><pre><span class="line">TextBlock:</span><br><span class="line">&quot;&quot;&quot; &#123;TextBlockWhiteSpace&#125; LineTerminator &#123;TextBlockCharacter&#125; &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">TextBlockWhiteSpace:</span><br><span class="line">WhiteSpace but not LineTerminator</span><br><span class="line"></span><br><span class="line">TextBlockCharacter:</span><br><span class="line">InputCharacter but not \</span><br><span class="line">EscapeSequence</span><br><span class="line">LineTerminator</span><br><span class="line"></span><br><span class="line">WhiteSpace:</span><br><span class="line">the ASCII SP character, also known as &quot;space&quot;</span><br><span class="line">the ASCII HT character, also known as &quot;horizontal tab&quot;</span><br><span class="line">the ASCII FF character, also known as &quot;form feed&quot;</span><br><span class="line"></span><br><span class="line">LineTerminator:</span><br><span class="line">the ASCII LF character, also known as &quot;newline&quot;</span><br><span class="line">the ASCII CR character, also known as &quot;return&quot;</span><br><span class="line">the ASCII CR character followed by the ASCII LF character</span><br><span class="line"></span><br><span class="line">InputCharacter:</span><br><span class="line">UnicodeInputCharacter but not CR or LF</span><br><span class="line"></span><br><span class="line">UnicodeInputCharacter:</span><br><span class="line">UnicodeEscape</span><br><span class="line">RawInputCharacter</span><br><span class="line"></span><br><span class="line">UnicodeEscape:</span><br><span class="line">\UnicodeMarker HexDigit HexDigit HexDigit HexDigit</span><br><span class="line"></span><br><span class="line">UnicodeMarker:</span><br><span class="line">u &#123;u&#125;</span><br><span class="line"></span><br><span class="line">RawInputCharacter:</span><br><span class="line">any Unicode character</span><br><span class="line"></span><br><span class="line">EscapeSequence:</span><br><span class="line">\b (backspace BS, Unicode \u0008)</span><br><span class="line">\s (space SP, Unicode \u0020)</span><br><span class="line">\t (horizontal tab HT, Unicode \u0009)</span><br><span class="line">\n (linefeed LF, Unicode \u000a)</span><br><span class="line">\f (form feed FF, Unicode \u000c)</span><br><span class="line">\r (carriage return CR, Unicode \u000d)</span><br><span class="line">\LineTerminator (line continuation, no Unicode representation)</span><br><span class="line">\&quot; (double quote &quot;, Unicode \u0022)</span><br><span class="line">\&#x27; (single quote &#x27;, Unicode \u0027)</span><br><span class="line">\\ (backslash \, Unicode \u005c)</span><br><span class="line">OctalEscape (octal value, Unicode \u0000 to \u00ff)</span><br><span class="line"></span><br><span class="line">OctalEscape:</span><br><span class="line">\OctalDigit</span><br><span class="line">\OctalDigit OctalDigit</span><br><span class="line">\ZeroToThree OctalDigit OctalDigit</span><br><span class="line"></span><br><span class="line">OctalDigit:</span><br><span class="line">(one of)</span><br><span class="line">0 1 2 3 4 5 6 7</span><br><span class="line"></span><br><span class="line">ZeroToThree:</span><br><span class="line">(one of)</span><br><span class="line">0 1 2 3</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pancc.up.jdks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.DisplayName;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> org.junit.jupiter.api.Assertions.assertEquals;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Siweipancc on 2023/12/15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BlocksTextTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;替换常规拼接&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t1</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">html1</span> <span class="operator">=</span> <span class="string">&quot;&lt;html&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;    &lt;body&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;        &lt;p&gt;Hello, world&lt;/p&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;    &lt;/body&gt;\n&quot;</span> +</span><br><span class="line">                       <span class="string">&quot;&lt;/html&gt;\n&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">html2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &lt;html&gt;</span></span><br><span class="line"><span class="string">                    &lt;body&gt;</span></span><br><span class="line"><span class="string">                        &lt;p&gt;Hello, world&lt;/p&gt;</span></span><br><span class="line"><span class="string">                    &lt;/body&gt;</span></span><br><span class="line"><span class="string">                &lt;/html&gt;</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(html1, html2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;最后产生换行字符&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t2</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                line 1</span></span><br><span class="line"><span class="string">                line 2</span></span><br><span class="line"><span class="string">                line 3</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;line 1\nline 2\nline 3\n&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;最后不产生换行字符&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t22</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                line 1</span></span><br><span class="line"><span class="string">                line 2</span></span><br><span class="line"><span class="string">                line 3&quot;&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;line 1\nline 2\nline 3&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;\\ 换行输入但不产生换行字符&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t3</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                line 1</span></span><br><span class="line"><span class="string">                line 2</span></span><br><span class="line"><span class="string">                line 3\</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;line 1\nline 2\nline 3&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;空白字符串&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t4</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;\\ 拼接长串&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t5</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;文本块是一种多行字符串字面形式，可避免使用大多数转义序列，以可预测的方式自动格式化字符串，并在需要时让开发人员控制格式。&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                文本块是一种多行字符串\</span></span><br><span class="line"><span class="string">                字面形式，可避免使用大多数\</span></span><br><span class="line"><span class="string">                转义序列，以可预测的方式自\</span></span><br><span class="line"><span class="string">                动格式化字符串，并在需要时\</span></span><br><span class="line"><span class="string">                让开发人员控制格式。&quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;特殊缩进1&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t61</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;文本\n块是\n  一种\n  多行\n 字符串&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                文本</span></span><br><span class="line"><span class="string">                块是</span></span><br><span class="line"><span class="string">                  一种</span></span><br><span class="line"><span class="string">                  多行</span></span><br><span class="line"><span class="string">                 字符串&quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;特殊缩进2&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t62</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;文本\n块是\n  一种\n  多行\n 字符串\n&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                文本</span></span><br><span class="line"><span class="string">                块是</span></span><br><span class="line"><span class="string">                  一种</span></span><br><span class="line"><span class="string">                  多行</span></span><br><span class="line"><span class="string">                 字符串</span></span><br><span class="line"><span class="string">                   &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;特殊缩进3&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t63</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;文本\n块是\n  一种\n  多行\n 字符串\n&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                文本</span></span><br><span class="line"><span class="string">                块是</span></span><br><span class="line"><span class="string">                  一种</span></span><br><span class="line"><span class="string">                  多行</span></span><br><span class="line"><span class="string">                 字符串</span></span><br><span class="line"><span class="string">                 &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;特殊缩进4&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t64</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;文本\n块是\n  一种\n  多行\n 字符串\n&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                文本</span></span><br><span class="line"><span class="string">                块是</span></span><br><span class="line"><span class="string">                  一种</span></span><br><span class="line"><span class="string">                  多行</span></span><br><span class="line"><span class="string">                 字符串</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;特殊缩进5&quot;)</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">t65</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;                文本\n                块是\n                  一种\n                  多行\n                 字符串\n&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">                                文本</span></span><br><span class="line"><span class="string">                                块是</span></span><br><span class="line"><span class="string">                                  一种</span></span><br><span class="line"><span class="string">                                  多行</span></span><br><span class="line"><span class="string">                                 字符串</span></span><br><span class="line"><span class="string">                &quot;&quot;&quot;</span>;</span><br><span class="line">        assertEquals(s1, s2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="编译器处理步骤"><a href="#编译器处理步骤" class="headerlink" title="编译器处理步骤"></a>编译器处理步骤</h2><ol>
<li>行结束符被翻译为 LF (\u000A)</li>
<li>最大努力的删除左右缩进使用的空白字符</li>
<li>对内容中的 Escape 序列进行解释, 如: \s</li>
</ol>
<hr>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="编辑器换行符使用-LF"><a href="#编辑器换行符使用-LF" class="headerlink" title="编辑器换行符使用 LF"></a>编辑器换行符使用 LF</h2><ol>
<li>IntelliJ IDEA: Settings -&gt; Editor -&gt; Code Style &#x3D;&#x3D;&gt; Line separator(Unix and MacOS(\n))</li>
<li>Notepad++: 设置 -&gt; 首选项 -&gt; 新建 &#x3D;&#x3D;&gt; 格式(行尾) (Unix(LF))</li>
</ol>
<h2 id="一些实用的方法"><a href="#一些实用的方法" class="headerlink" title="一些实用的方法"></a>一些实用的方法</h2><ol>
<li>String::stripIndent()：用于从文本块内容中剥离附带的空白空间</li>
<li>String::translateEscapes()：用于翻译转义序列</li>
<li>String::formatted(Object… args)：简化文本块中的值替换</li>
</ol>
]]></content>
      <categories>
        <category>JAVA</category>
        <category>JDK15</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>JDK 特性</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA 日志框架</title>
    <url>//2024/03/16/JAVA-%E6%97%A5%E5%BF%97%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>程序的日志记录是必不可少的, 这里做简单的描述与总结. 总体而言, 日志框架分为三部分:</p>
<ol>
<li>门面: 类似接口, 也称 门面型日志框架</li>
<li>桥接: 通常用于🔗连接门面 与 实现, 也适用于重定向, 比如第三方库内部使用了 <code>JUL</code>, 我们使用 <code>jul-to-slf4j</code>
将其日志流重定向到 <code>slf4j</code> 门面上</li>
<li>实现: 记录型日志框架</li>
</ol>
<p>在实际引用中, 为了扩展与安全, 我们通常使用上述的三个组合, 不直接使用实现,
另外见 <a href="https://www.ibm.com/cn-zh/topics/log4j">🐛什么是Log4j 漏洞？</a></p>
<span id="more"></span>

<h2 id="记录型日志框架"><a href="#记录型日志框架" class="headerlink" title="记录型日志框架"></a>记录型日志框架</h2><ol>
<li>JUL: JDK1.4 以来的 <code>java.util.logging</code> 下的包 👌</li>
<li>Log4j: Apache 下的一个<del>过期</del>实现 👎</li>
<li>Log4j2: 同 Log4j, 但不兼容 1 👌</li>
<li>Logback: 与 Slf4j 同一个作者, Spring 的默认(建议使用) 👍</li>
</ol>
<h2 id="门面型日志框架"><a href="#门面型日志框架" class="headerlink" title="门面型日志框架"></a>门面型日志框架</h2><ol>
<li>JCL: Apache 所属, 也称 <code>Commons Logging</code></li>
<li>SLF4J: 简易门面(Simple Logging Facade for Java)</li>
</ol>
<h1 id="我不想考虑那么多-直接给我配置就行"><a href="#我不想考虑那么多-直接给我配置就行" class="headerlink" title="我不想考虑那么多, 直接给我配置就行"></a>我不想考虑那么多, 直接给我配置就行</h1><p>OK, 下边是一个可选的组合</p>
<ol>
<li>添加 <strong>SLF4J</strong></li>
<li>添加 <strong>Logback</strong></li>
<li>(可选): 如果第三方库使用了 <strong>JCL</strong> 加入 <strong>jcl-over-slf4j</strong> </li>
<li>(可选): 如果第三方库使用了 <strong>JUL</strong> 加入 <strong>jul-to-slf4j</strong> , 在入口类时<a href="https://www.slf4j.org/legacy.html#jul-to-slf4j">桥接</a></li>
<li>(可选): 如果第三方库使用了 <strong>log4j1</strong> , 移除 <strong>log4j1</strong> 加入 <strong>log4j-over-slf4j</strong></li>
</ol>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--选择的项目 门面 👍--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--选择的项目 实现 👍--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--重定向 JCL ✍️--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--被覆盖的 JCL 门面 👋--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--重定向 JUL ✍️--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jul-to-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!--重定向 log4j1  ✍️--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--移除 log4j1 依赖 ❌--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--            &lt;groupId&gt;log4j&lt;/groupId&gt;--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--            &lt;artifactId&gt;log4j&lt;/artifactId&gt;--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--            &lt;version&gt;1.2.17&lt;/version&gt;--&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>桥接代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">BridgeJulToSLF4</span><span class="params">()</span> &#123;</span><br><span class="line">    SLF4JBridgeHandler.removeHandlersForRootLogger();</span><br><span class="line">    SLF4JBridgeHandler.install();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>具体的执行图: <img data-src="https://www.slf4j.org/images/legacy.png" alt="legacy.png"></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><a href="https://github.com/siweipancc/learn-day/tree/master/Java/log/sl4j"> 
<img data-src="https://img.shields.io/badge/代码-代码?logo=github&color=blue">
</a>


]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>日志</tag>
      </tags>
  </entry>
  <entry>
    <title>Mod 开发 -- 星露谷中的动态条件 Condition</title>
    <url>//2024/04/03/Mod-%E5%BC%80%E5%8F%91-%E6%98%9F%E9%9C%B2%E8%B0%B7%E4%B8%AD%E7%9A%84%E5%8A%A8%E6%80%81%E6%9D%A1%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Mod-开发-–-星露谷中的动态条件-Condition"><a href="#Mod-开发-–-星露谷中的动态条件-Condition" class="headerlink" title="Mod 开发 – 星露谷中的动态条件 Condition"></a>Mod 开发 – 星露谷中的动态条件 Condition</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近写了一个自定义生产模组, 需要用到如下功能</p>
<ol>
<li>用到一个随机数, 当 roll 点到达界限值产出特定产物</li>
<li>产出对应季节的季节种子,</li>
<li>在齐先生飞机事件后产出谜之盒</li>
<li>在绿雨事件之后产出苔藓<span id="more"></span></li>
</ol>
<p>机器应该 patch 到 <code>Content\Data\Machines</code> 中, 对应的 C# 代码解析应该在<code>StardewValley.GameData.Machines.MachineData</code> 中,
翻阅所有的使用用例, 发现作者只有用到了 <code>RANDOM</code> 这个检查,
对应的方法 <code>StardewValley.GameStateQuery.DefaultResolvers.RANDOM</code>,
对应的所有函数初始化注册在 <code>StardewValley.GameStateQuery..cctor</code></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h4><p>这里直接使用 <strong>RANDOM 0.5</strong> 达到 50% 的几率数</p>
<h4 id="季节"><a href="#季节" class="headerlink" title="季节"></a>季节</h4><p>这里直接使用 <strong>SEASON Spring</strong> 达到春节检查, 对应的枚举值在 <code>StardewValley.Season</code></p>
<h4 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h4><p>在 <code>StardewValley.GameStateQuery.Parse</code> 方法中, 解析多重条件是在 <code>StardewValley.GameStateQuery.SplitRaw</code> 中,
以逗号分割 , 解析条件可以支持以感叹号修饰的非条件</p>
<h4 id="齐先生事件"><a href="#齐先生事件" class="headerlink" title="齐先生事件"></a>齐先生事件</h4><p>在游戏源码中, 事件代码在 <code>StardewValley.Events.QiPlaneEvent</code> 中,
可以看到持久化相关的代码行为 <code>Game1.player.mailReceived.Add(&quot;sawQiPlane&quot;);</code>
因此搜索内部条件函数, 可以找到 <code>StardewValley.GameStateQuery.DefaultResolvers.PLAYER_HAS_MAIL</code> ,
对应 <code>Game1.player.mailReceived.Add(&quot;sawQiPlane&quot;)</code>
的代码行是 <code>case &quot;received&quot;: return target.mailReceived.Contains(mailId);</code>
因此, 这里的检查就为: <strong>PLAYER_HAS_MAIL Host sawQiPlane received</strong></p>
<h4 id="最终总和"><a href="#最终总和" class="headerlink" title="最终总和"></a>最终总和</h4><p>功能检查最终汇总为: <strong>RANDOM 0.5,SEASON Spring,PLAYER_HAS_MAIL Host sawQiPlane received</strong></p>
<p>对于苔藓事件, 可以检查格斯的当天邮件, 在 <code>Content\Data\mail</code>, key: <strong>GreenRainGus</strong>, 因此检查为 RANDOM 0.5,PLAYER_HAS_MAIL Host GreenRainGus received</p>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>最终效果见 <a href="https://www.nexusmods.com/stardewvalley/mods/21299">Nexus</a></p>
<h2 id="另见"><a href="#另见" class="headerlink" title="另见"></a>另见</h2><a href="https://github.com/siweipancc/StardewMods/tree/master/%5BCP%5D%20Resources%20Generators"> 
<img data-src="https://img.shields.io/badge/Resources Generators-Resources+Generators?logo=github&color=blue" alt="Resources Generators"/>
</a>]]></content>
      <categories>
        <category>C#</category>
        <category>Mod 开发</category>
        <category>星露谷</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>Mod 开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Mod 开发 -- 星露谷中的自定义条件与脚本</title>
    <url>//2024/04/03/Mod-%E5%BC%80%E5%8F%91-%E6%98%9F%E9%9C%B2%E8%B0%B7%E4%B8%AD%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%89%8D%E7%BD%AE%E4%B8%8E%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="Mod-开发-–-星露谷中的自定义条件与脚本"><a href="#Mod-开发-–-星露谷中的自定义条件与脚本" class="headerlink" title="Mod 开发 – 星露谷中的自定义条件与脚本"></a>Mod 开发 – 星露谷中的自定义条件与脚本</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近星露谷更新了 1.6, 大量 mod 需要更新, 在贴吧闲逛时遇到了个友友在求蘑菇洞与水果洞共存的 Mod, 觉得甚是滑稽, 因此有了实现的想法.</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><span id="more"></span>
<p>首先探索实现的可能性,
首先入口是蘑菇洞与水果洞的选择入口是农场<a href="https://stardewvalleywiki.com/Modding:Event_data">事件</a> <code>Content\Data\Events</code>,
内容如下:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;65/m 25000/t 600 1200/H&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continue/64 15/farmer 64 16 2 Demetrius 64 18 0/pause 1500/speak Demetrius \&quot;嗨 @!我有好消息要告诉你。前几天，我对本地环境的研究取得了突破。$h#$b#技术细节我就不跟你说了，直接说结果……你知道往西一段距离的那个洞穴吧？我有办法把它变成有用的东西了……对你我都有用。#$b#我想利用那个洞吸引一些本地的物种。这样我就可以在一个更可控的环境下观察它们了。然后不管它们生出来啥都归你了。#$b#我也可以用这个洞吸引食菇蝠或果蝠。这些蝙蝠有时候会给你留下水果。\&quot;/cave/speak Demetrius \&quot;就这么说好了！我现在就给你收拾去！不会花很长时间的！$h#$b#谢谢你给我这次机会。\&quot;/end dialogue Demetrius \&quot;我很期待那个山洞会发生什么事，你也是吧？#$e#希望你对我的工作满意。\&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>解析为 :</p>
<p>Preconditions:</p>
<ul>
<li>事件ID 65</li>
<li>赚了 2,5000</li>
<li>六点到十二点</li>
<li>主机玩家</li>
</ul>
<p>Commands:</p>
<ul>
<li>播放当前音乐</li>
<li>相机对准 Tile 64,15</li>
<li>玩家站位 Tile 64,16 向下看</li>
<li>Demetrius 站位 Tile 64,16 向上看</li>
<li>停顿 1,500ms</li>
<li>Demetrius 说话:”嗨…略</li>
<li>触发 <strong>洞穴</strong> 选项</li>
<li>Demetrius 说话:”就…略</li>
<li>关闭 选项 dialogue</li>
<li>Demetrius 说话:”我很…略</li>
</ul>
<p>实际的代码应该在 <strong>洞穴选项</strong></p>
<h2 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h2><h3 id="前置检查-与-事件脚本"><a href="#前置检查-与-事件脚本" class="headerlink" title="前置检查 与 事件脚本"></a>前置检查 与 事件脚本</h3><p>检查&#x2F;脚本 应该属于属于具体抽象,
为: <code>StardewValley.Delegates.EventPreconditionDelegate</code> &#x2F; <code>StardewValley.Delegates.EventCommandDelegate</code> ,
默认实现分别为 <code>StardewValley.Preconditions</code> &#x2F; <code>StardewValley.Event.DefaultCommands</code>,
注册在代码 <code>StardewValley.Event.SetupEventCommandsIfNeeded</code> 函数中.</p>
<h3 id="洞穴事件"><a href="#洞穴事件" class="headerlink" title="洞穴事件"></a>洞穴事件</h3><p>定位到 <code>StardewValley.Event.DefaultCommands.Cave</code> 事件函数, 可以看到这里打开了一个选择窗口并指定窗口 ID 为 “cave”,
Dialogue 没有回调函数, 因此处理应该是由 action 处理(比如鼠标点击事件),
由 <code>Game1.currentLocation.createQuestionDialogue</code> 可以看到, 我们应该是在 <code>GameLocation</code> 中处理,
handle 入口递进为  <code>StardewValley.Game1.pressActionButton</code> &gt; <code>StardewValley.Event.answerDialogue</code> , 从 <strong>“cave”</strong>
定位到如下代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">         <span class="keyword">if</span>(!(questionKey ==<span class="string">&quot;cave&quot;</span>))</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span>(answerChoice ==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">Game1.MasterPlayer.caveChoice.Value =<span class="number">2</span>;</span><br><span class="line">        Game1.RequireLocation&lt;FarmCave&gt;(<span class="string">&quot;FarmCave&quot;</span>).</span><br><span class="line"></span><br><span class="line">setUpMushroomHouse();</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">Game1.MasterPlayer.caveChoice.Value =<span class="number">1</span>;    </span><br></pre></td></tr></table></figure>

<p>可以看到 根据选项不同, 主机玩家的 洞穴选择会持久化为 水果洞1, 蘑菇洞2
并设置蘑菇屋 <a href="https://mateusaquino.github.io/stardewids/">(BC)128</a>
与烘干机 <a href="https://mateusaquino.github.io/stardewids/">(BC)Dehydrator</a>,
在每日更新 <code>StardewValley.Locations.FarmCave.DayUpdate</code> 时, <strong>水果洞1</strong> 会随机在地上放置几个水果 并设置 <code>farmCaveReady</code>
值为 <strong>true</strong>. 对于蘑菇洞, 适用建筑规则, 在  <code>Content\Data\Machines</code>, key <strong>(BC)128</strong></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>为了更融入游戏场景, 因此不选择 hack 的方式, 改为让小黑过来玩中国名梗<del>我全都要</del>, 因此我们应该让他在前置检查在: 选择事件之后,
大于 2,5000 的金钱是很好的选择但是无法处理前后事件顺序, 因此需要编写一个自定义的前置检查 <code>caveChoice</code> 的值初始化检查是一个很好的选择, 
接下来是脚本的执行可以读取, 由于每日更新刷新水果硬编码需要 <code>caveChoice</code> 为 <strong>值1</strong>, 所以我们能做的是, 根据之间的选择将  <code>caveChoice</code> 更新为 <strong>值1</strong> 并可能需要设置蘑菇屋.</p>
<p>自定义检查:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// &lt;summary&gt; 检查农场洞穴事件是否已经触发.&lt;/summary&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;location&quot;&gt;The location which is checking the event.&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;eventId&quot;&gt;The unique ID for the event being checked.&lt;/param&gt;</span></span><br><span class="line"><span class="comment">/// &lt;param name=&quot;args&quot;&gt;The space-delimited event precondition string, including the precondition name.&lt;/param&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> bool <span class="title function_">FarmCaveFirstComplete</span><span class="params">(GameLocation location,</span></span><br><span class="line"><span class="params">    string eventId, string[] args)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">caveChoiceValue</span> <span class="operator">=</span> Game1.MasterPlayer.caveChoice.Value;</span><br><span class="line">    Trace(</span><br><span class="line">        $<span class="string">&quot;[FarmCaveFirstComplete] event : &#123;eventId&#125; , caveChoiceValue: &#123;caveChoiceValue&#125;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> caveChoiceValue is <span class="number">1</span> or <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义事件脚本:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">///  &lt;summary&gt; 洞穴升级.</span></span><br><span class="line"><span class="comment">/// 见 &lt;see cref=&quot;FarmCavePreconditions.FarmCaveFirstComplete&quot;/&gt;&lt;/summary&gt;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">FarmCaveUpgrade</span><span class="params">(Event <span class="meta">@event</span>, string[] args, EventContext context)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">var</span> <span class="variable">wrapper</span> <span class="operator">=</span> Game1.MasterPlayer.caveChoice;</span><br><span class="line">    <span class="type">var</span> <span class="variable">lastCave</span> <span class="operator">=</span> wrapper?.Value;</span><br><span class="line">    <span class="keyword">switch</span> (lastCave)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 水果 + 蘑菇</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Game1.RequireLocation&lt;FarmCave&gt;(<span class="string">&quot;FarmCave&quot;</span>).setUpMushroomHouse();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 蘑菇 + 水果</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            wrapper!.Set(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 错误状态</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            context.LogErrorAndSkip(<span class="string">&quot;必须在洞穴事件后&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Debug(<span class="string">&quot;FarmCaveUpgrade success!&quot;</span>);</span><br><span class="line">    ++<span class="meta">@event</span>.CurrentCommand;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意 <strong><a href="mailto:&#43;&#x2b;&#x40;&#101;&#118;&#x65;&#x6e;&#116;&#x2e;&#67;&#x75;&#114;&#114;&#101;&#x6e;&#116;&#67;&#111;&#x6d;&#x6d;&#x61;&#x6e;&#x64;">&#43;&#x2b;&#x40;&#101;&#118;&#x65;&#x6e;&#116;&#x2e;&#67;&#x75;&#114;&#114;&#101;&#x6e;&#116;&#67;&#111;&#x6d;&#x6d;&#x61;&#x6e;&#x64;</a></strong> , 脚本执行的块递进(符号 &#x2F; 区分)由该值确定</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>最终效果见 <a href="https://www.nexusmods.com/stardewvalley/mods/20947">Nexus</a></p>
<h2 id="另见"><a href="#另见" class="headerlink" title="另见"></a>另见</h2><a href="https://github.com/siweipancc/StardewMods/tree/master/MoreEvents"> 
<img data-src="https://img.shields.io/badge/MoreEvents-MoreEvents?logo=github&color=blue" alt="MoreEvents"/>
</a>


<a href="https://github.com/siweipancc/StardewMods/tree/master/%5BCP%5DOnlyChildMakeChoices"> 
<img data-src="https://img.shields.io/badge/OnlyChildMakeChoices-OnlyChildMakeChoices?logo=github&color=yellow" alt="OnlyChildMakeChoices"/>
</a>



]]></content>
      <categories>
        <category>C#</category>
        <category>Mod 开发</category>
        <category>星露谷</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>Mod 开发</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker 环境搭建与使用实例</title>
    <url>//2024/04/18/Docker-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%BD%BF%E7%94%A8%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="Docker-环境搭建与使用实例"><a href="#Docker-环境搭建与使用实例" class="headerlink" title="Docker 环境搭建与使用实例"></a>Docker 环境搭建与使用实例</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><del>面试造火箭</del>, 需要使用 WSL2, 提供基础搭建与一个 redis 实践, 包括常见的:</p>
<ol>
<li>系统配置</li>
<li>目录映射与持久化</li>
<li>网络设置与多网络联通</li>
</ol>
<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wsl -u root # 使用 root 用户 </span><br><span class="line">curl https://get.docker.com | sh</span><br><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure>

<h2 id="常见使用"><a href="#常见使用" class="headerlink" title="常见使用"></a>常见使用</h2><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull redis:7.2.4</span><br><span class="line">docker inspect redis:7.2.4</span><br></pre></td></tr></table></figure>

<h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><p><a href="https://docs.docker.com/reference/cli/docker/container/run/">指令 run</a>
<a href="https://docs.docker.com/reference/cli/docker/network/">指令 network</a>
<a href="https://hub.docker.com/_/redis">Docker 镜像</a></p>
<ol>
<li>创建目录 <code>~\redis\conf</code> 并下载 redis.conf 文件, 设置持久化规则</li>
<li>创建内部网络 reds</li>
<li>后台运行</li>
<li>命名为 redis1&#x2F;redis2</li>
<li>内存限制为 2GB</li>
<li>使用 4 个 cpu</li>
<li>加入 <strong>reds</strong> 网络</li>
<li>将内部的 6379 绑定到主机的 6377&#x2F;6378 端口</li>
<li>映射主机目录 <code>~/redis/data/redis1</code>, <code>~/redis/data/redis2</code> 到 容器的 <code>/data</code></li>
<li>映射主机目录 <code>~/redis/conf</code> 到 容器的 <code>~/conf</code></li>
<li>自动重启, 除非手动关闭, <a href="https://docs.docker.com/reference/cli/docker/container/run/#restart">见</a></li>
<li>使用 <code>/conf/redis.conf</code> 文件作为配置</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/redis/conf &amp;&amp; cd ~/redis/conf</span><br><span class="line">wget https://raw.githubusercontent.com/redis/redis/unstable/redis.conf &amp;&amp; echo &quot;save 60 1&quot; &gt;&gt; redis.conf</span><br><span class="line">docker network create reds </span><br><span class="line"></span><br><span class="line">docker run -d --name redis1 \</span><br><span class="line">-m 2GB --cpus 4 \</span><br><span class="line">--network reds \</span><br><span class="line">-p 6377:6379 \</span><br><span class="line">-v ~/redis/data/redis1:/data \</span><br><span class="line">-v ~/redis/conf:/conf \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">redis:7.2.4 \</span><br><span class="line">redis-server /conf/redis.conf</span><br><span class="line"></span><br><span class="line">docker run -d --name redis2 \</span><br><span class="line">-m 2GB --cpus 4 \</span><br><span class="line">--network reds \</span><br><span class="line">-p 6378:6379 \</span><br><span class="line">-v ~/redis/data/redis2:/data \</span><br><span class="line">-v ~/redis/conf:/conf \</span><br><span class="line">--restart unless-stopped \</span><br><span class="line">redis:7.2.4 \</span><br><span class="line">redis-server /conf/redis.conf</span><br><span class="line"></span><br><span class="line">docker network inspect reds</span><br></pre></td></tr></table></figure>

<h3 id="查看网络联通"><a href="#查看网络联通" class="headerlink" title="查看网络联通"></a>查看网络联通</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it redis1 bash</span><br><span class="line">ping -c 2 redis2</span><br><span class="line">docker exec -it redis2 bash</span><br><span class="line">ping -c 2 redis1</span><br></pre></td></tr></table></figure>

<h3 id="测试读写"><a href="#测试读写" class="headerlink" title="测试读写"></a>测试读写</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it redis1 bash</span><br><span class="line">redis-cli</span><br><span class="line">set game gtav</span><br><span class="line">get game</span><br><span class="line">exit</span><br><span class="line">cd ~/redis/data/redis1 &amp;&amp; ls -sh</span><br></pre></td></tr></table></figure>

<h3 id="已有实例加入另一个网络"><a href="#已有实例加入另一个网络" class="headerlink" title="已有实例加入另一个网络"></a>已有实例加入另一个网络</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network create app</span><br><span class="line">docker run --name app1 --network app -d redis:7.2.4</span><br><span class="line">docker network connect app redis1</span><br><span class="line">docker network inspect app</span><br><span class="line">docker exec -it app1 bash</span><br><span class="line">ping -c 2 redis1</span><br><span class="line">ping -c 2 redis2</span><br><span class="line">exit </span><br></pre></td></tr></table></figure>

<h3 id="移除容器与网络"><a href="#移除容器与网络" class="headerlink" title="移除容器与网络"></a>移除容器与网络</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker network disconnect app app1</span><br><span class="line">docker network disconnect app redis1</span><br><span class="line">docker network disconnect reds redis1 </span><br><span class="line">docker network disconnect reds redis2 </span><br><span class="line">docker stop redis1 redis2 app1</span><br><span class="line">docker ps -a</span><br><span class="line">docker rm redis1 redis2 app1</span><br><span class="line">docker network rm app</span><br><span class="line">docker network rm reds</span><br><span class="line">docker network ls</span><br></pre></td></tr></table></figure>

<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="加速-Docker"><a href="#加速-Docker" class="headerlink" title="加速 Docker"></a>加速 Docker</h3><h4 id="使用镜像"><a href="#使用镜像" class="headerlink" title="使用镜像"></a>使用镜像</h4><p><a href="https://yeasy.gitbook.io/docker_practice/install/mirror">参考</a>
<a href="https://gist.github.com/y0ngb1n/7e8f16af3242c7815e7ca2f0833d3ea6">gist</a></p>
<p>创建或修改 <code>/etc/docker/daemon.json</code></p>
<p>使用以下内容:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://dockerproxy.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://docker.nju.edu.cn&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>sudo systemctl daemon-reload</code>
<code>sudo systemctl restart docker</code></p>
<h3 id="为容器配置代理"><a href="#为容器配置代理" class="headerlink" title="为容器配置代理"></a>为容器配置代理</h3><p>修改 <code>~/.docker/config.json</code>, 另参见文章 “WSL2 环境搭建 Ubuntu” 中 “与宿主机之间通讯” 一节</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;proxies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;default&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;httpProxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://192.168.240.1:7890&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;httpsProxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://192.168.240.1:7890&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;noProxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*.test.example.com,.example.org,127.0.0.0/8&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用-root-用户-进入容器"><a href="#使用-root-用户-进入容器" class="headerlink" title="使用 root 用户 进入容器"></a>使用 root 用户 进入容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec -it -u 0 redis1 bash</span><br></pre></td></tr></table></figure>

<h3 id="自动重启-Docker-Engine"><a href="#自动重启-Docker-Engine" class="headerlink" title="自动重启 Docker Engine"></a>自动重启 Docker Engine</h3><p><code>sudo systemctl enable /usr/lib/systemd/system/docker.service</code></p>
<h3 id="使用-dive-分析镜像"><a href="#使用-dive-分析镜像" class="headerlink" title="使用 dive 分析镜像"></a>使用 dive 分析镜像</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo snap install dive</span><br><span class="line">dive redis:7.2.4</span><br></pre></td></tr></table></figure>

<h3 id="ping-命令不存在"><a href="#ping-命令不存在" class="headerlink" title="ping 命令不存在"></a>ping 命令不存在</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /bin &amp;&amp; find -name ping</span><br><span class="line">apt-get  update -y \</span><br><span class="line">&amp;&amp; apt-get upgrade -y \</span><br><span class="line">&amp;&amp; apt-get install iputils-ping -y \</span><br><span class="line">&amp;&amp; apt-get install net-tools -y </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL 增加 SSH 服务</title>
    <url>//2024/04/18/WSL-%E5%A2%9E%E5%8A%A0-SSH-%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="WSL-增加-SSH-服务"><a href="#WSL-增加-SSH-服务" class="headerlink" title="WSL 增加 SSH 服务"></a>WSL 增加 SSH 服务</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为 WSL 增加 SSH , 并通过公网暴露</p>
<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><span id="more"></span>

<h3 id="WSL-中"><a href="#WSL-中" class="headerlink" title="WSL 中"></a>WSL 中</h3><ol>
<li>检查 <code>service ssh status</code></li>
<li>安装 <code>apt install openssh-server</code></li>
<li>编辑文件 <code>echo &quot;Port 2222&quot; &gt;&gt; /etc/ssh/sshd_config &amp;&amp; echo &quot;ListenAddress 0.0.0.0&quot; &gt;&gt; /etc/ssh/sshd_config</code></li>
<li>启动服务 <code>service ssh start</code></li>
<li>检查服务 <code>service ssh status</code></li>
<li>获取 IP <code>ip -c address</code></li>
</ol>
<h3 id="Windows-中-开放到公网"><a href="#Windows-中-开放到公网" class="headerlink" title="Windows 中 (开放到公网)"></a>Windows 中 (开放到公网)</h3><p>如果使用 <strong>Cloudflare Zero Trust</strong> 或者 <a href="https://login.tailscale.com/admin/machines">Tailscale</a> 可以跳过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=2222 connectaddress=192.168.255.163 connectport=2222</span><br><span class="line">netsh advfirewall firewall add rule name=”Open Port 2222 for WSL2” dir=in action=allow protocol=TCP localport=2222</span><br><span class="line">netsh interface portproxy show v4tov4</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh siweipancc@192.168.255.163 -p 2222 </span><br></pre></td></tr></table></figure>

<h3 id="测试-通过-cloudflare"><a href="#测试-通过-cloudflare" class="headerlink" title="测试 - 通过 cloudflare"></a>测试 - 通过 cloudflare</h3><p>以 <a href="https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/remote-management/">Tunnels</a>
配置为例:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SubDomain</span></span><br><span class="line">wsl.pancc.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Service</span></span><br><span class="line">SSH://192.168.255.163:2222</span><br></pre></td></tr></table></figure>

<h4 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h4><p>编辑文件 <code>%USERPROFILE%\.ssh\config</code></p>
<p>加入以下内容:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Host wsl.pancc.com</span><br><span class="line">ProxyCommand C:\Program Files (x86)\cloudflared\cloudflared.exe access ssh --hostname %h</span><br></pre></td></tr></table></figure>

<p>使用控制台命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh siweipancc@wsl.pancc.com -p 80</span><br></pre></td></tr></table></figure>

<p>或使用 **MobaXterm **</p>
<ol>
<li>new session</li>
<li>host: <code>wsl.pancc.com</code>, port <code>80</code></li>
<li>选择 Network settings; 选择 Proxy Type: <code>Local</code> , Host: <code>wsl.pancc.com</code>,  Local Proxy
Command: <code>cloudflared.exe access ssh --hostname %host</code></li>
</ol>
<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="使用-Tailscale"><a href="#使用-Tailscale" class="headerlink" title="使用 Tailscale"></a>使用 Tailscale</h3><p>Cloudflare 在大陆的访问并不流畅, 并且需要需要额外配置, 可以使用 Tailscale 省去 <code>.ssh\config</code> 的配置</p>
<ol>
<li>通过 <a href="https://login.tailscale.com/admin/machines">该页面</a> 添加本地机器与 WSL 机器</li>
<li>复制 WSL 的 <strong>ADDRESSES</strong> 在本地机器以任何客户端登录 SSH, 端口为与配置一样为<code>2222</code></li>
</ol>
]]></content>
      <categories>
        <category>WSL</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>SSH</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL 环境搭建 Ubuntu</title>
    <url>//2024/04/18/WSL-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-Ubuntu/</url>
    <content><![CDATA[<h1 id="WSL-环境搭建-Ubuntu"><a href="#WSL-环境搭建-Ubuntu" class="headerlink" title="WSL 环境搭建 Ubuntu"></a>WSL 环境搭建 Ubuntu</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将开发环境从云切换到本地, 需要搭建 Docker 服务, 因此记录下 Windows 下搭建 WSL 的过程. <strong>需要开启 Hyper-V.</strong></p>
<h2 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h2><span id="more"></span>

<h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><ol>
<li>列举镜像: <code>wsl -l -o</code></li>
<li>安装镜像: <code>wsl --install -d Ubuntu-22.04</code></li>
<li>根据步骤设置超级用户名称与密码</li>
<li>设置默认镜像 <code>wsl -s &lt;DistributionName&gt;</code></li>
<li>可安装多个镜像, <code>wsl --install -d &lt;DistributionName&gt;</code></li>
</ol>
<h3 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h3><ol>
<li>进入默认的镜像: <code>wsl</code></li>
<li>进入指定的镜像: <code>wsl -d &lt;DistributionName&gt;</code></li>
<li>查看环境变量: <code>env</code></li>
</ol>
<h2 id="修改-apt-包镜像源"><a href="#修改-apt-包镜像源" class="headerlink" title="修改 apt 包镜像源"></a>修改 apt 包镜像源</h2><ol>
<li>进入 apt 目录: <code>/etc/apt</code></li>
<li>切换超管用户: <code>su</code>, 输入密码</li>
<li>备份源文件: <code>cp sources.list sources.list.back</code></li>
<li>编辑替换域名为 <code>mirrors.aliyun.com</code></li>
<li>重新加载 <code>apt update</code></li>
</ol>
<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="忘记用户密码"><a href="#忘记用户密码" class="headerlink" title="忘记用户密码"></a>忘记用户密码</h3><ol>
<li>执行: <code>wsl -u root</code></li>
<li>重设密码: <code>passwd &lt;username&gt;</code>, <strong>username</strong> 为安装时指定的用户名称</li>
<li>执行: <code>exit</code></li>
</ol>
<h3 id="用户切换"><a href="#用户切换" class="headerlink" title="用户切换"></a>用户切换</h3><ol>
<li>切换超管用户: <code>su</code></li>
<li>切换普通用户: <code>su - &lt;username&gt;</code></li>
</ol>
<h3 id="迁移-备份系统卷"><a href="#迁移-备份系统卷" class="headerlink" title="迁移&#x2F;备份系统卷"></a>迁移&#x2F;备份系统卷</h3><p>系统卷默认在 <strong>C</strong> 盘中, 占用太多空间, 可以迁移到其他盘符</p>
<ol>
<li>导出到文件: <code>wsl --export --vhd &lt;DistributionName&gt; ext4.vhdx</code></li>
<li>移动文件到特定目录</li>
<li>(仅迁移,删除原有的卷): <code>wsl --unregister &lt;DistributionName&gt;</code></li>
<li>导入: <code>wsl --import-in-place &lt;Distribution Name&gt; ext4.vhdx</code></li>
</ol>
<h3 id="迁移后默认用户丢失"><a href="#迁移后默认用户丢失" class="headerlink" title="迁移后默认用户丢失"></a>迁移后默认用户丢失</h3><p>编辑文件 <code>nano /etc/wsl.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[user]</span><br><span class="line">default=&lt;username&gt;</span><br></pre></td></tr></table></figure>

<h3 id="避免继承-win10-环境-path"><a href="#避免继承-win10-环境-path" class="headerlink" title="避免继承 win10 环境 path"></a>避免继承 win10 环境 path</h3><p>编辑文件 <code>nano /etc/wsl.conf</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[interop]</span><br><span class="line">appendWindowsPath = <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="删除特定系统"><a href="#删除特定系统" class="headerlink" title="删除特定系统"></a>删除特定系统</h3><p><code>wsl --unregister &lt;DistributionName&gt;</code></p>
<h3 id="与宿主机之间通讯"><a href="#与宿主机之间通讯" class="headerlink" title="与宿主机之间通讯"></a>与宿主机之间通讯</h3><p><strong>wsl</strong> 与 <strong>宿主机</strong> 通讯:</p>
<ol>
<li>执行 <code>cat /etc/resolv.conf</code></li>
<li>查找 <strong>nameserver</strong> , 值为宿主机</li>
</ol>
<p><strong>宿主机</strong> 与 <strong>wsl</strong> 通讯:</p>
<p>wsl <strong>共享</strong> Windows 的 IP, 因此在 wsl 运行的 端口 123 的服务在宿主机上可直接访问 <strong><a href="https://localhost:123/">https://localhost:123</a></strong></p>
<h3 id="与宿主机文件传输"><a href="#与宿主机文件传输" class="headerlink" title="与宿主机文件传输"></a>与宿主机文件传输</h3><ol>
<li>进入 <strong>wls</strong></li>
<li>执行 <code>explorer.exe .</code></li>
</ol>
<h3 id="宿主机直接访问特定镜像文件管理"><a href="#宿主机直接访问特定镜像文件管理" class="headerlink" title="宿主机直接访问特定镜像文件管理"></a>宿主机直接访问特定镜像文件管理</h3><p>资源管理器直接访问 <code>\\wsl$\&lt;DistributionName&gt;</code></p>
<h3 id="代理设置1"><a href="#代理设置1" class="headerlink" title="代理设置1"></a>代理设置1</h3><p>设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export http_proxy=http://192.168.240.1:7890</span><br><span class="line">export https_proxy=http://192.168.240.1:7890</span><br></pre></td></tr></table></figure>

<p>取消</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unset http_proxy</span><br><span class="line">unset https_proxy</span><br></pre></td></tr></table></figure>

<h3 id="代理设置2"><a href="#代理设置2" class="headerlink" title="代理设置2"></a>代理设置2</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano /etc/environment </span><br><span class="line">http_proxy=http://192.168.240.1:7890</span><br><span class="line">https_proxy=http://192.168.240.1:7890</span><br><span class="line">no_proxy=localhost,127.0.0.0/8,127.0.1.1</span><br></pre></td></tr></table></figure>

<h3 id="包管理器"><a href="#包管理器" class="headerlink" title="包管理器"></a>包管理器</h3><ol>
<li>apt</li>
<li>snap</li>
</ol>
]]></content>
      <categories>
        <category>WSL</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 nvm 管理 node 版本</title>
    <url>//2024/04/18/%E4%BD%BF%E7%94%A8-nvm-%E7%AE%A1%E7%90%86-node-%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="使用-nvm-管理-node-版本"><a href="#使用-nvm-管理-node-版本" class="headerlink" title="使用 nvm 管理 node 版本"></a>使用 nvm 管理 node 版本</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>简化前端开发, 快速安装和使用不同版本的node</p>
<h2 id="Linux-下安装"><a href="#Linux-下安装" class="headerlink" title="Linux 下安装"></a>Linux 下安装</h2><span id="more"></span>

<h3 id="安装-lts"><a href="#安装-lts" class="headerlink" title="安装 lts"></a>安装 lts</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install curl</span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash</span><br><span class="line">export NVM_DIR=&quot;$([ -z &quot;$&#123;XDG_CONFIG_HOME-&#125;&quot; ] &amp;&amp; printf %s &quot;$&#123;HOME&#125;/.nvm&quot; || printf %s &quot;$&#123;XDG_CONFIG_HOME&#125;/nvm&quot;)&quot; \</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot; # This loads nvm</span><br><span class="line">nvm ls</span><br><span class="line">nvm install --lts</span><br></pre></td></tr></table></figure>

<h2 id="基础管理命令"><a href="#基础管理命令" class="headerlink" title="基础管理命令"></a>基础管理命令</h2><ol>
<li>查看 node 路径: <code>which node</code></li>
<li>查看 npm 路径: <code>which npm</code></li>
<li>切换特定版本: <code>nvm use &lt;version&gt;</code></li>
<li>查看本地列表: <code>nvm ls</code></li>
<li>查看远程列表: <code>nvm ls-remote --lts</code></li>
<li>安装特定版本 <code>nvm install &lt;version&gt;</code></li>
</ol>
<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="加速-npm"><a href="#加速-npm" class="headerlink" title="加速 npm"></a>加速 npm</h3><h4 id="使用淘宝镜像"><a href="#使用淘宝镜像" class="headerlink" title="使用淘宝镜像"></a>使用淘宝镜像</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmmirror.com</span><br><span class="line">npm config get registry</span><br><span class="line">npm info express</span><br></pre></td></tr></table></figure>

<h4 id="使用-cnpm"><a href="#使用-cnpm" class="headerlink" title="使用 cnpm"></a>使用 cnpm</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npmmirror.com</span><br><span class="line">cnpm install -g typscript</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
        <tag>nvm</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 sdkman 管理 Java 版本</title>
    <url>//2024/04/18/%E4%BD%BF%E7%94%A8-sdkman-%E7%AE%A1%E7%90%86-Java-%E7%89%88%E6%9C%AC/</url>
    <content><![CDATA[<h1 id="使用-sdkman-管理-node-版本"><a href="#使用-sdkman-管理-node-版本" class="headerlink" title="使用 sdkman 管理 node 版本"></a>使用 sdkman 管理 node 版本</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>简化后端开发, 快速安装和使用不同版本的 JDK</p>
<h2 id="Linux-下安装"><a href="#Linux-下安装" class="headerlink" title="Linux 下安装"></a>Linux 下安装</h2><span id="more"></span>

<h3 id="安装主程序"><a href="#安装主程序" class="headerlink" title="安装主程序"></a>安装主程序</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install zip unzip</span><br><span class="line">curl -s &quot;https://get.sdkman.io&quot; | bash</span><br><span class="line">source &quot;$HOME/.sdkman/bin/sdkman-init.sh&quot;</span><br><span class="line">sdk version</span><br></pre></td></tr></table></figure>


<h2 id="基础管理命令"><a href="#基础管理命令" class="headerlink" title="基础管理命令"></a>基础管理命令</h2><ol>
<li>查看远程列表: <code>sdk list java</code></li>
<li>安装 Eclipse-21 版本: <code>sdk install java 21.0.2-tem</code></li>
<li>当前版本: <code>sdk current java</code></li>
<li>设置默认版本: <code>sdk default java 21.0.2-tem</code></li>
<li>查看本地版本 <code>sdk offline enable</code>,<code>sdk list java</code>,<code>sdk offline disable</code></li>
</ol>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>sdkman</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 的文件权限</title>
    <url>//2024/04/21/Linux-%E7%9A%84%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90/</url>
    <content><![CDATA[<h1 id="Linux-的文件权限"><a href="#Linux-的文件权限" class="headerlink" title="Linux 的文件权限"></a>Linux 的文件权限</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些常见的权限管理规则与命令.</p>
<h2 id="权限位标志"><a href="#权限位标志" class="headerlink" title="权限位标志"></a>权限位标志</h2><h3 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h3><p>使用 <strong>root</strong> 账户执行以下命令</p>
<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建临时目录</span></span><br><span class="line">mkdir /tmp/test</span><br><span class="line">cd /tmp/test</span><br><span class="line">echo &quot;from root!&quot; &gt;&gt; root.txt</span><br><span class="line">echo &quot;echo print from root!&quot; &gt;&gt; root.sh</span><br><span class="line">touch pipe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">单列打印所有文件附文件类型</span></span><br><span class="line">ls -alF</span><br></pre></td></tr></table></figure>

<p>以下是打印列表列表, 分别为 标志位&#x2F;路径数量&#x2F;所属用户&#x2F;所属组&#x2F;大小&#x2F;创建时间&#x2F;路径</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x  2 siweipancc siweipancc 4096 Apr 21 20:02 ./</span><br><span class="line">drwxrwxrwt 17 root       root       4096 Apr 21 19:50 ../</span><br><span class="line">-rw-r--r--  1 root       root          0 Apr 21 20:02 pipe</span><br><span class="line">-rw-r--r--  1 root       root         17 Apr 21 20:01 root.sh</span><br><span class="line">-rw-r--r--  1 root       root         11 Apr 21 20:01 root.txt</span><br></pre></td></tr></table></figure>

<p>尝试执行 <code>./root.sh</code> 会抛出一个 <strong>Permission denied</strong> 错误. 使用 <code>chmod +x root.sh</code> 修正后执行. 以下是最终列表:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drwxr-xr-x  2 siweipancc siweipancc 4096 Apr 21 20:02 ./</span><br><span class="line">drwxrwxrwt 17 root       root       4096 Apr 21 19:50 ../</span><br><span class="line">-rw-r--r--  1 root       root          0 Apr 21 20:02 pipe</span><br><span class="line">-rwxr--r--  1 root       root         17 Apr 21 20:01 root.sh*</span><br><span class="line">-rw-r--r--  1 root       root         11 Apr 21 20:01 root.txt</span><br></pre></td></tr></table></figure>

<p>尝试以其它用户编辑 <strong>nano root.sh</strong> 得到一个 <code>[ File &#39;root.sh&#39; is unwritable ]</code> 错误.</p>
<h3 id="标志组成"><a href="#标志组成" class="headerlink" title="标志组成"></a>标志组成</h3><blockquote>
<p>使用 <code>man chmod</code> 查看文档,
<a href="https://wangchujiang.com/linux-command/c/chmod.html">在线参考</a>,
<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/4/html/introduction_to_system_administration/s1-acctsgrps-rhlspec#s2-acctsgrps-basics">红帽参考</a>.</p>
</blockquote>
<p>标志由 1+3+3+3 组成, 1 位为 文件夹<strong>d</strong> 或者 文件<strong>f</strong>, 剩下的每 三位代表 <strong>读&#x2F;写&#x2F;执行</strong> 权限,
分别归属 <strong>当前登录用户</strong>&#x2F;<strong>组用户</strong>&#x2F;<strong>其他用户</strong>.</p>
<h3 id="chmod-命令"><a href="#chmod-命令" class="headerlink" title="chmod 命令"></a>chmod 命令</h3><ol>
<li>用户标志<ol>
<li><code>u</code> 代表当前用户</li>
<li><code>g</code> 代表和当前用户在同一个组的用户</li>
<li><code>o</code> 代表其他用户</li>
<li><code>a</code> 代表所有用户</li>
</ol>
</li>
<li>权限值<ol>
<li><code>r</code> 代表 <code>读</code>   权限以及八进制数 <code>4</code></li>
<li><code>w</code> 代表 <code>写</code>   权限以及八进制数 <code>2</code></li>
<li><code>x</code> 代表 <code>执行</code> 权限以及八进制数 <code>1</code></li>
</ol>
</li>
<li>权限增删<ol>
<li><code>+</code> 代表添加目标用户相应的权限</li>
<li><code>-</code> 代表删除目标用户相应的权限</li>
<li><code>=</code> 代表添加目标用户相应的权限</li>
</ol>
</li>
</ol>
<h4 id="使用例"><a href="#使用例" class="headerlink" title="使用例"></a>使用例</h4><ol>
<li><code>chmod u+w root.sh</code>&#x2F;<code>chmod u-w root.sh</code>: 添加&#x2F;删除当前用户的写权限</li>
<li><code>chmod u=rwx root.sh</code>: 设置当前用户的 读&#x2F;写&#x2F;执行 权限</li>
<li><code>chmod u=rwx g=rw o=r root.sh</code>: 设置当前用户 读&#x2F;写&#x2F;执行 权限, 组用户为 读&#x2F;写, 其他用户为 读</li>
<li><code>chmod 761 root.sh</code>: 等价于上边的命令, 计算规则为 <code>7=4(读)+2(写)+1(执行)</code></li>
<li><code>chmod --reference=./pipe ./root.txt</code>: 以文件 <strong>pipe</strong> 为范例设置 <strong>root.txt</strong> 的权限</li>
<li><code>chmod -R 555 c1/</code>: 以递归方式修改文件夹 <strong>c1</strong> 的权限, <strong>当前用户必须保留执行权限, 即 第一位必须为奇数</strong></li>
</ol>
<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="递归修改权限遇到-Permission-denied-错误"><a href="#递归修改权限遇到-Permission-denied-错误" class="headerlink" title="递归修改权限遇到 Permission denied 错误"></a>递归修改权限遇到 Permission denied 错误</h3><p>在任意目录执行 <code>ls -alF</code> , 诸如 <code>../</code> 与 <code> c1/</code> 等路径导航必须有 执行标志 x, 否则无法进入;</p>
<p>当执行 <code>rm -rf ./test/</code> 遇到以上类别的错误, 可以尝试以 root 用户组 执行<code>chmod -R +x ./test/ &amp;&amp; rm -rf ./test/</code></p>
<h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><a href="/2024/04/21/Linux-%E7%9A%84%E7%94%A8%E6%88%B7%E4%B8%8E%E7%94%A8%E6%88%B7%E7%BB%84/" title="Linux 的用户与用户组">Linux 的用户与用户组</a>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>权限</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 的用户与用户组</title>
    <url>//2024/04/21/Linux-%E7%9A%84%E7%94%A8%E6%88%B7%E4%B8%8E%E7%94%A8%E6%88%B7%E7%BB%84/</url>
    <content><![CDATA[<h1 id="Linux-的用户与用户组"><a href="#Linux-的用户与用户组" class="headerlink" title="Linux 的用户与用户组"></a>Linux 的用户与用户组</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h2 id="结构化存储"><a href="#结构化存储" class="headerlink" title="结构化存储"></a>结构化存储</h2><p>组数据存放在目录 <code>/etc/</code> 中, 并以多个文件存储, 分别为:</p>
<ol>
<li>passwd: 用户信息, 公共读</li>
<li>shadow: 用户密码, root 读</li>
<li>group:  组信息, 公共读</li>
<li>gshadow: 组密码,root 读</li>
</ol>
<span id="more"></span>

<h3 id="文件-passwd"><a href="#文件-passwd" class="headerlink" title="文件 passwd"></a>文件 passwd</h3><p><code>公共读</code>, 每个用户位于单独的行上, 并以 分号 分割, 分别为:</p>
<ul>
<li>Username: 登录名</li>
<li>Password: 加密密码. <strong>x</strong> 表示正在使用 <code>shadow</code> 文件管理密码</li>
<li>UID: 用户 ID,</li>
<li>GID: 组 ID</li>
<li>GECOS: 历史遗留 <a href="#gecos-%E5%AD%97%E6%AE%B5%E5%90%AB%E4%B9%89">见</a></li>
<li>Home directory: 用户主目录</li>
<li>Shell: 用户登录时自动启动的程序</li>
</ul>
<p>例如: <code>siweipancc:x:1000:1000:,,,:/home/siweipancc:/bin/bash</code></p>
<h4 id="管理-Password"><a href="#管理-Password" class="headerlink" title="管理 Password"></a>管理 Password</h4><p>修改当前用户名密码执行 <code>passwd</code> , 用 <code>passwd &lt;username&gt;</code> 以指定用户</p>
<p>可选项为:</p>
<ul>
<li><code>-l</code>: 锁定用户密码</li>
<li><code>-d</code>: 清楚用户密码</li>
</ul>
<h4 id="管理-GECOS"><a href="#管理-GECOS" class="headerlink" title="管理 GECOS"></a>管理 GECOS</h4><p>该字段为以逗号分割的 4 段式内容, 通过 <code>finger</code> 查询内容, 可通过 <code>chfn</code> 命令进入交互式修改, 可选项为:</p>
<ul>
<li><code>-f</code>: 真实姓名</li>
<li><code>-h</code>: 家中的电话号码</li>
<li><code>-o</code>: 办公室的地址</li>
<li><code>-p</code>: 办公室的电话号码</li>
</ul>
<h4 id="管理-UID-GID"><a href="#管理-UID-GID" class="headerlink" title="管理 UID &#x2F; GID"></a>管理 UID &#x2F; GID</h4><p>执行 <code>id</code>  查看 <strong>用户 id</strong>, 输出包含 <strong>组 id</strong>, 可选项为:</p>
<ul>
<li><code>-g</code>: 输出 有效组</li>
<li><code>-G</code>: 输出 所有组</li>
<li><code>-u</code>: 输出 有效的用户ID</li>
</ul>
<p>以上可组合下列选项:</p>
<ul>
<li><code>-n</code>: 打印名称而不是数字</li>
<li><code>-r</code>: 打印真实ID而不是有效ID</li>
</ul>
<p>例:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">id # uid=1000(siweipancc) gid=1000(siweipancc) groups=1000(siweipancc),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),116(netdev)</span><br><span class="line">id -u # 1000</span><br><span class="line">id -g # 1000</span><br><span class="line">id -G # 1000 4 20 24 25 27 29 30 44 46 116</span><br><span class="line">id -un # siweipancc</span><br><span class="line">id -ur # 1000</span><br><span class="line">id -gn # siweipancc</span><br><span class="line">id -gr # 1000</span><br></pre></td></tr></table></figure>

<h4 id="管理-Shell"><a href="#管理-Shell" class="headerlink" title="管理 Shell"></a>管理 Shell</h4><p>默认使用 <code>/bin/bash</code>, 置空将使用 <code>/bin/sh</code> , 如果指向错误将导致无法登录.</p>
<h4 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h4><blockquote>
<p><a href="https://wangchujiang.com/linux-command/c/useradd.html">在线文档</a></p>
</blockquote>
<p>使用 <code>useradd</code> 新建用户</p>
<ol>
<li><code>-d</code>: 指定用户登入时的启始目录</li>
<li><code>-D</code>: 变更预设值</li>
<li><code>-e</code>: 指定帐号的有效期限</li>
<li><code>-f</code>: 指定在密码过期后多少天即关闭该帐号</li>
<li><code>-g</code>: 指定用户所属的群组</li>
<li><code>-G</code>: 指定用户所属的附加群组</li>
<li><code>-m</code>: 自动建立用户的登入目录</li>
<li><code>-M</code>: 不要自动建立用户的登入目录</li>
<li><code>-n</code>: 取消建立以用户名称为名的群组</li>
<li><code>-r</code>: 建立系统帐号</li>
<li><code>-s</code>: 指定用户登入后所使用的shell</li>
<li><code>-u</code>: 指定用户id</li>
</ol>
<p>使用 <code>userdel</code> 删除用户, 可选:</p>
<ul>
<li><code>-r</code>:同时删除用户目录及文件</li>
</ul>
<p>例:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建议完成以下内容再阅读</span></span><br><span class="line">root@siweipancc-GZ:/tmp# useradd testman</span><br><span class="line">root@siweipancc-GZ:/tmp# passwd testman</span><br><span class="line">root@siweipancc-GZ:/tmp# id testman</span><br><span class="line">uid=1001(testman) gid=1001(testman) groups=1001(testman)</span><br><span class="line">root@siweipancc-GZ:/tmp# cat /etc/passwd | grep &#x27;testman&#x27;</span><br><span class="line">testman:x:1001:1001::/home/testman:/bin/sh</span><br><span class="line">root@siweipancc-GZ:/tmp# cat /etc/shadow | grep &#x27;testman&#x27;</span><br><span class="line">testman:$y$j9T$0DzFbh9/XNR6OVewcXz0F/$GsgYzI/.ammnsvvHYr8XOIj4LpjOl9Bup0Ny5IBABo9:19834:0:99999:7:::</span><br><span class="line">root@siweipancc-GZ:/tmp# cat /etc/group | grep &#x27;testman&#x27;</span><br><span class="line">root@siweipancc-GZ:/tmp# cat /etc/gshadow | grep &#x27;testman&#x27;</span><br><span class="line">testman:!::</span><br><span class="line">testman:x:1001:</span><br><span class="line">root@siweipancc-GZ:/tmp# userdel -r testman</span><br></pre></td></tr></table></figure>

<h3 id="文件-shadow"><a href="#文件-shadow" class="headerlink" title="文件 shadow"></a>文件 shadow</h3><p><code>root 读</code>, 每个用户位于单独的行上, 并以 分号 分割, 分别为:</p>
<ul>
<li>登录名</li>
<li>加密密码: 使用 crypt(3) 库函数或md5哈希算法对密码进行加密, 如果值为 ! 或 *. 则帐户被锁定. 不允许用户登录,如果值为 !!
则为密码以前从未设置过, 无法登录</li>
<li>上次更改密码的日期: 以天数表示, 计算基底为: 1970-1-1</li>
<li>可以更改密码之前的天数: 可以更改密码之前必须经过的最短天数</li>
<li>需要更改密码之前的天数: <code>必须</code>更改密码之前必须经过的天数</li>
<li>密码更改前警告的天数: 密码到<code>期前</code>警告用户即将到期的天数</li>
<li>密码过期未登录天数限制: 密码<code>过期</code>后帐户被<code>禁用</code>之前的天数</li>
<li>帐户被禁用的日期: 以天数表示, 计算基底为: 1970-1-1</li>
<li>保留字段</li>
</ul>
<p>例: <code>binlog:$1$.QKDPc5E$SWlkjRWexrXYgc98F.:12825:0:120:5:20:13096: </code></p>
<ul>
<li>登录名 binlog</li>
<li>密码最后更改时间为 2005 年 2 月 11 日</li>
<li>更改密码没有最短时间限制</li>
<li>密码必须每 120 天更改一次</li>
<li>用户将在必须更改密码前 5 天收到警告</li>
<li>密码过期 20 天后. 如果未尝试登录. 帐户将被禁用</li>
<li>该帐户将于 2005 年 11 月 9 日到期</li>
</ul>
<h3 id="文件-group"><a href="#文件-group" class="headerlink" title="文件 group"></a>文件 group</h3><p><code>公共读</code>, 每个组位于单独的行上, 并以 分号 分割,
格式 <code>Group name  : Password : UID : GID : GECOS : Home directory : Shell</code> 分别为:</p>
<ul>
<li>组名</li>
<li>组密码: 加密密码. <strong>x</strong> 表示正在使用 <code>gshadow</code> 文件管理密码</li>
<li>GID: 组 ID</li>
<li>成员列表: 属于该组的用户的逗号分隔列表</li>
</ul>
<h4 id="管理组"><a href="#管理组" class="headerlink" title="管理组"></a>管理组</h4><p>使用 <code>groupmod [ops] &lt;group&gt;</code> 管理组, 可选:</p>
<ul>
<li><code>-n &lt;new name&gt;</code>: 修改 组名</li>
<li><code>-g &lt;new gid&gt;</code>: 修改 组 ID</li>
</ul>
<p>使用 <code>groupadd [ops] &lt;group&gt;</code> 增加组, 可选:</p>
<ol>
<li><code>-g</code>: 指定新建工作组的id</li>
<li><code>-r</code>: 创建系统工作组, 系统工作组的组ID小于500</li>
<li><code>-K</code>: 覆盖配置文件 <code>/ect/login.defs</code></li>
<li><code>-o</code>: 允许添加组ID号不唯一的工作组</li>
</ol>
<p>使用 <code>groupdel [ops] &lt;group&gt;</code> 删除组</p>
<p>使用 <code>newgrp</code>
对于初始数据:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@siweipancc-GZ:/etc# id siweipancc</span><br><span class="line">uid=1000(siweipancc) gid=1000(siweipancc) groups=1000(siweipancc),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),116(netdev)</span><br><span class="line">root@siweipancc-GZ:/etc# cat group | grep &#x27;siweipancc&#x27;</span><br><span class="line">adm:x:4:syslog,siweipancc</span><br><span class="line">dialout:x:20:siweipancc</span><br><span class="line">cdrom:x:24:siweipancc</span><br><span class="line">floppy:x:25:siweipancc</span><br><span class="line">sudo:x:27:siweipancc</span><br><span class="line">audio:x:29:siweipancc</span><br><span class="line">dip:x:30:siweipancc</span><br><span class="line">video:x:44:siweipancc</span><br><span class="line">plugdev:x:46:siweipancc</span><br><span class="line">netdev:x:116:siweipancc</span><br><span class="line">siweipancc:x:1000:</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>对组名跟 id 进行修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@siweipancc-GZ:/etc# groupmod -n gpancc siweipancc</span><br><span class="line">root@siweipancc-GZ:/etc# groupmod -g 1200 gpancc</span><br><span class="line">root@siweipancc-GZ:/etc# id siweipancc</span><br><span class="line">uid=1000(siweipancc) gid=1200(gpancc) groups=1200(gpancc),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),116(netdev)</span><br><span class="line">root@siweipancc-GZ:/etc# cat group | grep &#x27;gpancc&#x27;</span><br><span class="line">gpancc:x:1200:</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@siweipancc-GZ:/etc# id siweipancc</span><br><span class="line">uid=1000(siweipancc) gid=1000(siweipancc) groups=1000(siweipancc),4(adm),20(dialout),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),116(netdev)</span><br><span class="line">root@siweipancc-GZ:/etc# cat group | grep &#x27;siweipancc&#x27;</span><br><span class="line">adm:x:4:syslog,siweipancc</span><br><span class="line">dialout:x:20:siweipancc</span><br><span class="line">cdrom:x:24:siweipancc</span><br><span class="line">floppy:x:25:siweipancc</span><br><span class="line">sudo:x:27:siweipancc</span><br><span class="line">audio:x:29:siweipancc</span><br><span class="line">dip:x:30:siweipancc</span><br><span class="line">video:x:44:siweipancc</span><br><span class="line">plugdev:x:46:siweipancc</span><br><span class="line">netdev:x:116:siweipancc</span><br><span class="line">root@siweipancc-GZ:/etc# cat group | grep &#x27;gpancc&#x27;</span><br><span class="line">gpancc:x:1200:</span><br><span class="line">root@siweipancc-GZ:/etc# groups siweipancc</span><br><span class="line">siweipancc : gpancc adm dialout cdrom floppy sudo audio dip video plugdev netdev</span><br></pre></td></tr></table></figure>

<h3 id="文件-gshadow"><a href="#文件-gshadow" class="headerlink" title="文件 gshadow"></a>文件 gshadow</h3><p><code>root 读</code>, 每个组位于单独的行上, 并以 分号 分割, 分别为:</p>
<ul>
<li>组名称</li>
<li>加密密码</li>
<li>组管理员: 以逗号分隔, 用 <code>gpasswd</code> 添加删除人员</li>
<li>组成员: 以逗号分隔</li>
</ul>
<h4 id="管理组密码"><a href="#管理组密码" class="headerlink" title="管理组密码"></a>管理组密码</h4><p>使用 <code>gpasswd &lt;groupname&gt;</code> 进入交互模式</p>
<h4 id="管理成员"><a href="#管理成员" class="headerlink" title="管理成员"></a>管理成员</h4><p>使用 <code>gpasswd [ops] &lt;groupname&gt;</code> 命令, 可选:</p>
<ol>
<li><code>-a</code>添加用户到组；</li>
<li><code>-d</code>从组删除用户；</li>
<li><code>-A</code>指定管理员；</li>
<li><code>-M</code>指定组成员和-A的用途差不多；</li>
<li><code>-r</code>删除密码；</li>
<li><code>-R</code>限制用户登入组，只有组中的成员才可以用 <code>newgrp</code> 加入该组。</li>
</ol>
<h2 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h2><h3 id="GECOS-字段含义"><a href="#GECOS-字段含义" class="headerlink" title="GECOS 字段含义"></a>GECOS 字段含义</h3><p>GECOS 代表通用电气综合运营主管. 贝尔实验室在最初的 UNIX 实现中使用了该字段. 实验室有许多不同的计算机. 其中一台运行
GECOS. 该字段用于存储 UNIX 系统向 GECOS 系统发送批处理和打印作业时的信息.</p>
<h3 id="GECOS-字段部分无法修改"><a href="#GECOS-字段部分无法修改" class="headerlink" title="GECOS 字段部分无法修改"></a>GECOS 字段部分无法修改</h3><p>编辑文件 <code>nano /etc/login.defs</code> ,<code>CTRL + w</code> 输入 <code>CHFN</code> 定位到  <code>CHFN_RESTRICT</code> 行, 修改
为 <code>frwh</code>,  <code>CTRL + s</code>, <code>CTRL + x</code> 保存并退出, 使用 <code>finger</code> 查询结果</p>
<h3 id="切换用户密码的存储路径"><a href="#切换用户密码的存储路径" class="headerlink" title="切换用户密码的存储路径"></a>切换用户密码的存储路径</h3><p>使用 <code>pwconv</code> 将 <code>/etc/passwd</code> 的密码迁移到 <code>/etc/shadow</code>(建议)
使用 <code>pwunconv</code> 逆转该过程(不建议)</p>
<h3 id="切换组密码的存储路径"><a href="#切换组密码的存储路径" class="headerlink" title="切换组密码的存储路径"></a>切换组密码的存储路径</h3><p>使用 <code>grpconv</code> 将 <code>/etc/group</code> 的密码迁移到 <code>/etc/gshadow</code>(建议)
使用 <code>grpunconv</code> 逆转该过程(不建议)</p>
<h3 id="使当前用户暂时加入组"><a href="#使当前用户暂时加入组" class="headerlink" title="使当前用户暂时加入组"></a>使当前用户暂时加入组</h3><p>使用 <code>newgrp &lt;groupname&gt;</code> 输入对应的组密码之后可以暂时该组权限与标记读取与修改文件等. 当该用户被使用 <code>-r</code> 标记删除时,
这些更改不会被删除.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>权限</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常见内容速查</title>
    <url>//2024/04/22/Linux-%E5%B8%B8%E8%A7%81%E5%86%85%E5%AE%B9%E9%80%9F%E6%9F%A5/</url>
    <content><![CDATA[<h1 id="Linux-常见内容速查"><a href="#Linux-常见内容速查" class="headerlink" title="Linux 常见内容速查"></a>Linux 常见内容速查</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录日常维护与使用的常见指令.</p>
<h2 id="基础管理"><a href="#基础管理" class="headerlink" title="基础管理"></a>基础管理</h2><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><ul>
<li><code>ps</code>: 报告当前系统的进程状态</li>
<li><code>pidof</code>: 查找指定名称的进程的进程号ID号</li>
<li><code>pstree</code>: 以树状图的方式展现进程之间的派生关系</li>
<li><code>pstack</code>: 显示每个进程的栈跟踪</li>
<li><code>fuser</code>: 使用文件或文件结构识别进程</li>
<li><code>times</code>: 显示进程累计时间</li>
<li><code>pgrep</code>: 查找进程</li>
<li><code>wait</code>: 等待进程执行完后返回</li>
<li><code>renice</code>: 修改正在运行的进程的调度优先级</li>
<li><code>kill</code>: 发送信号到进程</li>
<li><code>pkill</code>: 按照进程名杀死进程</li>
<li><code>killall</code>: 杀死一组同名进程</li>
<li><code>skill</code>: 发送信号冻结进程</li>
<li><code>nohup</code>: 将程序以忽略挂起信号的方式运行起来</li>
<li><code>trap</code>: 捕捉信号和其他事件并执行命令</li>
<li><code>ipcs</code>: 分析消息队列共享内存和信号量</li>
</ul>
<span id="more"></span>

<h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><ul>
<li><code>scp</code>: 在本地主机和远程主机之间复制文件</li>
<li><code>rcp</code>: 在两台Linux主机之间进行文件复制</li>
<li><code>cp</code>: 复制文件</li>
<li><code>touch</code>: 创建新的空文件或者更新时间标签</li>
<li><code>mkdir</code>: 创建目录</li>
<li><code>rename</code>: 用字符串替换的方式批量改变文件名</li>
<li><code>mv</code>: 对文件或目录重新命名</li>
<li><code>rm</code>: 删除给定的文件和目录</li>
<li><code>rmdir</code>: 删除空目录</li>
<li><code>basename</code>: 打印目录或者文件的基本名称</li>
<li><code>ln</code>: 创建链接</li>
<li><code>du</code>: 显示每个文件和目录的磁盘使用空间</li>
<li><code>lsof</code>: 显示系统当前已打开的所有文件列表</li>
<li><code>find</code>: 查找文件</li>
<li><code>locate</code>: 查找文件的改进</li>
<li><code>file</code>: 探测给定文件的类型</li>
<li><code>split</code>: 分割任意大小的文件</li>
<li><code>csplit</code>: 将一个大文件分割成小的碎片文件</li>
<li><code>cat</code>: 连接多个文件</li>
<li><code>diff</code>: 比较给定的两个文件的不同</li>
</ul>
<h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><ul>
<li><code>info</code>: 帮助指令</li>
<li><code>man</code>: 帮助指令</li>
<li><code>type</code>: 显示指定命令的类型</li>
<li><code>alias</code>: 定义或显示别名</li>
<li><code>tar</code>: 归档管理, 包含解压与压缩</li>
<li><code>zip</code>: 解&#x2F;压缩文件</li>
<li><code>zipinfo</code>: 列出压缩文件信息</li>
<li><code>md5sum</code>: 计算和校验文件报文摘要</li>
<li><code>base64</code>: base64 编码&#x2F;解码文件或标准输入输出</li>
<li><code>dirs</code>: 目录堆栈</li>
<li><code>dris</code>: 显示和清空目录堆栈中的内容</li>
<li><code>echo</code>: 输出指定的字符串或者变量</li>
<li><code>openssl</code>: 安全套接字层密码库</li>
</ul>
<h3 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h3><ul>
<li><code>let</code>: 执行算术表达式</li>
<li><code>expr</code>: 输出表达式计算</li>
<li><code>shuf</code>: 产生随机的排列</li>
</ul>
<h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><ul>
<li><code>telnet</code>: 登录远程主机和管理(测试ip端口是否连通)</li>
<li><code>ping</code>: 测试主机之间网络的连通性</li>
<li><code>fping</code>: 检测主机是否存在</li>
<li><code>hping3</code>: 测试网络及主机的安全</li>
<li><code>arping</code>: 通过发送ARP协议报文测试网络</li>
<li><code>tracepath</code>: 追踪目的主机经过的路由信息</li>
<li><code>traceroute</code>: 显示数据包到主机间的路径</li>
<li><code>host</code>: 域名查询</li>
<li><code>hostname</code>: 显示和设置系统的主机名</li>
<li><code>hostid</code>: 显示当前主机的十六进制数字标识, 用于软件授权</li>
<li><code>hostnamectl</code>: 查询或更改系统主机名</li>
<li><code>netstat</code>: 网络系统状态信息</li>
<li><code>wget</code>: 文件下载工具</li>
<li><code>curl</code>: URL 规则在命令行下工作的文件传输工具</li>
</ul>
<h3 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h3><p>实用指令</p>
<ul>
<li><code>date</code>: 查询&#x2F;手动设置系统日期和时间</li>
<li><code>ntpdate</code>: 使用网络计时协议 (NTP) 设置日期和时间</li>
</ul>
<h3 id="管理用户和组"><a href="#管理用户和组" class="headerlink" title="管理用户和组"></a>管理用户和组</h3><p>实用指令</p>
<ul>
<li><code>chage</code>: 修改密码时效策略和帐户过期的命令</li>
<li><code>gpasswd</code>: 管理 <code>/etc/group</code> 文件的命令</li>
<li><code>groupadd</code>: 添加组</li>
<li><code>grpck</code>: 验证 <code>/etc/group</code> <code>文件</code></li>
<li><code>groupdel</code>: 删除组</li>
<li><code>groupmod</code>: 修改组成员</li>
<li><code>pwck</code>: 验证 <code>/etc/passwd</code> 和 <code>/etc/shadow</code> 文件</li>
<li><code>pwconv</code>: 将标准密码转换为影子密码</li>
<li><code>pwunconv</code>: 将影子密码转换为标准密码</li>
<li><code>useradd</code>: 添加用户</li>
<li><code>userdel</code>: 删除用户</li>
<li><code>usermod</code>: 修改用户</li>
<li><code>newgrp</code>: 暂时更改登陆组</li>
</ul>
<p>配置文件</p>
<ul>
<li><code>/etc/group</code>: 包含系统组信息</li>
<li><code>/etc/passwd</code>: 包含系统用户信息</li>
<li><code>/etc/shadow</code>: 包含系统密码和帐户过期信息</li>
<li><code>/etc/login.defs</code>:包含影子密码套件配置</li>
<li><code>/etc/default/useradd</code>: 添加用户指令的默认值</li>
</ul>
<h3 id="特权提升"><a href="#特权提升" class="headerlink" title="特权提升"></a>特权提升</h3><p>实用指令</p>
<ul>
<li><code>su</code>: 输入密码切换到到 root 用户</li>
<li><code>sudo</code>: 使用 root 权限执行命令</li>
</ul>
<p>配置文件</p>
<ul>
<li><code>/etc/pam.d/su</code>: 包含 <code>su</code> 指令的限制, 取消注释<code> #auth required pam_wheel.so</code> , 将只允许 <strong>wheel</strong> 组使用该命令</li>
<li><code>/etc/sudoers</code>: 包含允许执行 <code>sudo</code> 指令的用户, 请阅读 <code>/etc/sudoers.d/README</code> 文件</li>
<li><code>/var/log/messages</code>: <code>sudo</code> 指令的日志记录</li>
</ul>
<h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><ul>
<li><code>arch</code>: 显示当前主机的硬件架构类型</li>
<li><code>lscpu</code>: 显示有关CPU架构的信息</li>
</ul>
<h3 id="资源与监控"><a href="#资源与监控" class="headerlink" title="资源与监控"></a>资源与监控</h3><p>实用指令</p>
<ul>
<li><code>vmstat</code>: 进程、内存、交换、I&#x2F;O、系统和 CPU 利用率</li>
<li><code>iostat</code>: 监视系统输入输出设备和CPU</li>
<li><code>sar</code>: 系统运行状态统计</li>
<li><code>top</code>: 显示或管理执行中的程序</li>
<li><code>top</code>: 显示或管理执行中的程序</li>
<li><code>iftop</code>: 实时流量监控</li>
<li><code>iotop</code>: 磁盘I&#x2F;O监视</li>
<li><code>ftptop</code>: 显示 proftpd 服务器的连接状态</li>
<li><code>slabtop</code>: 实时显示内核 slab 内存缓存信息</li>
<li><code>free</code>: 显示内存的使用情况</li>
<li><code>pmap</code>: 报告进程的内存映射关系</li>
<li><code>ipcs</code>: 分析消息队列共享内存和信号量</li>
</ul>
<h3 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h3><p>实用指令</p>
<ul>
<li>交换分区<ul>
<li><code>mkswap</code>: 建立和设置SWAP交换分区</li>
<li><code>swapon</code>: 激活Linux系统中交换空间</li>
<li><code>swapoff</code>: 关闭指定的交换空间</li>
</ul>
</li>
<li>磁盘信息<ul>
<li><code>df</code>: 显示磁盘的相关信息</li>
<li><code>fdisk</code>: 查看磁盘使用情况和磁盘分区</li>
<li><code>mkfs</code>: 在设备上创建 Linux 文件系统</li>
</ul>
</li>
<li>磁盘修复<ul>
<li><code>badblocks</code>: 查找磁盘中损坏的区块</li>
<li><code>fsck</code>: 检查并且试图修复文件系统中的错误</li>
<li><code>e2fsck</code>: 检查第二扩展文件系统的完整性</li>
</ul>
</li>
<li>磁盘配额<ul>
<li><code>quotacheck</code>: 检查磁盘的使用空间与限制</li>
<li><code>edquota</code>: 编辑指定用户或工作组磁盘配额</li>
</ul>
</li>
<li>逻辑卷<ul>
<li><code>vgdisplay</code>: 显示 LVM 卷组的信息</li>
<li><code>lvcreate</code>: 创建 LVM 卷组</li>
<li><code>lvremove</code>: 删除 LVM 卷组</li>
<li><code>vgcreate</code>: 创建 LVM 卷组</li>
<li><code>vgremove</code>: 用户删除 LVM 卷组</li>
<li><code>pvck</code>: 检测物理卷的 LVM 元数据的一致性</li>
</ul>
</li>
<li>文件挂载<ul>
<li><code>showmount</code>: 显示 NFS 服务器加载的信息</li>
<li><code>mount</code>: 挂载 Linux 系统外的文件</li>
<li><code>umount</code>: 卸载已经加载的文件系统</li>
</ul>
</li>
<li>备份<ul>
<li><code>dump</code>: 备份ext2或者ext3文件系统, 常用选项包含层级</li>
</ul>
</li>
</ul>
<p>配置文件</p>
<ul>
<li><code>/proc/swaps</code>: 存放 swap 空间</li>
<li><code>/etc/fstab</code>: 磁盘配置表, <a href="https://www.redhat.com/sysadmin/etc-fstab">参考</a></li>
<li><code>/etc/mtab</code>: 安装或卸载文件系统时, <code>mount</code> 程序都会更新该文件</li>
<li><code>/proc/mounts</code>: 进程虚拟文件系统的一部分, 查看所有已挂载的文件系统的状态</li>
</ul>
<h2 id="软件包管理"><a href="#软件包管理" class="headerlink" title="软件包管理"></a>软件包管理</h2><p>常见包管理器</p>
<ul>
<li><code>apt-get</code>: Debian Linux 发行版中的 APT 软件包管理工具. <code>/etc/apt/sources.list</code> 为源配置</li>
<li><code>aptitude</code>: Debian Linux 下的软件包管理工具</li>
<li><code>snap</code>: Snap 将应用程序打包包括任何外部依赖项, 并且应用程序在沙盒环境中运行</li>
<li><code>yum</code>: 在 Fedora 和 RedHat 以及 SUSE 中基于 RPM 的软件包管理器. <code>/etc/yum.repos.d/</code> 下为各种源配置文件</li>
<li><code>dnf</code>: 新一代的 RPM 软件包管理器. 取代了yum, 正式成为 Fedora 22 的包管理器</li>
<li><code>apk</code>: Alpine Linux 下的包管理工具</li>
<li><code>dpkg-deb</code>: Debian Linux 下的软件包管理工具</li>
</ul>
<p>Ubuntu 常用的为 <strong>snap</strong> 和 <strong>apt</strong>.</p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>实用指令</p>
<ul>
<li><code>logger</code>: 在系统日志中记录相应条目</li>
<li><code>logsave</code>: 将命令的输出信息保存到指定的日志文件</li>
<li><code>logrotate</code>: 系统日志进行轮转、压缩和删除</li>
<li><code>logwatch</code>: 可定制和可插入式的日志监视系统</li>
<li><code>tail</code>: 在屏幕上显示指定文件的末尾若干行, 使用 <strong>文件描述符</strong> 与 <strong>fstat 系统调用</strong>, 不可感知文件删除</li>
<li><code>tailf</code>: 在屏幕上显示指定文件的末尾若干行, 使用 <strong>文件名</strong> 与 <strong>stat 系统调用</strong>, 可感知文件删除</li>
</ul>
<p>日志文件</p>
<ul>
<li><code>/var/log/syslog</code>: 系统日志, 日志守护进程 <code>syslog</code>, 配置 <code>/etc/syslog.conf</code></li>
<li><code>/var/log/auth.log</code>: 授权日志</li>
<li><code>/var/log/kern.log</code>: 内核日志</li>
</ul>
<h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><h3 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h3><p>实用指令</p>
<ul>
<li><code>crontab</code>: 提交和管理用户的需要周期性执行的任务</li>
</ul>
<p>文件配置</p>
<ul>
<li><code>/etc/crontab</code>: 系统任务调度的配置</li>
<li><code>/var/spool/cron</code>: 用户任务调度的配置</li>
<li><code>/etc/cron.allow</code>: 所列用户允许使用 <code>crontab</code> 命令</li>
<li><code>/etc/cron.deny</code>: 所列用户不允许使用 <code>crontab</code> 命令</li>
</ul>
<p>服务</p>
<ul>
<li><code>/sbin/service crond</code>: crond 服务</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>速查</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 下错误集锦(持续更新)</title>
    <url>//2024/04/23/Linux-%E4%B8%8B%E9%94%99%E8%AF%AF%E9%9B%86%E9%94%A6-%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0/</url>
    <content><![CDATA[<h1 id="Linux-下错误集锦-持续更新"><a href="#Linux-下错误集锦-持续更新" class="headerlink" title="Linux 下错误集锦(持续更新)"></a>Linux 下错误集锦(持续更新)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>记录一些 Linux 中的错误, 供日常参考.</p>
<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="mlocate-卡住"><a href="#mlocate-卡住" class="headerlink" title="mlocate 卡住"></a>mlocate 卡住</h3><p>安装过程卡在 <code>Initializing mlocate database; this may take some time...</code>:
编辑 <code>/etc/updatedb.conf</code> , 将 <code>/mnt</code> 加入 <code>PRUNEPATHS</code>, 然后执行 <code>updatedb</code></p>
<h2 id="docker-相关"><a href="#docker-相关" class="headerlink" title="docker 相关"></a>docker 相关</h2><h3 id="IDEA-无法连接到-docker-上下文"><a href="#IDEA-无法连接到-docker-上下文" class="headerlink" title="IDEA 无法连接到 docker 上下文"></a>IDEA 无法连接到 docker 上下文</h3><p>错误 <code>Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running? (Details: [2] No such file or directory)</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将用户加入 docker 用户组</span></span><br><span class="line">sudo usermod -G docker siweipancc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询配置表</span></span><br><span class="line">cat /etc/group| grep docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看用户组</span></span><br><span class="line">id -Gn siweipancc</span><br><span class="line">sudo systemctl stop docker </span><br><span class="line">sudo dockerd</span><br></pre></td></tr></table></figure>


<span id="more"></span>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的基础使用I 枚举值</title>
    <url>//2024/06/04/Powershell-%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8I-%E6%9E%9A%E4%B8%BE%E5%80%BC/</url>
    <content><![CDATA[<h1 id="Powershell-的基础使用I-枚举值"><a href="#Powershell-的基础使用I-枚举值" class="headerlink" title="Powershell 的基础使用I 枚举值"></a>Powershell 的基础使用I 枚举值</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里是相关基础知识的<strong>枚举</strong>篇.</p>
<span id="more"></span>

<h2 id="基本设计"><a href="#基本设计" class="headerlink" title="基本设计"></a>基本设计</h2><p><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_enum?view=powershell-7.4">见官方</a></p>
<h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[&lt;attribute&gt;]...] enum &lt;enum-name&gt; : &lt;underlying-type-name&gt; &#123;</span><br><span class="line">    &lt;label&gt; [= &lt;int-value&gt;]</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>.</p>
<h3 id="用例1"><a href="#用例1" class="headerlink" title="用例1"></a>用例1</h3><p><a href="https://learn.microsoft.com/zh-cn/dotnet/fundamentals/runtime-libraries/system-enum#perform-conversions">另见转换</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">DELIVER</span></span> &#123;</span><br><span class="line">    Car</span><br><span class="line">    Trunk</span><br><span class="line">    Cargo</span><br><span class="line">&#125;</span><br><span class="line">[<span class="type">DELIVER</span>].GetEnumNames() </span><br><span class="line"><span class="comment"># Car</span></span><br><span class="line"><span class="comment"># Trunk</span></span><br><span class="line"><span class="comment"># Cargo</span></span><br><span class="line">[<span class="type">DELIVER</span>].GetEnumName(<span class="number">0</span>) <span class="comment"># Car</span></span><br><span class="line">[<span class="type">DELIVER</span>].GetEnumName(<span class="number">1</span>) <span class="comment"># Trunk</span></span><br><span class="line">[<span class="type">DELIVER</span>].GetEnumName(<span class="number">3</span>) <span class="comment"># Null</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car  <span class="comment"># Car</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car <span class="operator">-eq</span> <span class="number">0</span> <span class="comment"># True</span></span><br><span class="line">[<span class="type">DELIVER</span>]::CAR <span class="operator">-eq</span> <span class="number">0</span> <span class="comment"># True</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car <span class="operator">-eq</span> [<span class="type">DELIVER</span>]::Trunk <span class="comment"># False</span></span><br><span class="line">[<span class="built_in">int</span>][<span class="type">DELIVER</span>]::Car <span class="comment"># 0</span></span><br><span class="line">[<span class="type">DELIVER</span>]::ToObject([<span class="type">DELIVER</span>], <span class="number">2</span>) <span class="comment"># Cargo</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car <span class="operator">-eq</span> <span class="string">&quot;Car&quot;</span> <span class="comment"># True</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car <span class="operator">-eq</span> <span class="string">&quot;CAR&quot;</span> <span class="comment"># True</span></span><br><span class="line">[<span class="type">DELIVER</span>]::Car <span class="operator">-eq</span> <span class="string">&quot;Ben&quot;</span> <span class="comment"># false</span></span><br></pre></td></tr></table></figure>

<h3 id="用例2"><a href="#用例2" class="headerlink" title="用例2"></a>用例2</h3><p>控制控制台输出内容的颜色</p>
<p><a href="https://zh.wikipedia.org/wiki/ANSI%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97#3/4%E4%BD%8D">关于SGR</a>
<a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_special_characters?view=powershell-7.4#escape-e">关于转义符</a></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">SGR</span></span>&#123;</span><br><span class="line">    Black = <span class="number">30</span>   </span><br><span class="line">    Red = <span class="number">31</span>   </span><br><span class="line">    Green = <span class="number">32</span>   </span><br><span class="line">    Yellow = <span class="number">33</span>   </span><br><span class="line">    Blue = <span class="number">34</span>   </span><br><span class="line">    Magenta = <span class="number">35</span>   </span><br><span class="line">    Cyan = <span class="number">36</span>  </span><br><span class="line">    White = <span class="number">37</span>   </span><br><span class="line">    BrightBlack = <span class="number">90</span>   </span><br><span class="line">    BrightRed = <span class="number">91</span>   </span><br><span class="line">    BrightGreen = <span class="number">92</span>   </span><br><span class="line">    BrightYellow = <span class="number">93</span>   </span><br><span class="line">    BrightBlue = <span class="number">94</span></span><br><span class="line">    BrightMagenta = <span class="number">95</span>   </span><br><span class="line">    BrightCyan = <span class="number">96</span></span><br><span class="line">    BrightWhite = <span class="number">97</span>   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Format-Text</span></span> &#123;</span><br><span class="line">    <span class="keyword">param</span> (</span><br><span class="line">        [<span class="built_in">string</span>]<span class="variable">$str</span> ,</span><br><span class="line">        [<span class="type">SGR</span>]<span class="variable">$color</span> = [<span class="type">SGR</span>]::White</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-ne</span> <span class="variable">$str</span>) <span class="operator">-and</span> (<span class="string">&quot;&quot;</span> <span class="operator">-ne</span> <span class="variable">$str</span>.Trim())) &#123;</span><br><span class="line">        <span class="built_in">Write-Output</span> <span class="string">&quot;`e[<span class="variable">$</span>([int]<span class="variable">$color</span>)m<span class="variable">$str</span>`e[0m&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Format-Text</span> <span class="literal">-str</span> <span class="string">&#x27;Default?&#x27;</span></span><br><span class="line"><span class="built_in">Format-Text</span> <span class="literal">-str</span> <span class="string">&#x27;Blue?&#x27;</span> <span class="literal">-color</span> ([<span class="type">SGR</span>]::Blue)</span><br><span class="line"><span class="built_in">Format-Text</span> <span class="literal">-str</span> <span class="string">&#x27;Red?&#x27;</span> <span class="literal">-color</span> RED</span><br><span class="line"><span class="built_in">Format-Text</span> <span class="literal">-str</span> <span class="string">&#x27;Green?&#x27;</span> <span class="literal">-color</span> <span class="number">32</span></span><br><span class="line"><span class="built_in">Format-Text</span> <span class="literal">-color</span> Red</span><br><span class="line">SGR</span><br></pre></td></tr></table></figure>

<h3 id="一些小结"><a href="#一些小结" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>对于未定义 int-value 的, 使用 0 基底递增</li>
<li>根据下标获取枚举名, 失败时不会抛出错误, 如 <code>[DELIVER].GetEnumName(3)</code></li>
<li>枚举名与值只要对应, 都视为相等, 如 <code>[DELIVER]::Car -eq 0</code></li>
<li>可以强转枚举名到值, 如 <code>[int][DELIVER]::Car</code></li>
<li>对于使用比较运算符的, 会自动强转到对应的类型</li>
<li>对于使用比较运算符的, 如果自动强转到对应的类型失败, 不会有错误, 只会输出 <code>false</code>, 如 <code>[DELIVER]::Car -eq &quot;Ben&quot;</code></li>
<li>对于函数接收枚举的, 会自动强转到对应的类型</li>
<li>枚举名是大小写无关的</li>
<li>使用全限定访问符, 需要用括号, 如 <code>([SGR]::Blue)</code></li>
</ul>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的基础使用II 双引号与单引号以及特殊处理</title>
    <url>//2024/06/05/Powershell-%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8II-%E5%8F%8C%E5%BC%95%E5%8F%B7%E4%B8%8E%E5%8D%95%E5%BC%95%E5%8F%B7%E4%BB%A5%E5%8F%8A%E7%89%B9%E6%AE%8A%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="Powershell-的基础使用II-双引号与单引号以及特殊处理"><a href="#Powershell-的基础使用II-双引号与单引号以及特殊处理" class="headerlink" title="Powershell 的基础使用II 双引号与单引号以及特殊处理"></a>Powershell 的基础使用II 双引号与单引号以及特殊处理</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里是相关基础知识的<strong>双引号与单引号以及特殊处理</strong>篇.</p>
<span id="more"></span>

<h2 id="基本设计"><a href="#基本设计" class="headerlink" title="基本设计"></a>基本设计</h2><p><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_quoting_rules?view=powershell-7.4">见官方</a></p>
<p>基本分为模板形式(可扩展)与固定模式(逐字字符串).</p>
<h3 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$</span>(<span class="variable">$null</span> -eq <span class="variable">$a</span>)&quot;</span> <span class="comment"># True</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;123&quot;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$a</span> <span class="comment"># 123</span></span><br><span class="line"><span class="variable">$a</span> += <span class="string">&quot;4&quot;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$a</span> <span class="comment"># 1234</span></span><br><span class="line"><span class="comment"># $ a= &quot;$a5&quot; # 错误</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$</span>&#123;a&#125;5&quot;</span> <span class="comment"># 12345</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$</span>(<span class="variable">$a</span>)6&quot;</span> <span class="comment"># 12346</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$a</span> 7&quot;</span> <span class="comment"># 1234 7</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;<span class="variable">$a_8</span>&quot;</span> </span><br><span class="line"><span class="built_in">Write-Host</span> (<span class="string">&quot;&quot;</span> <span class="operator">-eq</span> <span class="string">&quot;<span class="variable">$a_8</span>&quot;</span>) </span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;`$a:<span class="variable">$a</span>&quot;</span> <span class="comment"># $a:1234</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span></span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;11&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$b</span> <span class="comment"># 1111</span></span><br><span class="line"><span class="variable">$b</span> += <span class="string">&#x27;21&#x27;</span> <span class="comment"># 1121</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$b</span></span><br><span class="line"><span class="variable">$b</span> += <span class="string">&#x27;$b&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="variable">$b</span> <span class="comment"># 1121$b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印 bc&quot;d (双引号与单引号/特殊字符)</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;abc&quot;d&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;abc&quot;</span><span class="string">&quot;d&quot;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;abc`&quot;d&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印 abc&#x27;d (双引号与单引号/特殊字符)</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;abc&#x27;</span><span class="string">&#x27;d&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印 abc`d (双引号与单引号/特殊字符)</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&#x27;abc`d&#x27;</span></span><br><span class="line"><span class="built_in">Write-Host</span> <span class="string">&quot;abc``d&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="一些小结"><a href="#一些小结" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>字符串可以使用 <code>+</code> 连结</li>
<li><code>&#39;</code>对包裹的字符串不参与任何处理</li>
<li><code>&quot;</code>对包裹的字符串<ul>
<li>涉及运算需要用 <code>$()</code>包裹, 内多层使用 <code>()</code>包裹</li>
<li>特殊字符需要使用符号 <strong>`</strong> 转义</li>
<li>如果需要输出  <strong>`** 本身, 需要两个 **`</strong> 符号</li>
<li>如果需要输出  <strong>&quot;</strong> 本身, 需要两个 <strong>&quot;</strong> 符号, 或者使用 <strong>`&quot;</strong></li>
</ul>
</li>
<li><code>&#39;</code>对包裹的字符串<ul>
<li>如果需要输出  <strong>&#39;</strong> 本身, 需要两个 <strong>&#39;</strong> 符号</li>
</ul>
</li>
</ul>
<h2 id="Here-string"><a href="#Here-string" class="headerlink" title="Here-string"></a>Here-string</h2><p>类似于模板语法</p>
<h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@&quot;&lt;Enter&gt;</span><br><span class="line">&lt;string&gt; [string] ...&lt;Enter&gt;</span><br><span class="line">&quot;@</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@&#x27;&lt;Enter&gt;</span><br><span class="line">&lt;string&gt; [string] ...&lt;Enter&gt;</span><br><span class="line">&#x27;@</span><br></pre></td></tr></table></figure>

<p><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_quoting_rules?view=powershell-7.4#here-strings">见官方</a>
<a href="https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/tokens/verbatim">另见</a></p>
<h3 id="用例1"><a href="#用例1" class="headerlink" title="用例1"></a>用例1</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@&quot;</span><br><span class="line">first line: symbo `` is taken account, but &#x27; and &quot; is not, `&quot; or `&#x27; is acceptable and here is double &quot;&quot; not single</span><br><span class="line">second line: is blank`nthird line: and then a new line</span><br><span class="line">last: $&#123;env:PUBLIC&#125; is also taken account</span><br><span class="line">btw: your timezone is $((Get-TimeZone).DisplayName) </span><br><span class="line">&quot;@</span><br></pre></td></tr></table></figure>

<p>输出为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">first line: symbo ` is taken account, but &#x27; and &quot; is not, &quot; or &#x27; is acceptable and here is double &quot;&quot; not single</span><br><span class="line">second line: is blank</span><br><span class="line">third line: and then a new line</span><br><span class="line">last: C:\Users\Public is also taken account</span><br><span class="line">btw: your timezone is (UTC+08:00) 北京，重庆，香港特别行政区，乌鲁木齐</span><br></pre></td></tr></table></figure>

<h3 id="用例2"><a href="#用例2" class="headerlink" title="用例2"></a>用例2</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@&#x27;</span><br><span class="line">first line: symbo ``, &#x27; and &quot; is not taken account, neither `&quot; nor `&#x27; but here is double &quot;&quot; / &#x27;&#x27; not single</span><br><span class="line">second line: is not blank`nthird line: is in fact second line</span><br><span class="line">last: $&#123;env:PUBLIC&#125; is used to get public foldeer</span><br><span class="line">btw: $((Get-TimeZone).DisplayName) is used to get TimeZone</span><br><span class="line">&#x27;@</span><br></pre></td></tr></table></figure>

<p>输出为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@&#x27;</span><br><span class="line">first line: symbo ``, &#x27; and &quot; is not taken account, neither `&quot; nor `&#x27; but here is double &quot;&quot; / &#x27;&#x27; not single</span><br><span class="line">second line: is not blank`nthird line: is in fact second line</span><br><span class="line">last: $&#123;env:PUBLIC&#125; is used to get public foldeer</span><br><span class="line">btw: $((Get-TimeZone).DisplayName) is used to get TimeZone</span><br><span class="line">&#x27;@</span><br></pre></td></tr></table></figure>

<h3 id="一些小结-1"><a href="#一些小结-1" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>使用双引号<code>@&quot;</code>下<ul>
<li>换行遵循书写输出</li>
<li>符号 <strong>‘</strong> 与 <strong>“</strong> 保持不变</li>
<li>转义符 <strong>&#96;</strong> 按照其在普通双引号字符串的规则发挥作用</li>
<li>诸如 <code>$()</code> 与 <code>$&#123;&#125;</code> 等语法按照其在普通双引号字符串的规则发挥作用</li>
</ul>
</li>
<li>使用单引号<code>@&#39;</code>下<ul>
<li>换行遵循书写输出</li>
<li>所有内容不参与处理</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的基础使用III 本质是 dotNet</title>
    <url>//2024/06/06/Powershell-%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8III-%E6%9C%AC%E8%B4%A8%E6%98%AF%20dotNet/</url>
    <content><![CDATA[<h1 id="Powershell-的基础使用III-本质是-dotNet"><a href="#Powershell-的基础使用III-本质是-dotNet" class="headerlink" title="Powershell 的基础使用III 本质是 dotNet"></a>Powershell 的基础使用III 本质是 dotNet</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里是相关基础知识的<strong>语言基础</strong>篇.</p>
<h2 id="Net-运行时"><a href="#Net-运行时" class="headerlink" title=".Net 运行时"></a>.Net 运行时</h2><p><strong>pwsh</strong> 依赖于 .Net 的运行时, 安装时便携带了基础的运行时, 使用以下指令获得运行时版本:
<code>[System.Runtime.InteropServices.RuntimeInformation]::FrameworkDescription</code>
或旧版本
<code>[System.Runtime.InteropServices.RuntimeEnvironment]::GetSystemVersion()</code></p>
<span id="more"></span>

<p>比如 Windows 自带的 v1 版本只能用第二种方式, 如输出 <code>v4.0.30319</code> 只能使用 .net4 的运行时, v7.4 则捆版了 <code>v8.0.4</code> 的运行时,
相应的,
可以使用对应的 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.net.http.json.jsoncontent?view=net-8.0">.dotnet8 api</a>
或者对应的 <a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.net.http.json.jsoncontent?view=netstandard-2.0">.dotnet standard-2.0 api</a></p>
<h2 id="用例1"><a href="#用例1" class="headerlink" title="用例1"></a>用例1</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using namespace System.Text.Json</span><br><span class="line"></span><br><span class="line">class Bus &#123;</span><br><span class="line">    [int]$len</span><br><span class="line">    [int]$size</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[System.Text.RegularExpressions.Regex]::Replace(&#x27;football&quot;`GO&#x27;,&#x27;[&quot;`]&#x27;,&quot;_&quot;)</span><br><span class="line">$ops = [JsonSerializerOptions]::new();</span><br><span class="line">$ops.MakeReadOnly($true)</span><br><span class="line">&quot;`$ops.IsReadOnly: $($ops.IsReadOnly)&quot;</span><br><span class="line">[Bus]$bus = [Bus]::new()</span><br><span class="line">$bus.size = 3</span><br><span class="line">$bus.len = 13</span><br><span class="line">$json = [JsonSerializer]::Serialize($bus, $ops);</span><br><span class="line">[JsonSerializer]::Deserialize($json, [Bus], $ops)</span><br></pre></td></tr></table></figure>

<h3 id="一些小结"><a href="#一些小结" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>像开发 C# 一样,可以引用 <code>namespace</code></li>
<li><code>[Bus]</code> 等效于 <code>typeof(Bus)</code></li>
<li><code>[int]</code> 本质等效于 <code>[System.UInt32]</code> ,
更多的参见<a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_type_accelerators?view=powershell-7.4">类型加速器</a></li>
</ul>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的基础使用IV 函数与注释</title>
    <url>//2024/06/07/Powershell-%E7%9A%84%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8IV-%E5%87%BD%E6%95%B0%E4%B8%8E%E6%B3%A8%E9%87%8A/</url>
    <content><![CDATA[<h1 id="Powershell-的基础使用IV-函数与注释"><a href="#Powershell-的基础使用IV-函数与注释" class="headerlink" title="Powershell 的基础使用IV 函数与注释"></a>Powershell 的基础使用IV 函数与注释</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这里是相关基础知识的<strong>函数与注释</strong>篇.</p>
<h2 id="基本函数语法规则"><a href="#基本函数语法规则" class="headerlink" title="基本函数语法规则"></a>基本函数语法规则</h2><span id="more"></span>
<p><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_functions?view=powershell-7.4">见基本函数</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function [&lt;scope:&gt;]&lt;name&gt; [([type]$parameter1[,[type]$parameter2])]</span><br><span class="line">&#123;</span><br><span class="line">  begin &#123;&lt;statement list&gt;&#125;</span><br><span class="line">  process &#123;&lt;statement list&gt;&#125;</span><br><span class="line">  end &#123;&lt;statement list&gt;&#125;</span><br><span class="line">  clean &#123;&lt;statement list&gt;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h3><p>根据定义, 可以很快写出一个基础的函数</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-Time</span><span class="params">([string]<span class="variable">$Zone</span> = &#x27;中国&#x27;)</span></span> &#123;</span><br><span class="line">    <span class="comment"># 获取与 UTC 的偏移量</span></span><br><span class="line">    <span class="variable">$offset</span> = <span class="built_in">Get-TimeZone</span> <span class="literal">-ListAvailable</span> | <span class="built_in">where-Object</span> &#123; <span class="variable">$_</span>.StandardName.Contains(<span class="variable">$Zone</span>) <span class="operator">-or</span> <span class="variable">$_</span>.DisplayName.Contains(<span class="variable">$Zone</span>) &#125; | <span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-eq</span> <span class="variable">$offset</span>) <span class="operator">-or</span> (<span class="string">&#x27;&#x27;</span> <span class="operator">-eq</span> <span class="variable">$offset</span>)) &#123;</span><br><span class="line">        <span class="built_in">Write-Error</span> <span class="string">&quot;请求的地区不存在: <span class="variable">$Zone</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#  UTC 时间</span></span><br><span class="line">    [<span class="built_in">datetime</span>]<span class="variable">$utc</span> = <span class="built_in">Get-Date</span> <span class="literal">-AsUTC</span></span><br><span class="line">    <span class="variable">$gs</span> = [<span class="type">regex</span>]::Match(<span class="variable">$offset</span>.BaseUtcOffset, <span class="string">&#x27;(?&lt;h&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;m&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;s&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;)&#x27;</span>).Groups</span><br><span class="line">    [<span class="built_in">int</span>]<span class="variable">$hour</span> = <span class="variable">$gs</span>[<span class="string">&#x27;h&#x27;</span>].Value</span><br><span class="line">    [<span class="built_in">int</span>]<span class="variable">$minute</span> = <span class="variable">$gs</span>[<span class="string">&#x27;m&#x27;</span>].Value</span><br><span class="line">    [<span class="built_in">int</span>]<span class="variable">$second</span> = <span class="variable">$gs</span>[<span class="string">&#x27;s&#x27;</span>].Value</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$utc</span>.AddHours(<span class="variable">$hour</span>).AddMinutes(<span class="variable">$minute</span>).AddSeconds(<span class="variable">$second</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-Time</span></span><br><span class="line"><span class="built_in">Get-Time</span> -<span class="variable">$Zone</span> <span class="string">&#x27;俄罗斯&#x27;</span></span><br><span class="line"><span class="built_in">Get-Time</span> <span class="string">&#x27;澳大利亚&#x27;</span></span><br><span class="line"><span class="variable">$hk</span> = <span class="string">&#x27;香港&#x27;</span> | <span class="built_in">Get-Time</span></span><br><span class="line">[<span class="built_in">DateTime</span><span class="type">Offset</span>]::new(<span class="variable">$hk</span>).ToUnixTimeMilliseconds()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>或者以下形式</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-Time</span></span> &#123;</span><br><span class="line">    <span class="keyword">param</span>(</span><br><span class="line">        [<span class="type">parameter</span>(<span class="type">ValueFromPipeline</span>)]</span><br><span class="line">        [<span class="built_in">string</span>]<span class="variable">$Zone</span> = <span class="string">&#x27;中国&#x27;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">begin</span> &#123;</span><br><span class="line">        <span class="comment">#  UTC 时间</span></span><br><span class="line">        [<span class="built_in">datetime</span>]<span class="variable">$utc</span> = <span class="built_in">Get-Date</span> <span class="literal">-AsUTC</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">process</span> &#123;</span><br><span class="line">        <span class="comment"># 获取与 UTC 的偏移量</span></span><br><span class="line">        <span class="variable">$offset</span> = <span class="built_in">Get-TimeZone</span> <span class="literal">-ListAvailable</span> | <span class="built_in">where-Object</span> &#123; <span class="variable">$_</span>.StandardName.Contains(<span class="variable">$Zone</span>) <span class="operator">-or</span> <span class="variable">$_</span>.DisplayName.Contains(<span class="variable">$Zone</span>) &#125; | <span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-eq</span> <span class="variable">$offset</span>) <span class="operator">-or</span> (<span class="string">&#x27;&#x27;</span> <span class="operator">-eq</span> <span class="variable">$offset</span>)) &#123;</span><br><span class="line">            <span class="built_in">Write-Error</span> <span class="string">&quot;请求的地区不存在: <span class="variable">$Zone</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$gs</span> = [<span class="type">regex</span>]::Match(<span class="variable">$offset</span>.BaseUtcOffset, <span class="string">&#x27;(?&lt;h&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;m&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;s&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;)&#x27;</span>).Groups</span><br><span class="line">        <span class="variable">$out</span> = <span class="variable">$utc</span>.AddHours(<span class="variable">$gs</span>[<span class="string">&#x27;h&#x27;</span>].Value).AddMinutes(<span class="variable">$gs</span>[<span class="string">&#x27;m&#x27;</span>].Value).AddSeconds(<span class="variable">$gs</span>[<span class="string">&#x27;s&#x27;</span>].Value)</span><br><span class="line">        <span class="variable">$out</span> | <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Zone <span class="literal">-Value</span> <span class="variable">$Zone</span></span><br><span class="line">        <span class="variable">$out</span> | <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Present <span class="literal">-Value</span> <span class="variable">$out</span>.ToString()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">end</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-Time</span></span><br><span class="line"><span class="built_in">Get-Time</span> <span class="literal">-Zone</span> 中国</span><br><span class="line"><span class="selector-tag">@</span>(<span class="string">&#x27;悉尼&#x27;</span> , <span class="string">&#x27;东京&#x27;</span>, <span class="string">&#x27;俄罗斯&#x27;</span>) | <span class="built_in">Get-Time</span> | <span class="built_in">Select-Object</span> <span class="literal">-Property</span> <span class="selector-tag">@</span>(<span class="string">&#x27;Zone&#x27;</span>, <span class="string">&#x27;Present&#x27;</span>) | <span class="built_in">Format-Table</span></span><br><span class="line"><span class="variable">$h</span> = <span class="built_in">Get-Time</span>  <span class="string">&#x27;香港&#x27;</span></span><br><span class="line">[<span class="built_in">DateTime</span><span class="type">Offset</span>]::new(<span class="variable">$h</span>).ToUnixTimeMilliseconds()</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-Time</span></span><br><span class="line"><span class="built_in">Get-Time</span> <span class="literal">-Zone</span> 中国</span><br><span class="line"><span class="selector-tag">@</span>(<span class="string">&#x27;悉尼&#x27;</span> , <span class="string">&#x27;东京&#x27;</span>, <span class="string">&#x27;俄罗斯&#x27;</span>) | <span class="built_in">Get-Time</span> | <span class="built_in">Select-Object</span> <span class="literal">-Property</span> <span class="selector-tag">@</span>(<span class="string">&#x27;Zone&#x27;</span>, <span class="string">&#x27;Present&#x27;</span>) | <span class="built_in">Format-Table</span></span><br><span class="line"><span class="variable">$h</span> = <span class="built_in">Get-Time</span>  <span class="string">&#x27;香港&#x27;</span></span><br><span class="line">[<span class="built_in">DateTime</span><span class="type">Offset</span>]::new(<span class="variable">$h</span>).ToUnixTimeMilliseconds()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这个函数输出对应地区的时间, 还输出了香港地区的时间戳:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024年6月16日 10:46:35</span><br><span class="line">2024年6月16日 10:46:35</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Zone   Present</span><br><span class="line">----   -------</span><br><span class="line">悉尼   2024/6/16 12:46:35</span><br><span class="line">东京   2024/6/16 11:46:35</span><br><span class="line">俄罗斯 2024/6/16 4:46:35</span><br><span class="line"></span><br><span class="line">1718534795735</span><br></pre></td></tr></table></figure>

<h4 id="一些小结"><a href="#一些小结" class="headerlink" title="一些小结"></a>一些小结</h4><ul>
<li>函数可以使用第一种最简化的版本, 默认支持管道</li>
<li>可以变换到第二个版本, 需要在 process 块执行, 同时注意到需要高级参数 <code>ValueFromPipeline</code>, <code>where-Object</code>
中的过滤当前对象默认是 <code>$_</code>, 而管道块当前迭代对象也是 <code>$_</code>, 使用该参数之后函数的管道值将指向参数 <code>$Zone</code></li>
<li><strong>begin</strong> 在多管道时只运行一次, 这里使用了共享参数 <code>$utc</code>, 见 <a href="#%E5%A2%9E%E5%8A%A0%E5%BC%80%E5%85%B3%E5%8F%82%E6%95%B0">增加开关参数</a></li>
</ul>
<h2 id="增加开关参数"><a href="#增加开关参数" class="headerlink" title="增加开关参数"></a>增加开关参数</h2><p>增加一个标记,打印当前请求的地区信息</p>
<p>修改上边的代码, 增加入参, 修改 <code>begin</code> 与 <code>process</code>, <code>clean</code> 块中的代码</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-Time</span></span> &#123;</span><br><span class="line">    <span class="keyword">param</span>(</span><br><span class="line">        [<span class="type">parameter</span>(<span class="type">ValueFromPipeline</span>)]</span><br><span class="line">        [<span class="built_in">string</span>]<span class="variable">$Zone</span> = <span class="string">&#x27;中国&#x27;</span>,</span><br><span class="line">        [<span class="type">switch</span>]</span><br><span class="line">        <span class="variable">$PrintReq</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">begin</span> &#123;</span><br><span class="line">        <span class="comment">#  UTC 时间</span></span><br><span class="line">        [<span class="built_in">datetime</span>]<span class="variable">$utc</span> = <span class="built_in">Get-Date</span> <span class="literal">-AsUTC</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[33m初始化 UTC 的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">process</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[34m正在获取 [<span class="variable">$Zone</span>] 地区的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 获取与 UTC 的偏移量</span></span><br><span class="line">        <span class="variable">$offset</span> = <span class="built_in">Get-TimeZone</span> <span class="literal">-ListAvailable</span> | <span class="built_in">where-Object</span> &#123; <span class="variable">$_</span>.StandardName.Contains(<span class="variable">$Zone</span>) <span class="operator">-or</span> <span class="variable">$_</span>.DisplayName.Contains(<span class="variable">$Zone</span>) &#125; | <span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-eq</span> <span class="variable">$offset</span>) <span class="operator">-or</span> (<span class="string">&#x27;&#x27;</span> <span class="operator">-eq</span> <span class="variable">$offset</span>)) &#123;</span><br><span class="line">            <span class="built_in">Write-Error</span> <span class="string">&quot;请求的地区不存在: <span class="variable">$Zone</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$gs</span> = [<span class="type">regex</span>]::Match(<span class="variable">$offset</span>.BaseUtcOffset, <span class="string">&#x27;(?&lt;h&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;m&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;s&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;)&#x27;</span>).Groups</span><br><span class="line">        <span class="variable">$out</span> = <span class="variable">$utc</span>.AddHours(<span class="variable">$gs</span>[<span class="string">&#x27;h&#x27;</span>].Value).AddMinutes(<span class="variable">$gs</span>[<span class="string">&#x27;m&#x27;</span>].Value).AddSeconds(<span class="variable">$gs</span>[<span class="string">&#x27;s&#x27;</span>].Value)</span><br><span class="line">        <span class="variable">$out</span> | </span><br><span class="line">            <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Zone <span class="literal">-Value</span> <span class="variable">$Zone</span> <span class="literal">-PassThru</span> | </span><br><span class="line">            <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Present <span class="literal">-Value</span> <span class="variable">$out</span>.ToString()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">end</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[35m关闭函数`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-Time</span> <span class="literal">-PrintReq</span></span><br><span class="line"><span class="selector-tag">@</span>(<span class="string">&#x27;悉尼&#x27;</span> , <span class="string">&#x27;东京&#x27;</span>, <span class="string">&#x27;俄罗斯&#x27;</span>) | <span class="built_in">Get-Time</span> <span class="literal">-PrintReq</span> | <span class="built_in">Select-Object</span> <span class="literal">-Property</span> <span class="selector-tag">@</span>(<span class="string">&#x27;Zone&#x27;</span>, <span class="string">&#x27;Present&#x27;</span>) | <span class="built_in">Format-Table</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上边的输出为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">初始化 UTC 的时间</span><br><span class="line">正在获取 [中国] 地区的时间</span><br><span class="line"></span><br><span class="line">2024年6月16日 11:00:26</span><br><span class="line">关闭函数</span><br><span class="line">初始化 UTC 的时间</span><br><span class="line">正在获取 [悉尼] 地区的时间</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">正在获取 [东京] 地区的时间</span><br><span class="line">正在获取 [俄罗斯] 地区的时间</span><br><span class="line">关闭函数</span><br><span class="line">Zone   Present</span><br><span class="line">----   -------</span><br><span class="line">悉尼   2024/6/16 13:00:26</span><br><span class="line">东京   2024/6/16 12:00:26</span><br><span class="line">俄罗斯 2024/6/16 5:00:26</span><br></pre></td></tr></table></figure>

<h3 id="一些小结-1"><a href="#一些小结-1" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>可以观察到, <code>初始化</code> 只输出了两次, 在管道流的初始化, <code>关闭</code> 同理, 如果只使用 <code>Get-Time</code>,<code>$PrintReq</code> 会初始化为 <code>False</code></li>
<li>使用开关参数避免了手动输入 <code>-PrintReq $true</code> 的尴尬局面</li>
<li><code>-PassThru</code> 也是一个开关参数, 返回管道中的 <code>$_</code> 对象</li>
</ul>
<h2 id="增加参数校验"><a href="#增加参数校验" class="headerlink" title="增加参数校验"></a>增加参数校验</h2><p>避免手动检查抛错, 选择用高级参数限制输入, 对以上的函数, 仅做 非空检查即可</p>
<p>修改之后的函数为:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-Time</span></span> &#123;</span><br><span class="line">    <span class="keyword">param</span>(</span><br><span class="line">        [<span class="type">parameter</span>(<span class="type">ValueFromPipeline</span>)]</span><br><span class="line">        [<span class="type">ValidateNotNullOrWhiteSpace</span>()]</span><br><span class="line">        [<span class="built_in">string</span>]<span class="variable">$Zone</span> = <span class="string">&#x27;中国&#x27;</span>,</span><br><span class="line">        [<span class="type">switch</span>]</span><br><span class="line">        <span class="variable">$PrintReq</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">begin</span> &#123;</span><br><span class="line">        <span class="comment">#  UTC 时间</span></span><br><span class="line">        [<span class="built_in">datetime</span>]<span class="variable">$utc</span> = <span class="built_in">Get-Date</span> <span class="literal">-AsUTC</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[33m初始化 UTC 的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">process</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[34m正在获取 [<span class="variable">$Zone</span>] 地区的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 获取与 UTC 的偏移量</span></span><br><span class="line">        <span class="variable">$offset</span> = <span class="built_in">Get-TimeZone</span> <span class="literal">-ListAvailable</span> | <span class="built_in">where-Object</span> &#123; <span class="variable">$_</span>.StandardName.Contains(<span class="variable">$Zone</span>) <span class="operator">-or</span> <span class="variable">$_</span>.DisplayName.Contains(<span class="variable">$Zone</span>) &#125; | <span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-eq</span> <span class="variable">$offset</span>) <span class="operator">-or</span> (<span class="string">&#x27;&#x27;</span> <span class="operator">-eq</span> <span class="variable">$offset</span>)) &#123;</span><br><span class="line">            <span class="built_in">Write-Error</span> <span class="string">&quot;请求的地区不存在: <span class="variable">$Zone</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$gs</span> = [<span class="type">regex</span>]::Match(<span class="variable">$offset</span>.BaseUtcOffset, <span class="string">&#x27;(?&lt;h&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;m&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;s&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;)&#x27;</span>).Groups</span><br><span class="line">        <span class="variable">$out</span> = <span class="variable">$utc</span>.AddHours(<span class="variable">$gs</span>[<span class="string">&#x27;h&#x27;</span>].Value).AddMinutes(<span class="variable">$gs</span>[<span class="string">&#x27;m&#x27;</span>].Value).AddSeconds(<span class="variable">$gs</span>[<span class="string">&#x27;s&#x27;</span>].Value)</span><br><span class="line">        <span class="variable">$out</span> | </span><br><span class="line">        <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Zone <span class="literal">-Value</span> <span class="variable">$Zone</span> <span class="literal">-PassThru</span> | </span><br><span class="line">        <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Present <span class="literal">-Value</span> <span class="variable">$out</span>.ToString()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">end</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[35m关闭函数`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Get-Time</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">Get-Time</span> <span class="literal">-Zone</span> <span class="string">&#x27;  &#x27;</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> [<span class="type">System.Management.Automation.ParameterBindingException</span>] &#123;</span><br><span class="line">    [<span class="type">System.Management.Automation.ParameterBindingException</span>]<span class="variable">$e</span> = <span class="variable">$_</span>.Exception;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;检测到参数错误, 错误参数: <span class="variable">$</span>(<span class="variable">$e</span>.ParameterName)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;检测到运行错误: <span class="variable">$</span>(<span class="variable">$_</span>.Exception.Message)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用 <code>Get-Time - &#39; &#39;</code> 将得到一个校验错误: 如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024年6月16日 11:47:00</span><br><span class="line">检测到参数错误, 错误参数: Zone</span><br></pre></td></tr></table></figure>

<h3 id="一些小结-2"><a href="#一些小结-2" class="headerlink" title="一些小结"></a>一些小结</h3><ul>
<li>参数校验以 <strong>Validate</strong> 开始</li>
<li>参数校验抛出的错误为 <strong>ParameterBindingException</strong> 类</li>
<li>使用 <code>try--catch</code> 捕捉错误</li>
</ul>
<h2 id="完善函数声明与注释"><a href="#完善函数声明与注释" class="headerlink" title="完善函数声明与注释"></a>完善函数声明与注释</h2><p>以下是完整的函数</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;# </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;# </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.SYNOPSIS</span></span></span><br><span class="line"><span class="comment">获取地区时间</span></span><br><span class="line"><span class="comment"><span class="doctag">.DESCRIPTION</span></span></span><br><span class="line"><span class="comment">根据指定地区, 获取地区时间, 默认为中国</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.PARAMETER Zone</span> </span></span><br><span class="line"><span class="comment">指定地区</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.PARAMETER PrintReq</span> </span></span><br><span class="line"><span class="comment">输出 debug 信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.OUTPUTS</span></span></span><br><span class="line"><span class="comment">datetime 地区时间</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.LINK</span></span></span><br><span class="line"><span class="comment">https://learn.microsoft.com/en-us/dotnet/api/system.datetime?view=net-8.0</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.LINK</span></span></span><br><span class="line"><span class="comment">https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/get-timezone?view=powershell-7.4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.EXAMPLE</span></span></span><br><span class="line"><span class="comment">Get-Time</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.EXAMPLE</span></span></span><br><span class="line"><span class="comment">Get-Time &#x27;美国&#x27;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.EXAMPLE</span></span></span><br><span class="line"><span class="comment">Get-Time -Zone &#x27;美国&#x27;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"><span class="doctag">.INPUTS</span> </span></span><br><span class="line"><span class="comment">地区信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Get-Time</span></span> &#123;</span><br><span class="line">    <span class="keyword">param</span>(</span><br><span class="line">        [<span class="type">parameter</span>(<span class="type">ValueFromPipeline</span>, <span class="type">Mandatory</span> = <span class="variable">$false</span>, <span class="type">Position</span> = <span class="number">0</span>)]</span><br><span class="line">        [<span class="type">ValidateNotNullOrWhiteSpace</span>()]</span><br><span class="line">        [<span class="built_in">string</span>]<span class="variable">$Zone</span> = <span class="string">&#x27;中国&#x27;</span>,</span><br><span class="line">        [<span class="type">switch</span>]</span><br><span class="line">        <span class="variable">$PrintReq</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">begin</span> &#123;</span><br><span class="line">        <span class="comment">#  UTC 时间</span></span><br><span class="line">        [<span class="built_in">datetime</span>]<span class="variable">$utc</span> = <span class="built_in">Get-Date</span> <span class="literal">-AsUTC</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[33m初始化 UTC 的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">process</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[34m正在获取 [<span class="variable">$Zone</span>] 地区的时间`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 获取与 UTC 的偏移量</span></span><br><span class="line">        <span class="variable">$offset</span> = <span class="built_in">Get-TimeZone</span> <span class="literal">-ListAvailable</span> | <span class="built_in">where-Object</span> &#123; <span class="variable">$_</span>.StandardName.Contains(<span class="variable">$Zone</span>) <span class="operator">-or</span> <span class="variable">$_</span>.DisplayName.Contains(<span class="variable">$Zone</span>) &#125; | <span class="built_in">Select-Object</span> <span class="literal">-First</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$null</span> <span class="operator">-eq</span> <span class="variable">$offset</span>) <span class="operator">-or</span> (<span class="string">&#x27;&#x27;</span> <span class="operator">-eq</span> <span class="variable">$offset</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="string">&quot;请求的地区不存在: <span class="variable">$Zone</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$gs</span> = [<span class="type">regex</span>]::Match(<span class="variable">$offset</span>.BaseUtcOffset, <span class="string">&#x27;(?&lt;h&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;m&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;):(?&lt;s&gt;[+-]&#123;0,1&#125;\d&#123;2&#125;)&#x27;</span>).Groups</span><br><span class="line">        <span class="variable">$out</span> = <span class="variable">$utc</span>.AddHours(<span class="variable">$gs</span>[<span class="string">&#x27;h&#x27;</span>].Value).AddMinutes(<span class="variable">$gs</span>[<span class="string">&#x27;m&#x27;</span>].Value).AddSeconds(<span class="variable">$gs</span>[<span class="string">&#x27;s&#x27;</span>].Value)</span><br><span class="line">        <span class="variable">$out</span> | </span><br><span class="line">        <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Zone <span class="literal">-Value</span> <span class="variable">$Zone</span> <span class="literal">-PassThru</span> | </span><br><span class="line">        <span class="built_in">Add-Member</span> <span class="literal">-MemberType</span> NoteProperty <span class="literal">-Name</span> Present <span class="literal">-Value</span> <span class="variable">$out</span>.ToString()</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">end</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$PrintReq</span>) &#123;</span><br><span class="line">            <span class="built_in">Write-Host</span> <span class="string">&quot;`e[35m关闭函数`e[0m&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="built_in">Get-Time</span> <span class="string">&#x27;未知&#x27;</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> [<span class="type">System.Management.Automation.ParameterBindingException</span>] &#123;</span><br><span class="line">    [<span class="type">System.Management.Automation.ParameterBindingException</span>]<span class="variable">$e</span> = <span class="variable">$_</span>.Exception;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;检测到参数错误, 错误参数: <span class="variable">$</span>(<span class="variable">$e</span>.ParameterName)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> &#123;</span><br><span class="line">    <span class="built_in">Write-Host</span> <span class="string">&quot;检测到运行错误: <span class="variable">$</span>(<span class="variable">$_</span>.Exception.Message)&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Get-Help</span> <span class="built_in">Get-Time</span> <span class="literal">-Full</span></span><br></pre></td></tr></table></figure>

<p>以及输出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">检测到运行错误: 请求的地区不存在: 未知</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">    Get-Time</span><br><span class="line">    </span><br><span class="line">SYNOPSIS</span><br><span class="line">    获取地区时间</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">SYNTAX</span><br><span class="line">    Get-Time [[-Zone] &lt;String&gt;] [-PrintReq] [&lt;CommonParameters&gt;]</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">DESCRIPTION</span><br><span class="line">    根据指定地区, 获取地区时间, 默认为中国</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">PARAMETERS</span><br><span class="line">    -Zone &lt;String&gt;</span><br><span class="line">        指定地区</span><br><span class="line">        </span><br><span class="line">        Required?                    false</span><br><span class="line">        Position?                    1</span><br><span class="line">        Default value                中国</span><br><span class="line">        Accept pipeline input?       true (ByValue)</span><br><span class="line">        Accept wildcard characters?  false</span><br><span class="line"></span><br><span class="line">    -PrintReq [&lt;SwitchParameter&gt;]</span><br><span class="line">        输出 debug 信息</span><br><span class="line"></span><br><span class="line">        Required?                    false</span><br><span class="line">        Position?                    named</span><br><span class="line">        Default value                False</span><br><span class="line">        Accept pipeline input?       false</span><br><span class="line">        Accept wildcard characters?  false</span><br><span class="line"></span><br><span class="line">    &lt;CommonParameters&gt;</span><br><span class="line">        This cmdlet supports the common parameters: Verbose, Debug,</span><br><span class="line">        ErrorAction, ErrorVariable, WarningAction, WarningVariable,</span><br><span class="line">        OutBuffer, PipelineVariable, and OutVariable. For more information, see</span><br><span class="line">        about_CommonParameters (https://go.microsoft.com/fwlink/?LinkID=113216).</span><br><span class="line"></span><br><span class="line">INPUTS</span><br><span class="line">    地区信息</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OUTPUTS</span><br><span class="line">    datetime 地区时间</span><br><span class="line"></span><br><span class="line">    -------------------------- EXAMPLE 1 --------------------------</span><br><span class="line"></span><br><span class="line">    PS &gt; Get-Time</span><br><span class="line"></span><br><span class="line">    -------------------------- EXAMPLE 2 --------------------------</span><br><span class="line"></span><br><span class="line">    PS &gt; Get-Time &#x27;美国&#x27;</span><br><span class="line"></span><br><span class="line">    -------------------------- EXAMPLE 3 --------------------------</span><br><span class="line"></span><br><span class="line">    PS &gt; Get-Time -Zone &#x27;美国&#x27;</span><br><span class="line"></span><br><span class="line">RELATED LINKS</span><br><span class="line">    https://learn.microsoft.com/en-us/dotnet/api/system.datetime?view=net-8.0</span><br><span class="line">    https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.management/get-timezone?view=powershell-7.4</span><br></pre></td></tr></table></figure>

<h2 id="额外资料"><a href="#额外资料" class="headerlink" title="额外资料"></a>额外资料</h2><ul>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_automatic_variables?view=powershell-7.4#_">自动变量 $_</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_arrays?view=powershell-7.4">数组</a></li>
<li><a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_type_accelerators?view=powershell-7.4">类型加速器</a></li>
<li><a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/add-member?view=powershell-7.4">Add-Member 方法</a></li>
<li><a href="https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/format-table?view=powershell-7.4">Format-Table 方法</a></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.datetime?view=net-8.0">DateTime 类</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/dotnet/api/system.text.regularexpressions.regex?view=netstandard-2.1">Regex 类</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_try_catch_finally?view=powershell-7.4">try–catch $_</a></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.validateargumentsattribute?view=powershellsdk-7.4.0">ValidateArgumentsAttribute 类</a></li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.management.automation.parameterbindingexception?view=powershellsdk-7.4.0">ParameterBindingException 类</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_comment_based_help?view=powershell-7.4">基于注释的帮助</a></li>
</ul>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的哈希方法</title>
    <url>//2024/09/30/Powershell-%E7%9A%84%E5%93%88%E5%B8%8C%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Powershell-的哈希方法"><a href="#Powershell-的哈希方法" class="headerlink" title="Powershell 的哈希方法"></a>Powershell 的哈希方法</h1><p>最近写脚本需要用到文件与内容哈希, 在这里作下速记.</p>
<h2 id="文件哈希-与-字符哈徐"><a href="#文件哈希-与-字符哈徐" class="headerlink" title="文件哈希 与 字符哈徐"></a>文件哈希 与 字符哈徐</h2><p>pwsh
原生支持文件哈希 <a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.utility/get-filehash">Get-FileHash</a>,
但是字符哈希需要手动调用 <strong>C#</strong> 模块 :</p>
<ol>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.getbytes?view=net-8.0">UTF8Encoding</a>: 将文本转换为字节数组</li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.md5?view=net-8.0">MD5</a>: 加密字节数组</li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.bitconverter?view=net-8.0">BitConverter</a>: 将字节数组转为字符串</li>
</ol>
<span id="more"></span>

<h3 id="简单的用例"><a href="#简单的用例" class="headerlink" title="简单的用例"></a>简单的用例</h3><p>以下命令在临时文件夹生成临时文件并写入 <strong>$PSHOME</strong> 属性</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">sl $env:TMP</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">fn = <span class="string">&quot;<span class="subst">$(New-Guid)</span>.txt&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">PSHOME |Set-Content -LiteralPath <span class="string">&quot;<span class="variable">$fn</span>&quot;</span> -NoNewline</span></span><br><span class="line">Get-FileHash -Algorithm MD5 -Path $fn | Select-Object -ExpandProperty &#x27;Hash&#x27; | Tee-Object  -Variable hashOfCmd</span><br><span class="line">Invoke-Item $fn -whatIf</span><br><span class="line">[System.Text.UTF8Encoding]::UTF8.GetBytes((Get-Content &#x27;4c4b6320-7937-467c-8d25-a55a3835aa03.txt&#x27;)) | Set-Variable bits</span><br><span class="line">[System.Security.Cryptography.MD5]::Create().ComputeHash($bits)| Set-Variable hash</span><br><span class="line">[System.BitConverter]::ToString($hash).Replace(&#x27;-&#x27;,&#x27;&#x27;) | Tee-Object  -Variable hashOfMethod</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hashOfCmd -eq <span class="variable">$hashOfMethod</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><ol>
<li>pwsh 运行时自动加载目录下的 dll , 可通过 <code>Invoke-Item $PSHOME</code> 确认</li>
<li>pwsh 运行时加载的 dll , 可通过 <code>[Threading.Thread]::GetDomain().GetAssemblies()</code> 确认</li>
</ol>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的知识串联I PSDrive 与 PSProvider</title>
    <url>//2024/09/30/Powershell-%E7%9A%84%E7%9F%A5%E8%AF%86%E4%B8%B2%E8%81%94I-PSDrive-%E4%B8%8E-PSProvider/</url>
    <content><![CDATA[<h1 id="Powershell-的知识串联I-PSDrive-与-PSProvider"><a href="#Powershell-的知识串联I-PSDrive-与-PSProvider" class="headerlink" title="Powershell 的知识串联I PSDrive 与 PSProvider"></a>Powershell 的知识串联I PSDrive 与 PSProvider</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>微软在官方文档中对 <strong>PSDrive</strong> 的描述不尽深入</p>
<ol>
<li>PSDrive: 显示由提供程序公开的驱动器与 Windows 逻辑驱动器</li>
<li>PSProvider: 一种允许文件系统访问数据存储的接口</li>
</ol>
<p>这些驱动与接口跟以下命令相关:</p>
<ol>
<li><a href="https://go.microsoft.com/fwlink/?LinkID=2096702">*-Alias</a>: 操作命令别名</li>
<li><a href="https://go.microsoft.com/fwlink/?LinkID=2096812">*-Item</a>: 操作文件,注册表等</li>
<li><a href="https://go.microsoft.com/fwlink/?LinkID=2096711">*-Variable</a>: 操作变量</li>
</ol>
<h2 id="PSDrive-与-PSDrive"><a href="#PSDrive-与-PSDrive" class="headerlink" title="PSDrive 与 PSDrive"></a>PSDrive 与 PSDrive</h2><p><code>Get-PSProvider</code> 一般给我们输出以下结果:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Capabilities</th>
<th>Drives</th>
</tr>
</thead>
<tbody><tr>
<td>Registry</td>
<td>ShouldProcess</td>
<td>{HKLM, HKCU}</td>
</tr>
<tr>
<td>Alias</td>
<td>ShouldProcess</td>
<td>{Alias}</td>
</tr>
<tr>
<td>Environment</td>
<td>ShouldProcess</td>
<td>{Env}</td>
</tr>
<tr>
<td>FileSystem</td>
<td>Filter, ShouldProcess, Credentials</td>
<td>{C, D}</td>
</tr>
<tr>
<td>Function</td>
<td>ShouldProcess</td>
<td>{Function}</td>
</tr>
<tr>
<td>Variable</td>
<td>ShouldProcess</td>
<td>{Variable}</td>
</tr>
<tr>
<td>Certificate</td>
<td>ShouldProcess</td>
<td>{Cert}</td>
</tr>
<tr>
<td>WSMan</td>
<td>Credentials</td>
<td>{WSMan}</td>
</tr>
</tbody></table>
<span id="more"></span>

<p><code>Get-PSDrive</code> 则给我们输出以下结果:</p>
<table>
<thead>
<tr>
<th>Name</th>
<th>Used (GB)</th>
<th>Free (GB)</th>
<th>Provider</th>
<th>Root</th>
</tr>
</thead>
<tbody><tr>
<td>Alias</td>
<td></td>
<td></td>
<td>Alias</td>
<td></td>
</tr>
<tr>
<td>C</td>
<td>145.31</td>
<td>33.75</td>
<td>FileSystem</td>
<td>C:\</td>
</tr>
<tr>
<td>Cert</td>
<td></td>
<td></td>
<td>Certificate</td>
<td>\</td>
</tr>
<tr>
<td>D</td>
<td>124.35</td>
<td>161.19</td>
<td>FileSystem</td>
<td>D:\</td>
</tr>
<tr>
<td>Env</td>
<td></td>
<td></td>
<td>Environment</td>
<td></td>
</tr>
<tr>
<td>Function</td>
<td></td>
<td></td>
<td>Function</td>
<td></td>
</tr>
<tr>
<td>HKCU</td>
<td></td>
<td></td>
<td>Registry</td>
<td>HKEY_CURRENT_USER</td>
</tr>
<tr>
<td>HKLM</td>
<td></td>
<td></td>
<td>Registry</td>
<td>HKEY_LOCAL_MACHINE</td>
</tr>
<tr>
<td>Temp</td>
<td>145.31</td>
<td>33.75</td>
<td>FileSystem</td>
<td>C:\Users\Sie\AppData\Local\Temp\</td>
</tr>
<tr>
<td>Variable</td>
<td></td>
<td></td>
<td>Variable</td>
<td></td>
</tr>
<tr>
<td>WSMan</td>
<td></td>
<td></td>
<td>WSMan</td>
<td></td>
</tr>
</tbody></table>
<h2 id="Alias-驱动器"><a href="#Alias-驱动器" class="headerlink" title="Alias 驱动器"></a>Alias 驱动器</h2><ol>
<li><code>Get-Alias</code> 的效果与 <code>Get-ChildItem Alias:</code> 是一致的</li>
<li>相似的 <code>Get-ChildItem Alias:cls</code> 等同于 <code>Get-Alias cls</code></li>
<li>上边的两种方式都返回 <strong>System.Management.Automation.AliasInfo</strong> 对象(数组)</li>
</ol>
<h2 id="Variable-驱动器"><a href="#Variable-驱动器" class="headerlink" title="Variable 驱动器"></a>Variable 驱动器</h2><ol>
<li><code>Get-ChildItem Variable:</code>
在全新的会话中,可以获得自动变量<sup>1</sup>列表 与 首选项变量<sup>2</sup>列表</li>
<li><code>Set-Variable -Name newOne -Value 1</code>  与 <code>New-Item -Path Variable:newOne -Value 1</code> 和 <code>$newOne=1</code> 是一致的</li>
<li><code>Remove-Item Variable:newOne</code> 与 <code>Remove-Variable newOne</code> 和 <code>$newOne=$null</code> 是一致的</li>
<li><code>(Set-Variable -Name newVar -Value 1 -PassThru) -eq (Get-Item Variable:newVar)</code> 的结果为 <strong>true</strong></li>
<li><code>Set-Variable -Name newO -Value 1 -PassThru | foreach &#123; $newO; Remove-Item &quot;Variable:$($_.Name)&quot;; $newO -eq $null &#125;</code>
输出 <strong>1</strong> 和 <strong>true</strong></li>
</ol>
<h2 id="Env-驱动器"><a href="#Env-驱动器" class="headerlink" title="Env 驱动器"></a>Env 驱动器</h2><ol>
<li><code>$env:PATH</code> 与 <code>[System.Environment]::GetEnvironmentVariable(&#39;Path&#39;)</code> 可以获得计算机的 <strong>PATH</strong></li>
<li><code>New-Item -Path &quot;Temp:$(New-Guid).txt&quot;</code> 与 <code>New-Item -Path  (Join-Path $env:TMP &quot;$(New-Guid).txt&quot;)</code> 是一致的</li>
</ol>
<h3 id="持久化环境变量"><a href="#持久化环境变量" class="headerlink" title="持久化环境变量"></a>持久化环境变量</h3><ol>
<li><code>[Environment]::SetEnvironmentVariable(&#39;Foo&#39;, &#39;Bar&#39;, &#39;Machine&#39;)</code>: 设置到计算机域中</li>
<li>对于 <code>pwsh</code> 会话,<code>notepad $PROFILE</code><sup>3</sup>,添加 <code>$Env:Foo=&#39;Bar&#39;</code></li>
<li>使用高级系统属性: <code>&amp; SystemPropertiesAdvanced.exe</code></li>
</ol>
<h2 id="HKLM-与-HKCU-驱动器"><a href="#HKLM-与-HKCU-驱动器" class="headerlink" title="HKLM 与 HKCU 驱动器"></a>HKLM 与 HKCU 驱动器</h2><ol>
<li>这两个都由 <strong>Registry</strong> 提供, 关联 <strong>regedit.exe</strong> 编辑器, 可由 <code>Set-Location HKLM:</code> 进入</li>
<li><code>Get-Item -Path HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem | Set-Variable fs -PassThru | % &#123;$fs.GetValueNames()&#125;  | Select-Object @&#123;n=&#39;键&#39;;e=&#123;$_&#125;&#125;,@&#123;n=&#39;值&#39;;e=&#123;$fs.GetValue($_)&#125;&#125;</code>
打印 <code>FileSystem</code> 路径下的所有键值对, 包含常见的长路径定义 <strong>LongPathsEnabled</strong></li>
</ol>
<h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><ol>
<li><code>Get-ChildItem Variable:</code> 返回的列表不可再声明, 如 <strong>$input</strong> 是后台任务 <strong>Job</strong> 的一个单一输入</li>
<li><code>Import-Module $moduleName</code> 可用于导入 <strong>PSProvider</strong> 和 <strong>PSDrive</strong></li>
</ol>
<h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><ol>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_automatic_variables">自动变量列表</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_preference_variables">首选项变量列表</a></li>
<li><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_profiles">$PROFILE 文件</a></li>
</ol>
]]></content>
      <categories>
        <category>Powershell</category>
      </categories>
      <tags>
        <tag>Powershell</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 Node 快速搭建文件服务器</title>
    <url>//2024/09/30/%E4%BD%BF%E7%94%A8-Node-%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="使用-Node-快速搭建文件服务器"><a href="#使用-Node-快速搭建文件服务器" class="headerlink" title="使用 Node 快速搭建文件服务器"></a>使用 Node 快速搭建文件服务器</h1><h2 id="http-server"><a href="#http-server" class="headerlink" title="http-server"></a>http-server</h2><p><a href="https://www.npmjs.com/package/http-server">http-server</a> 提供开箱即用的 文件服务器</p>
<h2 id="用例"><a href="#用例" class="headerlink" title="用例"></a>用例</h2><span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install http-server -g </span><br><span class="line">http-server -p 3300</span><br><span class="line">curl &quot;http://127.0.0.1:3300/package.json&quot; </span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Node</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的数据结构 Array</title>
    <url>//2024/10/02/Powershell-%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-Array/</url>
    <content><![CDATA[<h1 id="Powershell-的数据结构-Array"><a href="#Powershell-的数据结构-Array" class="headerlink" title="Powershell 的数据结构 Array"></a>Powershell 的数据结构 Array</h1><p> 简要说明, 数组是 <strong>pwsh</strong> 对 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.array">System.Array</a> 的包装</p>
<h2 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h2><p>创建一般以 <code>@()</code> 格式, 列表是<strong>不可变的</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data = @()</span> </span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">null -eq <span class="variable">$data</span>[9000] <span class="comment"># no exception</span></span></span><br><span class="line">Get-Member -InputObject $data</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data.IsFixedSize</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data.GetHashCode()</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data +=1</span> </span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data.GetHashCode()</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v1 = ,1</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v2 = 1,2</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v3 = @(1,2,3)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v4 = 3..5</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v5 = <span class="string">&#x27;a&#x27;</span>..<span class="string">&#x27;i&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v6 = 1..-2</span></span><br><span class="line"><span class="meta prompt_">[char[]]$</span><span class="language-bash">v7= <span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">table = [ordered]@&#123;</span></span><br><span class="line">  &#x27;v1&#x27;=$v1</span><br><span class="line">  &#x27;v2&#x27;=$v2</span><br><span class="line">  &#x27;v3&#x27;=$v3</span><br><span class="line">  &#x27;v4&#x27;=$v4</span><br><span class="line">  &#x27;v5&#x27;=$v5</span><br><span class="line">  &#x27;v6&#x27;=$v6</span><br><span class="line">  &#x27;v7&#x27;=$v7</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="variable">$table</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">table.Values.ForEach(&#123;<span class="variable">$_</span>.GetType()&#125;)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v7 -as [int32[]]</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">65</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">66</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v7[0] -as [int32] <span class="comment"># 65</span></span></span><br><span class="line"> @(66,69,71).ForEach([char]) </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">B</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">E</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">G</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v3[-1]</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v5[-1,-3]</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">i</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">g</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v5[-1..-3]</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">i</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">h</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">g</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">v5[2,3+5..7]</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">c</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">d</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">f</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">g</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">h</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>


<h2 id="可变数组与效率"><a href="#可变数组与效率" class="headerlink" title="可变数组与效率"></a>可变数组与效率</h2><p>使用 <code>System.Collections.Generic</code> 与 <code>System.Linq</code> 优化代码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">using namespace System.Collections.Generic</span><br><span class="line">using namespace System.Linq</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">list = [List[string]]::new(([int32]::MaxValue)/<span class="number">2</span>)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">s = Get-Date</span></span><br><span class="line">do&#123;</span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">cur +=<span class="number">1</span></span></span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">list.Add(&#x27;AS&#x27;)</span></span><br><span class="line">&#125;until ($cur -eq 20000)</span><br><span class="line">(Get-Date) - $s</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">s = Get-Date</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">list.AddRange([Enumerable]::Repeat(&#x27;BS&#x27;,<span class="number">20000</span>)) <span class="comment"># 更快</span></span></span><br><span class="line">(Get-Date) - $s</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">list[0..2]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="一些要点"><a href="#一些要点" class="headerlink" title="一些要点"></a>一些要点</h2><h3 id="eq-ne-遇上数组"><a href="#eq-ne-遇上数组" class="headerlink" title="-eq &#x2F;-ne 遇上数组"></a>-eq &#x2F;-ne 遇上数组</h3><p><code>-eq</code> 运算符对前边的<strong>每一项</strong>进行对比返回匹配的值而<strong>不是布尔值</strong>, 对于含有 <code>$null</code> 值的序列, 需要注意调用顺序 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">Array= @(<span class="variable">$null</span>)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">Array.Length</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">Array -eq <span class="variable">$null</span> <span class="comment"># 空输出</span></span></span><br><span class="line">(@(&#x27;one&#x27;,$null,&#x27;three&#x27;) -eq $null).Length </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1</span></span><br><span class="line">(@(&#x27;one&#x27;,$null,&#x27;three&#x27;) -eq $null).GetType() </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Object[]</span></span><br><span class="line">(@(&#x27;one&#x27;,$null,&#x27;three&#x27;) -eq $null)[0] -eq $null </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">True</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">null -eq <span class="variable">$Array</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="literal">false</span></span></span><br><span class="line">[Object]::Equals($Array,$null) </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="literal">false</span></span></span><br><span class="line"></span><br><span class="line">@(1,$null,3) | foreach (&#123; &quot;$($_ ; $null -eq $_)&quot; &#125;)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1 False</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">True</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3 False</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data = @(<span class="string">&#x27;op&#x27;</span>,<span class="string">&#x27;gx&#x27;</span>,<span class="string">&#x27;ii&#x27;</span>)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data -ne <span class="string">&#x27;gx&#x27;</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">op</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ii</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="join-replace-split"><a href="#join-replace-split" class="headerlink" title="-join -replace -split"></a>-join -replace -split</h3><p>这些属于字符串方法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">@(1,2,3) -join &#x27;-&#x27;</span><br><span class="line">[string]::Join(&quot;-&quot;,@(1,2,3))</span><br><span class="line">Join-String -InputObject @(1,2,3) -Separator &#x27;-&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1-2-3</span> </span><br><span class="line">Join-String -InputObject @(1,2,3) -Separator &#x27;-&#x27; -OutputPrefix &quot;@&quot; -OutputSuffix &quot;.txt&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">@1-2-3.txt</span></span><br><span class="line">@(&quot;PPPE-203&quot;,&quot;MUKC-077&quot;) -split &#x27;-&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PPPE</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">203</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MUKC</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">077</span></span><br><span class="line">@(&quot;PPPE-203&quot;,&quot;MUKC-077&quot;) -replace &#x27;-&#x27;,&#x27;_&#x27;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">PPPE_203</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">MUKC_077</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="contains-in-match"><a href="#contains-in-match" class="headerlink" title="-contains -in -match"></a>-contains -in -match</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> @(1,2,3) -contains 1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="literal">true</span></span></span><br><span class="line">1 -in  @(1,2,3)</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="literal">true</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data  = <span class="string">&#x27;game loaded with P1&#x27;</span>,<span class="string">&#x27;game unload with P2&#x27;</span>,<span class="string">&#x27;game exits&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">data -match <span class="string">&quot;\w?load&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">game loaded with P1</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">game unload with P2</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">m = <span class="string">&#x27;game unload with P2&#x27;</span> -match <span class="string">&#x27;game\s(?&lt;status&gt;\w*load)\swith\sP(?&lt;player&gt;\d+)&#x27;</span></span></span><br><span class="line"><span class="meta prompt_">if($</span><span class="language-bash">m)&#123;</span></span><br><span class="line"><span class="meta prompt_">  $</span><span class="language-bash">Matches</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>categorized</category>
      </categories>
      <tags>
        <tag>untagged</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的数据结构 Hashtable</title>
    <url>//2024/10/03/Powershell-%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-Hashtable/</url>
    <content><![CDATA[<h1 id="Powershell-的数据结构-Hashtable"><a href="#Powershell-的数据结构-Hashtable" class="headerlink" title="Powershell 的数据结构 Hashtable"></a>Powershell 的数据结构 Hashtable</h1><p>简要说明, 无序哈希表是 <strong>pwsh</strong> 对 <a href="https://learn.microsoft.com/en-us/dotnet/api/system.collections.hashtable">System.Collections.Hashtable</a> 的包装,
无序哈希表是 <strong>pwsh</strong> 对 [<a href="https://learn.microsoft.com/en-us/dotnet/api/system.collections.specialized.ordereddictionary">https://learn.microsoft.com/en-us/dotnet/api/system.collections.specialized.ordereddictionary</a>) 的包装</p>
<h2 id="文法结构"><a href="#文法结构" class="headerlink" title="文法结构"></a>文法结构</h2><p>无序哈希表: <code>@&#123; &lt;name1&gt; = &lt;value1&gt;; [&lt;name2&gt; = &lt;value2&gt; ] ...&#125;</code></br>
无序哈希表: <code>[ordered]@&#123; &lt;name1&gt; = &lt;value1&gt;; [&lt;name2&gt; = &lt;value2&gt; ] ...&#125;</code></p>
<h2 id="创建方式"><a href="#创建方式" class="headerlink" title="创建方式"></a>创建方式</h2><span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">hash</span> = @&#123; Shape = <span class="string">&quot;Circle&quot;</span>; Len = 2;   Color= <span class="string">&quot;Blue&quot;</span>&#125;</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">orderedHash = [ordered]@&#123; Shape = <span class="string">&quot;Circle&quot;</span>; Len = 2;   Color= <span class="string">&quot;Blue&quot;</span>&#125;</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">hash</span>[<span class="string">&#x27;Len&#x27;</span>]</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash"><span class="built_in">hash</span> +=@&#123;Car=<span class="string">&#x27;Bike&#x27;</span>&#125;</span> </span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hash.Add(<span class="string">&#x27;driver&#x27;</span>,<span class="string">&#x27;Steve&#x27;</span>)</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hash.GetEnumerator()| Sort-Object &#123;<span class="variable">$_</span>.Key&#125; -Descending</span></span><br></pre></td></tr></table></figure>


<h2 id="特用"><a href="#特用" class="headerlink" title="特用"></a>特用</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">using namespace System.Text</span><br><span class="line">[UTF8Encoding]@&#123;&#125;</span><br><span class="line">[UTF32Encoding]::new()</span><br><span class="line">[StringBuilder]@&#123;capacity=24&#125;</span><br><span class="line">Get-Process|Sort-Object -Property &#123;$_.VM&#125; -Descending| Select-Object -First 20 -Property @&#123;l=&#x27;PID&#x27;;e=&#123;$_.id&#125;&#125;,@&#123;n=&#x27;进程名&#x27;;e=&#123;$_.ProcessName&#125;&#125;| Sort-Object &#x27;PID&#x27;</span><br><span class="line">Get-Process| Where-Object &#123;$_.ProcessName.StartsWith(&#x27;run&#x27;,$true,$null)&#125;| Format-Table -GroupBy ProcessName -Property &#x27;Id&#x27;,&#x27;ProcessName&#x27;,&#x27;StartTime&#x27;,@&#123;n=&#x27;物理内存/bits&#x27;;e=&#123;$_.WorkingSet64&#125;&#125;</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">persist = @<span class="string">&quot;</span></span></span><br><span class="line"> size = 12</span><br><span class="line"> msg = yap,&quot;A bad idea&quot;</span><br><span class="line"> notArrays = 1,2,3</span><br><span class="line">&quot;@</span><br><span class="line">ConvertFrom-StringData $persist | % &#123;$_.GetEnumerator()&#125; | ft -Property &#x27;Key&#x27;,&#x27;Value&#x27;,@&#123;l=&#x27;Value`s Type&#x27;;e=&#123;$_.Value.GetType()&#125;&#125;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">Key  Value        Value`s Type</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">---  -----        ------------</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">size 12           System.String</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">msg  &quot;</span>A bad idea<span class="string">&quot; System.String</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">ids  @(1,23)      System.String</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>categorized</category>
      </categories>
      <tags>
        <tag>untagged</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 使用交互UI获取用户选择的文件(夹)</title>
    <url>//2024/10/20/C#-%E4%BD%BF%E7%94%A8%E4%BA%A4%E4%BA%92UI%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E9%80%89%E6%8B%A9%E7%9A%84%E6%96%87%E4%BB%B6-%E5%A4%B9/</url>
    <content><![CDATA[<h1 id="C-使用交互UI获取用户选择的文件-夹"><a href="#C-使用交互UI获取用户选择的文件-夹" class="headerlink" title="C# 使用交互UI获取用户选择的文件(夹)"></a>C# 使用交互UI获取用户选择的文件(夹)</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在写桌面应用, 记录以下如何使用 WIN 的原生 ui 获取用用户输入的文件与文件夹</p>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>桌面交互依赖于 (WinForm)[<a href="https://learn.microsoft.com/zh-cn/dotnet/desktop/winforms/overview/?view=netdesktop-8.0%5D">https://learn.microsoft.com/zh-cn/dotnet/desktop/winforms/overview/?view=netdesktop-8.0]</a></p>
<h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><ul>
<li>目标框架加上 <strong>-windows</strong></li>
<li>使用 WinForm</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">&quot;Microsoft.NET.Sdk&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>Exe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">LangVersion</span>&gt;</span>12<span class="tag">&lt;/<span class="name">LangVersion</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImplicitUsings</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">ImplicitUsings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Nullable</span>&gt;</span>enable<span class="tag">&lt;/<span class="name">Nullable</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--指向 windows 桌面--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>net8.0-windows<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--使用桌面表单功能--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">UseWindowsForms</span>&gt;</span>true<span class="tag">&lt;/<span class="name">UseWindowsForms</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul>
<li>声明 <strong>[STAThread]</strong></li>
</ul>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">[<span class="meta">STAThread</span>]</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> dialog = <span class="keyword">new</span> FolderBrowserDialog();</span><br><span class="line">    <span class="keyword">var</span> result = dialog.ShowDialog();</span><br><span class="line">    Console.WriteLine(result == DialogResult.OK ? <span class="string">$&quot;选择的文件夹为: <span class="subst">&#123;dialog.SelectedPath&#125;</span>&quot;</span> : <span class="string">&quot;请选择一个合法文件夹&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> openFileDialog = <span class="keyword">new</span> OpenFileDialog();</span><br><span class="line">    <span class="keyword">var</span> oResult = openFileDialog.ShowDialog();</span><br><span class="line">    Console.WriteLine(oResult == DialogResult.OK ? <span class="string">$&quot;选择的文件为: <span class="subst">&#123;openFileDialog.FileName&#125;</span>&quot;</span> : <span class="string">&quot;请打开一个合法文件&quot;</span>);</span><br><span class="line"></span><br><span class="line">    Console.WriteLine(<span class="string">&quot;按任意键退出&quot;</span>);</span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="注"><a href="#注" class="headerlink" title="注"></a>注</h2><ul>
<li><a href="https://github.com/siweipancc/learn-day/blob/master/CSharp/console/GetSelectFile">示例工程</a></li>
</ul>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
</search>
